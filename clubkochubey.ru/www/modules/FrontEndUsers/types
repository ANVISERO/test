action.addgroup.php:3:#-------------------------------------------------------------------------
action.addgroup.php:10:#-------------------------------------------------------------------------
action.addgroup.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.addgroup.php:14:#-------------------------------------------------------------------------
action.addgroup.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.addgroup.php:36:#-------------------------------------------------------------------------
action.addgroup.php:107:$gid = -1;
action.addgroup.php:110:if( !$this->_HasSufficientPermissions( 'addgroup' ) )
action.addgroup.php:112:    $this->_DisplayErrorPage($id, $params, $returnid,
action.addgroup.php:113:			     $this->Lang('accessdenied'));
action.addgroup.php:119:  $tmp = $this->GetPropertyDefns();
action.addgroup.php:122:      $this->_DisplayErrorPage($id, $params, $returnid,
action.addgroup.php:123:			       $this->Lang('error_noproperties'));
action.addgroup.php:129:      $rec['lostun'] = -1;
action.addgroup.php:138:    $ginfo = $this->GetGroupInfo($gid);
action.addgroup.php:141:	$this->_DisplayErrorPage($id, $params, $returnid,
action.addgroup.php:142:				 $this->Lang('error_groupnotfound'));
action.addgroup.php:149:    $res = $this->GetGroupPropertyRelations($gid);
action.addgroup.php:153:	$this->_DisplayErrorPage($id, $params, $returnid,
action.addgroup.php:154:				 $this->Lang('error_nogroupproperties'));
action.addgroup.php:186:    $this->myRedirectToTab($id, 'groups' );
action.addgroup.php:212:    $idx = (int)$params['moveup'] - 1;
action.addgroup.php:213:    swap($params['input_name'][$idx],$params['input_name'][$idx-1]);
action.addgroup.php:240:    $idx = (int)$params['movedown'] - 1;
action.addgroup.php:249:    $this->myRedirect($id,'do_addgroup',$returnid,$params);
action.addgroup.php:255:    $smarty->assign('error',$params['error']);
action.addgroup.php:259:    $smarty->assign('message',$params['message']);
action.addgroup.php:261:$smarty->assign('title', $this->Lang('addgroup'));
action.addgroup.php:264:    $smarty->assign('hidden',$this->CreateInputHidden($id,'group_id',$gid));
action.addgroup.php:265:    $smarty->assign('title', $this->Lang('editgroup'));
action.addgroup.php:267:$smarty->assign ('startform',
action.addgroup.php:268:		       $this->CreateFormStart ($id,
action.addgroup.php:271:$smarty->assign ('endform', $this->CreateFormEnd ());
action.addgroup.php:272:$smarty->assign ('submit',
action.addgroup.php:273:		       $this->CreateInputSubmit ($id, 'submit',
action.addgroup.php:274:						 $this->Lang('submit')));
action.addgroup.php:275:$smarty->assign ('cancel',
action.addgroup.php:276:		       $this->CreateInputSubmit ($id, 'cancel',
action.addgroup.php:277:						 $this->Lang('cancel')));
action.addgroup.php:279:$smarty->assign ('prompt_groupname',
action.addgroup.php:280:		       $this->Lang ('name'));
action.addgroup.php:281:$smarty->assign ('input_groupname',
action.addgroup.php:282:		       $this->CreateInputText ($id, 'input_groupname',
action.addgroup.php:284:$smarty->assign ('prompt_groupdesc',
action.addgroup.php:285:		       $this->Lang ('description'));
action.addgroup.php:286:$smarty->assign ('input_groupdesc',
action.addgroup.php:287:		       $this->CreateInputText ($id, 'input_groupdesc',
action.addgroup.php:293:$keys = array_keys($this->types);
action.addgroup.php:294:$options = array( $this->Lang('off') => 0,
action.addgroup.php:295:		  $this->Lang('optional') => 1,
action.addgroup.php:296:		  $this->Lang('required') => 2,
action.addgroup.php:297:		  $this->Lang('hidden') => 3,
action.addgroup.php:298:		  $this->Lang('readonly') => 4);
action.addgroup.php:300:$img_up = $gCms->variables['admintheme']->DisplayImage('icons/system/sort_up.gif',
action.addgroup.php:301:						       $this->Lang('move_up','','','systemicon'));
action.addgroup.php:302:$img_down = $gCms->variables['admintheme']->DisplayImage('icons/system/sort_down.gif',
action.addgroup.php:303:						       $this->Lang('move_down','','','systemicon'));
action.addgroup.php:309:  $onerow->name = $defn['name'];
action.addgroup.php:310:  $onerow->prompt = $defn['prompt'];
action.addgroup.php:311:  $onerow->type = $this->Lang($keys[$defn['type']]);
action.addgroup.php:312:  $onerow->hidden = '<div>'.$this->CreateInputHidden($id,'input_name[]',$defn['name']).'</div>';
action.addgroup.php:313:  //$onerow->sortorder = $this->CreateInputText( $id, 'input_sortorder_'.$defn['name'], $sortorder, 3, 2 );
action.addgroup.php:314:  //$onerow->required = $this->CreateInputDropdown( $id, 'input_required_'.$defn['name'], $options );
action.addgroup.php:315:  $onerow->required = $this->CreateInputDropdown( $id, 'input_required[]', $options,
action.addgroup.php:316:						  -1, $defn['required']);
action.addgroup.php:319:      $onerow->moveup = $this->CreateInputSubmit($id,'moveup',$sortorder,'',
action.addgroup.php:324:      $onerow->movedown = $this->CreateInputSubmit($id,'movedown',$sortorder,'',
action.addgroup.php:330:      $onerow->askinlostun .=
action.addgroup.php:331:	$this->CreateInputCheckbox( $id, 'input_lostun_'.$defn['name'], 1, $defn['lostun'] );
action.addgroup.php:338:$smarty->assign('props', $rowarray);
action.addgroup.php:339:$smarty->assign('propcount',count($rowarray));
action.addgroup.php:340:$smarty->assign('sortordertext', $this->Lang('sortorder'));
action.addgroup.php:341:$smarty->assign('nametext',$this->Lang('name'));
action.addgroup.php:342:$smarty->assign('prompttext', $this->Lang('prompt'));
action.addgroup.php:343:$smarty->assign('typetext',$this->Lang('type'));
action.addgroup.php:344:$smarty->assign('fieldstatustext',$this->Lang('fieldstatus'));
action.addgroup.php:345:$smarty->assign('usedinlostuntext',$this->Lang('usedinlostun'));
action.addgroup.php:348:echo $this->ProcessTemplate ('addgroup.tpl');
action.addprop.php:3:#-------------------------------------------------------------------------
action.addprop.php:10:#-------------------------------------------------------------------------
action.addprop.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.addprop.php:14:#-------------------------------------------------------------------------
action.addprop.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.addprop.php:36:#-------------------------------------------------------------------------
action.addprop.php:41:if( !$this->_HasSufficientPermissions( 'addprop' ) )
action.addprop.php:43:    $this->_DisplayErrorPage($id, $params, $returnid,
action.addprop.php:44:			     $this->Lang('accessdenied'));
action.addprop.php:51:$fieldtypes = $this->langifyKeys($this->types);
action.addprop.php:52:$title = $this->Lang('addprop');
action.addprop.php:72:    $this->myRedirectToTab($id, 'properties' );
action.addprop.php:78:    $title = $this->Lang('editprop',$propname);
action.addprop.php:79:    $defn = $this->GetPropertyDefn($propname);
action.addprop.php:84:	$parms['mesage'] = $this->Lang('error_propnotfound');
action.addprop.php:85:	$this->myRedirectToTab($id,'properties',$parms);
action.addprop.php:88:    $tmp = $this->GetSelectOptions($propname);
action.addprop.php:125:    $defn['name'] = str_replace('-','_',$defn['name']);
action.addprop.php:152:	$message = $this->Lang('error_invalidparams');
action.addprop.php:201:	  $message = $this->Lang('error_invalidparams');
action.addprop.php:209:	    $this->DeleteSelectOptions($propname);
action.addprop.php:212:	$tmp = $this->AddSelectOptions($defn['name'],$options);
action.addprop.php:229:	    $tmp = $this->SetPropertyDefn( $propname, $defn['name'], $defn['prompt'], $defn['type'], $defn['length'], $defn['maxlength'], $defn['attribs'] );
action.addprop.php:234:	    $tmp = $this->AddPropertyDefn( $defn['name'], $defn['prompt'], $defn['type'], $defn['length'], $defn['maxlength'], $defn['attribs'] );
action.addprop.php:245:	$this->myRedirectToTab( $id, 'properties' );
action.addprop.php:258:    $smarty->assign('error',1);
action.addprop.php:262:    $smarty->assign('message',$message);
action.addprop.php:264:$smarty->assign('startform',$this->CreateFormStart($id,'addprop',$returnid,'post','',false,'',$params));
action.addprop.php:265:$smarty->assign('endform',$this->CreateFormEnd());
action.addprop.php:266:$smarty->assign('title',$title);
action.addprop.php:267:$smarty->assign('prompt_name',$this->Lang('name'));
action.addprop.php:268:$smarty->assign('info_name',$this->Lang('info_name'));
action.addprop.php:269:$smarty->assign('input_name',
action.addprop.php:270:		$this->CreateInputText($id,'input_name',$defn['name'], 30, 30 ));
action.addprop.php:271:$smarty->assign('prompt_prompt',$this->Lang('prompt'));
action.addprop.php:272:$smarty->assign('input_prompt',
action.addprop.php:273:		$this->CreateInputText($id,'input_prompt',$defn['prompt'], 80, 255 ));
action.addprop.php:274:$smarty->assign('prompt_type',$this->Lang('type'));
action.addprop.php:275:$smarty->assign('input_type',  
action.addprop.php:276:		$this->CreateInputDropdown( $id, 'input_type', $fieldtypes, -1, $defn['type'],
action.addprop.php:278:$smarty->assign('orig_type',  
action.addprop.php:279:		$this->CreateInputHidden($id, 'orig_type', $defn['type']));
action.addprop.php:280:$smarty->assign ('submit',
action.addprop.php:281:		 $this->CreateInputSubmit ($id, 'submit', $this->Lang('submit') ));
action.addprop.php:282:$smarty->assign ('cancel',
action.addprop.php:283:		 $this->CreateInputSubmit ($id, 'cancel',$this->Lang('cancel')));
action.addprop.php:289:    $flds[] = array($this->Lang('length').$this->Lang('lengthcomment'),
action.addprop.php:290:		    $this->CreateInputText($id,'input_length',$defn['length'],3,3));
action.addprop.php:291:    $flds[] = array($this->Lang('maxlength'),
action.addprop.php:292:		    $this->CreateInputText($id,'input_maxlength',$defn['maxlength'],3,3));
action.addprop.php:296:    $flds[] = array($this->Lang('prop_textarea_wysiwyg'),
action.addprop.php:297:		    $this->CreateInputHidden($id,'input_attrib_wysiwyg','0').
action.addprop.php:298:		    $this->CreateInputCheckbox($id,'input_attrib_wysiwyg','1',$val));;
action.addprop.php:302:    $flds[] = array($this->Lang('seloptions'),
action.addprop.php:303:		    $this->CreateTextArea(false,$id,$seloptions,'input_seloptions'));
action.addprop.php:306:    $flds[] = array($this->Lang('length').$this->Lang('lengthcomment'),
action.addprop.php:307:		    $this->CreateInputText($id,'input_length',$defn['length'],3,3));
action.addprop.php:308:    //$flds[] = array($this->Lang('size').'&nbsp;'.$this->Lang('sizecomment'),
action.addprop.php:309:    //$this->CreateInputText($id,'input_length',$defn['length'],3,3));
action.addprop.php:312:    $flds[] = array($this->Lang('radiooptions'),
action.addprop.php:313:		    $this->CreateTextArea(false,$id,$seloptions,'input_radiooptions'));
action.addprop.php:316:    $flds[] = array($this->Lang('start_year').':',
action.addprop.php:317:		   $this->CreateInputText($id,'input_attrib_startyear',
action.addprop.php:318:					  (isset($attribs['startyear']))?$attribs['startyear']:'-5',
action.addprop.php:320:    $flds[] = array($this->Lang('end_year').':',
action.addprop.php:321:		    $this->CreateInputText($id,'input_attrib_endyear',
action.addprop.php:326:$smarty->assign('fields',$flds);
action.addprop.php:328:echo $this->ProcessTemplate('addprop.tpl');
action.adduser.php:3:#-------------------------------------------------------------------------
action.adduser.php:10:#-------------------------------------------------------------------------
action.adduser.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.adduser.php:14:#-------------------------------------------------------------------------
action.adduser.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.adduser.php:36:#-------------------------------------------------------------------------
action.adduser.php:40:if( !$this->_HasSufficientPermissions( 'adduser' ) )
action.adduser.php:47:    $this->myRedirectToTab($id, 'users' );
action.adduser.php:50:$gid = $this->GetPreference('default_group', -1);
action.adduser.php:51:if( $gid != -1 )
action.adduser.php:62:$this->_DisplayAdminUserPage( $id, $params, $returnid );
action.admin_bulkactions.php:3:#-------------------------------------------------------------------------
action.admin_bulkactions.php:10:#-------------------------------------------------------------------------
action.admin_bulkactions.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_bulkactions.php:14:#-------------------------------------------------------------------------
action.admin_bulkactions.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_bulkactions.php:36:#-------------------------------------------------------------------------
action.admin_bulkactions.php:49:      if( !$this->_HasSufficientPermissions('removeusers') ) return;
action.admin_bulkactions.php:54:	  $this->DeleteUserFull( $oneuid );
action.admin_bulkactions.php:66:$this->myRedirectToTab( $id, 'users' );
action.admin_exportgroup.php:3:#-------------------------------------------------------------------------
action.admin_exportgroup.php:10:#-------------------------------------------------------------------------
action.admin_exportgroup.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_exportgroup.php:14:#-------------------------------------------------------------------------
action.admin_exportgroup.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_exportgroup.php:36:#-------------------------------------------------------------------------
action.admin_exportgroup.php:39:if( !$this->_HasSufficientPermissions('editgroups') ) return;
action.admin_exportgroup.php:44:$grp_info = $this->GetGroupInfo( $groupid );
action.admin_exportgroup.php:49:    $parms['error'] = $this->Lang('error_invalidgroupid',$groupid);
action.admin_exportgroup.php:50:    $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_exportgroup.php:54:$grp_prop_rels = $this->GetGroupPropertyRelations( $groupid );
action.admin_exportgroup.php:59:    $parms['error'] = $this->Lang('error_norelations');
action.admin_exportgroup.php:60:    $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_exportgroup.php:65:$smarty->assign('group_name',$grp_info['groupname']);
action.admin_exportgroup.php:66:$smarty->assign('group_description',$grp_info['groupdesc']);
action.admin_exportgroup.php:70:  $defn = $this->GetPropertyDefn( $onerel['name'] );
action.admin_exportgroup.php:75:      $parms['error'] = $this->Lang('error_propnotfound',$onrel['name']);
action.admin_exportgroup.php:76:      $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_exportgroup.php:81:  $obj->name = $onerel['name'];
action.admin_exportgroup.php:82:  $obj->sortorder = $onerel['sort_key'];
action.admin_exportgroup.php:83:  $obj->status = $onerel['required'];
action.admin_exportgroup.php:84:  $obj->lostunflag = $onerel['lostunflag'];
action.admin_exportgroup.php:85:  $obj->prompt = $defn['prompt'];
action.admin_exportgroup.php:86:  $obj->type = $defn['type'];
action.admin_exportgroup.php:87:  $obj->length = $defn['length'];
action.admin_exportgroup.php:88:  $obj->maxlength = $defn['maxlength'];
action.admin_exportgroup.php:89:  if( $obj->type == 4 || $obj->type == 5 )
action.admin_exportgroup.php:92:      $select_ops = $this->GetSelectOptions( $obj->name, 2 );
action.admin_exportgroup.php:96:	  $op->name = $sel_op['option_name'];
action.admin_exportgroup.php:97:	  $op->text = $sel_op['option_text'];
action.admin_exportgroup.php:100:      $obj->options = $ops;
action.admin_exportgroup.php:105:$smarty->assign('properties',$properties);
action.admin_exportgroup.php:120:$data = $this->ProcessTemplate('group_xml.tpl');
action.admin_exportgroup.php:124:header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
action.admin_exportgroup.php:125:header('Cache-Control: private',false);
action.admin_exportgroup.php:126:header('Content-Description: File Transfer');
action.admin_exportgroup.php:127:header('Content-Type: application/octet-stream');
action.admin_exportgroup.php:128:header("Content-Disposition: attachment; filename=\"$filename\"" );
action.admin_exportgroup.php:129:header('Content-Transfer-Encoding: binary');
action.admin_exportgroup.php:130:header('Content-Length: ' . strlen($data));
action.admin_importgroup.php:3:#-------------------------------------------------------------------------
action.admin_importgroup.php:10:#-------------------------------------------------------------------------
action.admin_importgroup.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_importgroup.php:14:#-------------------------------------------------------------------------
action.admin_importgroup.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_importgroup.php:36:#-------------------------------------------------------------------------
action.admin_importgroup.php:39:if( !$this->_HasSufficientPermissions('editgroups') ) return;
action.admin_importgroup.php:151:    $this->Redirect( $id, 'defaultadmin', $returnid, $parms );
action.admin_importgroup.php:162:	$parms['error'] = $this->Lang('error_missing_upload');
action.admin_importgroup.php:163:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:173:	$parms['error'] = $this->Lang('error_problem_upload');
action.admin_importgroup.php:174:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:192:	$parms['error'] = $this->Lang('error_bad_xml').' 1';
action.admin_importgroup.php:193:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:221:		  $parms['error'] = $this->Lang('error_bad_xml').' 2';
action.admin_importgroup.php:222:		  $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:239:		  $parms['error'] = $this->Lang('error_bad_xml').' 3';
action.admin_importgroup.php:240:		  $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:256:		  $parms['error'] = $this->Lang('error_bad_xml').' 4';
action.admin_importgroup.php:257:		  $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:285:		  $parms['error'] = $this->Lang('error_bad_xml').' 5';
action.admin_importgroup.php:286:		  $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:323:    if( $this->GroupExistsByName( $grp_info['name'] ) )
action.admin_importgroup.php:328:	$parms['error'] = $this->Lang('error_groupexists');
action.admin_importgroup.php:329:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:340:	$parms['error'] = $this->Lang('error_properties');
action.admin_importgroup.php:341:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:350:	$res = $this->GetPropertyDefn( $oneprop['name'] );
action.admin_importgroup.php:362:	$parms['error'] = $this->Lang('error_dup_properties');
action.admin_importgroup.php:363:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:372:	$res = $this->AddPropertyDefn($oneprop['name'],
action.admin_importgroup.php:383:	    $parms['error'] = $this->Lang('error_cantaddprop');
action.admin_importgroup.php:384:	    $this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:396:	    $res = $this->AddSelectOptions( $oneprop['name'], $ops );
action.admin_importgroup.php:403:		$parms['error'] = $this->Lang('error_cantaddprop');
action.admin_importgroup.php:404:		$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:412:    $res = $this->AddGroup($grp_info['name'],
action.admin_importgroup.php:418:	$parms['error'] = $this->Lang('error_cantaddgroup');
action.admin_importgroup.php:419:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:430:	$res = $this->AddGroupPropertyRelation( $grpid, 
action.admin_importgroup.php:444:	$parms['error'] = $this->Lang('error_cantaddgroupreln');
action.admin_importgroup.php:445:	$this->Redirect($id,'defaultadmin',$returnid, $parms);
action.admin_importgroup.php:451:    $this->Redirect($id,'defaultadmin',$returnid,$parms);
action.admin_importgroup.php:455:$smarty->assign('startform',
action.admin_importgroup.php:456:		$this->CreateFormStart($id,'admin_importgroup',$returnid,
action.admin_importgroup.php:457:				       'post','multipart/form-data'));
action.admin_importgroup.php:458:$smarty->assign('endform',$this->CreateFormEnd());
action.admin_importgroup.php:459:$smarty->assign('submit',
action.admin_importgroup.php:460:		$this->CreateInputSubmit($id,'submit',$this->Lang('submit')));
action.admin_importgroup.php:461:$smarty->assign('cancel',
action.admin_importgroup.php:462:		$this->CreateInputSubmit($id,'cancel',$this->Lang('cancel')));
action.admin_importgroup.php:463:$smarty->assign('prompt_filename',$this->Lang('prompt_importxmlfile'));
action.admin_importgroup.php:464:$smarty->assign('input_filename',
action.admin_importgroup.php:465:		$this->CreateFileUploadInput($id,'xmlfile','',40));
action.admin_importgroup.php:466:$smarty->assign('prompt_newname',$this->Lang('prompt_newgroupname'));
action.admin_importgroup.php:467:$smarty->assign('input_newname',
action.admin_importgroup.php:468:		$this->CreateInputText($id,'input_newname'));
action.admin_importgroup.php:470:echo $this->ProcessTemplate('importgroup.tpl');
action.admin_logout.php:1:<?php // -*- mode:php; c-set-style:linux; tab-width:2; indent-tabs-mode:t; c-basic-offset: 2; -*-
action.admin_logout.php:3:#-------------------------------------------------------------------------
action.admin_logout.php:10:#-------------------------------------------------------------------------
action.admin_logout.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_logout.php:14:#-------------------------------------------------------------------------
action.admin_logout.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_logout.php:36:#-------------------------------------------------------------------------
action.admin_logout.php:40:if( $this->_HasSufficientPermissions('editusers') ) {
action.admin_logout.php:42:		$this->LogoutUser($params['user_id'],
action.admin_logout.php:43:											$this->Lang('admin_logout'));
action.admin_logout.php:47:$this->myRedirectToTab($id, 'prefs');
action.admin_resetsession_template.php:3:#-------------------------------------------------------------------------
action.admin_resetsession_template.php:10:#-------------------------------------------------------------------------
action.admin_resetsession_template.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_resetsession_template.php:14:#-------------------------------------------------------------------------
action.admin_resetsession_template.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_resetsession_template.php:36:#-------------------------------------------------------------------------
action.admin_resetsession_template.php:39:if( !$this->_HasSufficientPermissions('templates') ) return;
action.admin_resetsession_template.php:47:	$this->SetTemplate('feusers_resetsession',$template);
action.admin_resetsession_template.php:50:    $this->myRedirectToTab( $id, 'reset_session' );
action.admin_resetsession_template.php:56:    $this->SetTemplate('feusers_resetsession',trim($params['resetsession_template']));
action.admin_resetsession_template.php:57:    $this->myRedirectToTab( $id, 'reset_session' );
action.admin_setlostun_template.php:3:#-------------------------------------------------------------------------
action.admin_setlostun_template.php:10:#-------------------------------------------------------------------------
action.admin_setlostun_template.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_setlostun_template.php:14:#-------------------------------------------------------------------------
action.admin_setlostun_template.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_setlostun_template.php:36:#-------------------------------------------------------------------------
action.admin_setlostun_template.php:39:if( !$this->_HasSufficientPermissions('templates') ) return;
action.admin_setlostun_template.php:50:	$this->SetTemplate('feusers_lostunform_confirm',$template);
action.admin_setlostun_template.php:53:    $this->myRedirectToTab( $id, 'lostusername_template' );
action.admin_setlostun_template.php:60:    $this->SetTemplate('feusers_lostunform',trim($params['lostunform']));
action.admin_setlostun_template.php:61:    $this->SetTemplate('feusers_lostunform_confirm',trim($params['lostunform_confirm']));
action.admin_setlostun_template.php:62:    $this->myRedirectToTab( $id, 'lostusername_template' );
action.admin_setviewuser_template.php:3:#-------------------------------------------------------------------------
action.admin_setviewuser_template.php:10:#-------------------------------------------------------------------------
action.admin_setviewuser_template.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.admin_setviewuser_template.php:14:#-------------------------------------------------------------------------
action.admin_setviewuser_template.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.admin_setviewuser_template.php:36:#-------------------------------------------------------------------------
action.admin_setviewuser_template.php:40:if( !$this->_HasSufficientPermissions('templates') ) return;
action.admin_setviewuser_template.php:48:	$this->SetTemplate('feusers_viewuser',$template);
action.admin_setviewuser_template.php:51:    $this->myRedirectToTab( $id, 'view_user' );
action.admin_setviewuser_template.php:57:    $this->SetTemplate('feusers_viewuser',trim($params['viewuser_template']));
action.admin_setviewuser_template.php:58:    $this->myRedirectToTab( $id, 'view_user' );
action.defaultadmin.php:3:#-------------------------------------------------------------------------
action.defaultadmin.php:10:#-------------------------------------------------------------------------
action.defaultadmin.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.defaultadmin.php:14:#-------------------------------------------------------------------------
action.defaultadmin.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.defaultadmin.php:36:#-------------------------------------------------------------------------
action.defaultadmin.php:42:  $module->smarty->assign('startform',
action.defaultadmin.php:43:			  $module->CreateFormStart( $id, 'do_setlogintemplate'));
action.defaultadmin.php:44:  $module->smarty->assign('prompt_template',$module->Lang('template'));
action.defaultadmin.php:45:  $module->smarty->assign('input_template',
action.defaultadmin.php:46:			  $module->CreateTextArea( false, $id,
action.defaultadmin.php:47:						   $module->GetTemplate ('feusers_loginform'),
action.defaultadmin.php:49:  $module->smarty->assign('submit',
action.defaultadmin.php:50:			  $module->CreateInputSubmit ($id, 'submit',
action.defaultadmin.php:51:						      $module->Lang('submit')));
action.defaultadmin.php:52:  $module->smarty->assign('defaults',
action.defaultadmin.php:53:			  $module->CreateInputSubmit ($id, 'defaults',
action.defaultadmin.php:54:						      $module->Lang('defaults')));
action.defaultadmin.php:55:  $module->smarty->assign('endform',$module->CreateFormEnd());
action.defaultadmin.php:56:  echo $module->ProcessTemplate('templateform.tpl');
action.defaultadmin.php:62:  $module->smarty->assign('startform',
action.defaultadmin.php:63:			  $module->CreateFormStart( $id, 'do_setlogouttemplate'));
action.defaultadmin.php:64:  $module->smarty->assign('prompt_template',$module->Lang('template'));
action.defaultadmin.php:65:  $module->smarty->assign('input_template',
action.defaultadmin.php:66:			  $module->CreateTextArea( false, $id,
action.defaultadmin.php:67:						   $module->GetTemplate ('feusers_logoutform'),
action.defaultadmin.php:69:  $module->smarty->assign('submit',
action.defaultadmin.php:70:			  $module->CreateInputSubmit ($id, 'submit',
action.defaultadmin.php:71:						      $module->Lang('submit')));
action.defaultadmin.php:72:  $module->smarty->assign('defaults',
action.defaultadmin.php:73:			  $module->CreateInputSubmit ($id, 'defaults',
action.defaultadmin.php:74:						      $module->Lang('defaults')));
action.defaultadmin.php:75:  $module->smarty->assign('endform',$module->CreateFormEnd());
action.defaultadmin.php:76:  echo $module->ProcessTemplate('templateform.tpl');
action.defaultadmin.php:82:  $module->smarty->assign('startform',
action.defaultadmin.php:83:			  $module->CreateFormStart( $id, 'do_setchangesettingstemplate'));
action.defaultadmin.php:84:  $module->smarty->assign('prompt_template',$module->Lang('template'));
action.defaultadmin.php:85:  $module->smarty->assign('input_template',
action.defaultadmin.php:86:			  $module->CreateTextArea( false, $id,
action.defaultadmin.php:87:						   $module->GetTemplate ('feusers_changesettingsform'),
action.defaultadmin.php:89:  $module->smarty->assign('submit',
action.defaultadmin.php:90:			  $module->CreateInputSubmit ($id, 'submit',
action.defaultadmin.php:91:						      $module->Lang('submit')));
action.defaultadmin.php:92:  $module->smarty->assign('defaults',
action.defaultadmin.php:93:			  $module->CreateInputSubmit ($id, 'defaults',
action.defaultadmin.php:94:						      $module->Lang('defaults')));
action.defaultadmin.php:95:  $module->smarty->assign('endform',$module->CreateFormEnd());
action.defaultadmin.php:96:  echo $module->ProcessTemplate('templateform.tpl');
action.defaultadmin.php:102:  $module->smarty->assign('startform',
action.defaultadmin.php:103:			  $module->CreateFormStart( $id, 'do_setforgotpwtemplate'));
action.defaultadmin.php:104:  $module->smarty->assign('prompt_template1',$module->Lang('forgotpassword_template'));
action.defaultadmin.php:105:  $module->smarty->assign('input_template1',
action.defaultadmin.php:106:			  $module->CreateTextArea( false, $id,
action.defaultadmin.php:107:						   $module->GetTemplate ('feusers_forgotpasswordform'),
action.defaultadmin.php:109:  $module->smarty->assign('prompt_template2',$module->Lang('forgotpassword_emailtemplate'));
action.defaultadmin.php:110:  $module->smarty->assign('input_template2',
action.defaultadmin.php:111:			  $module->CreateTextArea( false, $id,
action.defaultadmin.php:112:						   $module->GetTemplate ('feusers_forgotpasswordemailform'),
action.defaultadmin.php:114:  $module->smarty->assign('prompt_template3',$module->Lang('forgotpassword_verifytemplate'));
action.defaultadmin.php:115:  $module->smarty->assign('input_template3',
action.defaultadmin.php:116:			  $module->CreateTextArea( false, $id,
action.defaultadmin.php:117:						   $module->GetTemplate ('feusers_forgotpasswordverifyform'),
action.defaultadmin.php:119:  $module->smarty->assign('submit',
action.defaultadmin.php:120:			  $module->CreateInputSubmit ($id, 'submit',
action.defaultadmin.php:121:						      $module->Lang('submit')));
action.defaultadmin.php:122:  $module->smarty->assign('defaults',
action.defaultadmin.php:123:			  $module->CreateInputSubmit ($id, 'defaults',
action.defaultadmin.php:124:						      $module->Lang('defaults')));
action.defaultadmin.php:125:  $module->smarty->assign('endform',$module->CreateFormEnd());
action.defaultadmin.php:126:  echo $module->ProcessTemplate('forgotpw_templateform.tpl');
action.defaultadmin.php:136:if (! $this->_HasSufficientPermissions())  {
action.defaultadmin.php:141:$db =& $this->GetDb();
action.defaultadmin.php:151:    echo $this->ShowErrors($params['error']);
action.defaultadmin.php:155:echo $this->StartTabHeaders();
action.defaultadmin.php:157:if( $this->_HasSufficientPermissions('properties') )
action.defaultadmin.php:159:    echo $this->SetTabHeader( 'properties', $this->Lang('user_properties'),
action.defaultadmin.php:162:if( $this->_HasSufficientPermissions('usersngroups') )
action.defaultadmin.php:164:    echo $this->SetTabHeader( 'groups', $this->Lang('groups'),($active_tab == 'groups'));
action.defaultadmin.php:165:    echo $this->SetTabHeader( 'users', $this->Lang('users'),($active_tab == 'users'));
action.defaultadmin.php:166:    echo $this->SetTabHeader( 'userhistory', $this->Lang('userhistory'),($active_tab == 'userhistory'));
action.defaultadmin.php:167:    echo $this->SetTabHeader( 'admin', $this->Lang('admin'),($active_tab == 'admin'));
action.defaultadmin.php:169:if( $this->_HasSufficientPermissions('siteprefs') )
action.defaultadmin.php:171:    echo $this->SetTabHeader( 'prefs', $this->Lang('preferences'),($active_tab == 'prefs'));
action.defaultadmin.php:173:if( $this->_HasSufficientPermissions('templates') )
action.defaultadmin.php:175:    echo $this->SetTabHeader( 'logintemplate', $this->Lang('login_template'),
action.defaultadmin.php:177:    echo $this->SetTabHeader( 'logouttemplate', $this->Lang('logout_template'),
action.defaultadmin.php:179:    echo $this->SetTabHeader( 'changesettings_template', $this->Lang('changesettings_template'),
action.defaultadmin.php:181:    echo $this->SetTabHeader( 'forgotpassword_template', $this->Lang('forgotpassword_template'),
action.defaultadmin.php:183:    echo $this->SetTabHeader( 'lostusername_template', $this->Lang('lostusername_template'),
action.defaultadmin.php:185:    echo $this->SetTabHeader( 'view_user', $this->Lang('viewuser_template'),
action.defaultadmin.php:187:    echo $this->SetTabHeader( 'reset_session', $this->Lang('resetsession_template'),
action.defaultadmin.php:191:echo $this->EndTabHeaders();
action.defaultadmin.php:194:echo $this->StartTabContent();
action.defaultadmin.php:196:if( $this->_HasSufficientPermissions('properties') )
action.defaultadmin.php:198:    echo $this->StartTab('properties');
action.defaultadmin.php:200:    echo $this->EndTab();
action.defaultadmin.php:203:if( $this->_HasSufficientPermissions('usersngroups') )
action.defaultadmin.php:205:    echo $this->StartTab('groups');
action.defaultadmin.php:207:    echo $this->EndTab();
action.defaultadmin.php:209:    echo $this->StartTab('users');
action.defaultadmin.php:211:    echo $this->EndTab();
action.defaultadmin.php:213:    echo $this->StartTab('userhistory');
action.defaultadmin.php:215:    echo $this->EndTab();
action.defaultadmin.php:217:    echo $this->StartTab('admin');
action.defaultadmin.php:219:    echo $this->EndTab();
action.defaultadmin.php:222:if( $this->_HasSufficientPermissions('siteprefs') )
action.defaultadmin.php:224:    echo $this->StartTab('prefs');
action.defaultadmin.php:226:    echo $this->EndTab();
action.defaultadmin.php:229:if( $this->_HasSufficientPermissions('templates') )
action.defaultadmin.php:231:    echo $this->StartTab('logintemplate');
action.defaultadmin.php:233:    echo $this->EndTab();
action.defaultadmin.php:235:    echo $this->StartTab('logouttemplate');
action.defaultadmin.php:237:    echo $this->EndTab();
action.defaultadmin.php:239:    echo $this->StartTab('changesettings_template');
action.defaultadmin.php:241:    echo $this->EndTab();
action.defaultadmin.php:243:    echo $this->StartTab('forgotpassword_template');
action.defaultadmin.php:245:    echo $this->EndTab();
action.defaultadmin.php:247:    echo $this->StartTab('lostusername_template');
action.defaultadmin.php:249:    echo $this->EndTab();
action.defaultadmin.php:251:    echo $this->StartTab('view_user');
action.defaultadmin.php:253:    echo $this->EndTab();
action.defaultadmin.php:255:    echo $this->StartTab('reset_session');
action.defaultadmin.php:257:    echo $this->EndTab();
action.defaultadmin.php:260:echo $this->EndTabContent();
action.do_addgroup.php:3:#-------------------------------------------------------------------------
action.do_addgroup.php:10:#-------------------------------------------------------------------------
action.do_addgroup.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_addgroup.php:14:#-------------------------------------------------------------------------
action.do_addgroup.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_addgroup.php:36:#-------------------------------------------------------------------------
action.do_addgroup.php:40:if( !$this->_HasSufficientPermissions( 'addgroup' ) )
action.do_addgroup.php:67:    $params['message'] = $this->Lang('error_invalidparams');
action.do_addgroup.php:68:    $this->myRedirect( $id, 'addgroup', $returnid, $params );
action.do_addgroup.php:78:$tmp = $this->GetGroupID( $groupname );
action.do_addgroup.php:83:    $params['message'] = $this->Lang('error_groupexists');
action.do_addgroup.php:84:    $this->myRedirect( $id, 'addgroup', $returnid, $params );
action.do_addgroup.php:105:	    $params['message'] = $this->Lang('error_lostun_nonrequired');
action.do_addgroup.php:106:	    $this->myRedirect( $id, 'addgroup', $returnid, $params );
action.do_addgroup.php:115:    $params['message'] = $this->Lang('error_norelations');
action.do_addgroup.php:116:    $this->myRedirect( $id, 'addgroup', $returnid, $params );
action.do_addgroup.php:123:    $ret = $this->SetGroup( $gid, $groupname, $groupdesc );
action.do_addgroup.php:129:	$this->myRedirect( $id, 'addgroup', $returnid, $params );
action.do_addgroup.php:135:    $ret = $this->AddGroup( $groupname, $groupdesc );
action.do_addgroup.php:141:	$this->myRedirect( $id, 'addgroup', $returnid, $params );
action.do_addgroup.php:148:$this->DeleteAllGroupPropertyRelations( $gid );
action.do_addgroup.php:153:    $lostun = -1;
action.do_addgroup.php:165:	$this->AddGroupPropertyRelation( $gid, $propname, $i, $lostun, $val );
action.do_addgroup.php:179:$this->SendEvent($str,$parms);
action.do_addgroup.php:180:$this->_SendNotificationEmail($str,$parms);
action.do_addgroup.php:182:$this->myRedirectToTab($id, 'groups' ); 
action.do_adduser1.php:3:#-------------------------------------------------------------------------
action.do_adduser1.php:10:#-------------------------------------------------------------------------
action.do_adduser1.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_adduser1.php:14:#-------------------------------------------------------------------------
action.do_adduser1.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_adduser1.php:36:#-------------------------------------------------------------------------
action.do_adduser1.php:40:if( !$this->_HasSufficientPermissions( 'adduser' ) )
action.do_adduser1.php:48:    $this->myRedirectToTab($id, 'users', $params );
action.do_adduser1.php:56:$ret = $this->_handleUserInfoValidation( $id, $params, $returnid, $message, true );
action.do_adduser1.php:59:  case -1: // error
action.do_adduser1.php:62:    $this->myRedirect( $id, 'adduser', $returnid,$params, true );
action.do_adduser1.php:66:    $this->myRedirect( $id, 'adduser', $returnid,$params, true );
action.do_adduser1.php:83:$this->_params_to_session($params);    
action.do_adduser1.php:84:$this->myRedirect( $id, 'do_adduser2', $returnid, array(), true );
action.do_adduser3.php:3:#-------------------------------------------------------------------------
action.do_adduser3.php:10:#-------------------------------------------------------------------------
action.do_adduser3.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_adduser3.php:14:#-------------------------------------------------------------------------
action.do_adduser3.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_adduser3.php:36:#-------------------------------------------------------------------------
action.do_adduser3.php:40:if( !$this->_HasSufficientPermissions( 'adduser' ) )
action.do_adduser3.php:50:    $this->myRedirect( $id, 'adduser', $returnid, $params, true );
action.do_adduser3.php:56:    $this->myRedirectToTab( $id, 'users', $params );
action.do_adduser3.php:116:	      $params['message'] = $this->Lang('error_missing_required_param',$name);
action.do_adduser3.php:117:	      $this->myRedirect( $id, 'do_adduser2', $returnid, $params, true );
action.do_adduser3.php:126:	  $params['message'] = $this->Lang('error_missing_required_param',$name);
action.do_adduser3.php:127:	  $this->myRedirect( $id, 'do_adduser2', $returnid,$params, true );
action.do_adduser3.php:180:$ret = $this->AddUser( $params['input_username'], 
action.do_adduser3.php:187:    $this->myRedirect( $id, 'do_adduser2', $returnid,$params, true );
action.do_adduser3.php:195:  if( !$this->AssignUserToGroup( $ret[1], $mem ) )
action.do_adduser3.php:198:      $params['message'] = $this->Lang('error_invalidgroupid',$mem);
action.do_adduser3.php:199:      $this->myRedirect( $id, 'do_adduser2', $returnid,$params, true );
action.do_adduser3.php:219:	  $result = $this->ManageImageUpload($id,'input_', $k, $uid );
action.do_adduser3.php:223:	      $params['message'] = $this->Lang('error').'&nbsp;'.$result;
action.do_adduser3.php:224:	      $this->myRedirect( $id, 'do_adduser2', $returnid,$params, true );
action.do_adduser3.php:235:  $ret = $this->SetUserPropertyFull( $k, $v, $uid );
action.do_adduser3.php:239:      $params['message'] = $this->Lang('error');
action.do_adduser3.php:240:      $this->myRedirect( $id, 'do_adduser2', $returnid, $params, true );
action.do_adduser3.php:249:$this->SendEvent('OnCreateUser',$parms);
action.do_adduser3.php:250:$this->_SendNotificationEmail('OnCreateUser',$parms);
action.do_adduser3.php:253:$this->Audit( 0, $this->Lang('friendlyname'),
action.do_adduser3.php:254:	      $this->Lang('user_added',array($uid,$params['input_username'])));
action.do_adduser3.php:258:$this->myRedirectToTab( $id, 'users', $params );
action.do_admintasks.php:3:#-------------------------------------------------------------------------
action.do_admintasks.php:10:#-------------------------------------------------------------------------
action.do_admintasks.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_admintasks.php:14:#-------------------------------------------------------------------------
action.do_admintasks.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_admintasks.php:36:#-------------------------------------------------------------------------
action.do_admintasks.php:40:if( !$this->_HasSufficientPermissions('usersngroups') )
action.do_admintasks.php:48:    header('Content-Description: File Transfer');
action.do_admintasks.php:49:    header('Content-Type: application/force-download');
action.do_admintasks.php:50:    header('Content-Disposition: attachment; filename=feusers.csv');
action.do_admintasks.php:60:    $db =& $this->GetDb();
action.do_admintasks.php:66:    $dbresultu = $db->Execute( $uquery );
action.do_admintasks.php:67:    if( !$dbresultu || ($dbresultu->RecordCount() == 0) )
action.do_admintasks.php:69:	echo $db->ErrorMsg();
action.do_admintasks.php:73:	$propdefns = $this->GetPropertyDefns();
action.do_admintasks.php:76:		$this->myRedirectToTab($id,'admin',
action.do_admintasks.php:77:			array('error'=>$this->Lang('error_propertydefns')));
action.do_admintasks.php:82:	// todo - output something sensible for groupname, userid, username, createdate, expires
action.do_admintasks.php:86:	while( $urow = $dbresultu->FetchRow() )
action.do_admintasks.php:97:		$dbresultg = $db->Execute( $gquery, array($urow['id']) );
action.do_admintasks.php:98:		if( !$dbresultg || ($dbresultg->RecordCount() == 0) )
action.do_admintasks.php:100:			echo $db->ErrorMsg();
action.do_admintasks.php:104:		while( $grow = $dbresultg->FetchRow() )
action.do_admintasks.php:121:				$dbresultf = $db->Execute( $fquery, array($grow['id']) );
action.do_admintasks.php:122:				if( !$dbresultf || ($dbresultf->RecordCount() == 0) )
action.do_admintasks.php:124:					echo $db->ErrorMsg();
action.do_admintasks.php:128:				while ( $frow = $dbresultf->FetchRow() )
action.do_admintasks.php:144:		$dbresultp = $db->Execute( $pquery , array($urow['id']) );
action.do_admintasks.php:146:		if( !$dbresultp || ($dbresultp->RecordCount() == 0) )
action.do_admintasks.php:148:			echo $db->ErrorMsg();
action.do_admintasks.php:151:		while ( $prow = $dbresultp->FetchRow() )
action.do_admintasks.php:184:						$options = $this->GetSelectOptions( $key );
action.do_admintasks.php:206:						$output .= ','.date('m-d-Y',$props[ $key ][0]);
action.do_deletegroup.php:3:#-------------------------------------------------------------------------
action.do_deletegroup.php:10:#-------------------------------------------------------------------------
action.do_deletegroup.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_deletegroup.php:14:#-------------------------------------------------------------------------
action.do_deletegroup.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_deletegroup.php:36:#-------------------------------------------------------------------------
action.do_deletegroup.php:40:if( !$this->_HasSufficientPermissions( 'removegroups' ) )
action.do_deletegroup.php:42:    $this->_DisplayErrorPage($id, $params, $returnid,
action.do_deletegroup.php:43:			     $this->Lang('accessdenied'));
action.do_deletegroup.php:50:    $this->_DisplayErrorPage ($id, $params, $returnid,
action.do_deletegroup.php:51:			      $this->Lang ('error_insufficientparams'));
action.do_deletegroup.php:55:$group = $this->GetGroupInfo( $params['group_id'] );
action.do_deletegroup.php:58:    $this->_DisplayErrorPage ($id, $params, $returnid, $group[1] );
action.do_deletegroup.php:62:if( count($this->GetUsersInGroup( $group['id'] )) != 0 )
action.do_deletegroup.php:64:    $this->_DisplayErrorPage ($id, $params, $returnid,
action.do_deletegroup.php:65:			      $this->Lang ('error_notemptygroup'));
action.do_deletegroup.php:69:$ret = $this->DeleteGroupFull( $params['group_id'] );
action.do_deletegroup.php:72:    $this->_DisplayErrorPage ($id, $params, $returnid, $group[1] );
action.do_deletegroup.php:79:$this->SendEvent('OnDeleteGroup',$parms);
action.do_deletegroup.php:80:$this->_SendNotificationEmail('OnDeleteGroup',$parms);
action.do_deletegroup.php:82:$this->myRedirectToTab($id, 'groups' );
action.do_deleteprop.php:3:#-------------------------------------------------------------------------
action.do_deleteprop.php:10:#-------------------------------------------------------------------------
action.do_deleteprop.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_deleteprop.php:14:#-------------------------------------------------------------------------
action.do_deleteprop.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_deleteprop.php:36:#-------------------------------------------------------------------------
action.do_deleteprop.php:41:if( !$this->_HasSufficientPermissions( 'deleteprop' ) )
action.do_deleteprop.php:43:    $this->_DisplayErrorPage($id, $params, $returnid,
action.do_deleteprop.php:44:			     $this->Lang('accessdenied'));
action.do_deleteprop.php:52:    $parms['mesage'] = $this->Lang('error_insufficientparams');
action.do_deleteprop.php:53:    $this->myRedirectToTab($id,'properties',$parms);
action.do_deleteprop.php:58:$result = $this->DeleteUserPropertyByName( $params['propname'] );
action.do_deleteprop.php:62:$result = $this->DeleteSelectOptions( $params['propname'] );
action.do_deleteprop.php:64:$result = $this->DeletePropertyDefn( $params['propname'] );
action.do_deleteprop.php:69:    $params['mesage'] = $this->Lang('error_couldnotdeleteproperty');
action.do_deleteprop.php:70:    $this->myRedirectToTab($id,'properties',$parms);
action.do_deleteprop.php:74:$this->myRedirectToTab($id,'properties');
action.do_deleteuser.php:3:#-------------------------------------------------------------------------
action.do_deleteuser.php:10:#-------------------------------------------------------------------------
action.do_deleteuser.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_deleteuser.php:14:#-------------------------------------------------------------------------
action.do_deleteuser.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_deleteuser.php:36:#-------------------------------------------------------------------------
action.do_deleteuser.php:40:if( !$this->_HasSufficientPermissions( 'removeusers' ) )
action.do_deleteuser.php:49:    $this->_DisplayErrorPage ($id, $params, $returnid,
action.do_deleteuser.php:50:			      $this->Lang ('error_insufficientparams'));
action.do_deleteuser.php:54:$user = $this->GetUserInfo( $params['user_id'] );
action.do_deleteuser.php:57:    $this->_DisplayErrorPage ($id, $params, $returnid, $ret[1] );
action.do_deleteuser.php:64:$defns = $this->GetPropertyDefns();
action.do_deleteuser.php:65:$props = $this->GetUserProperties( $params['user_id'] );
action.do_deleteuser.php:66:$destDir1 = $gCms->config['uploads_path'].DIRECTORY_SEPARATOR;
action.do_deleteuser.php:67:$destDir1 .= $this->GetPreference('image_destination_path','feusers').DIRECTORY_SEPARATOR;
action.do_deleteuser.php:88:$ret = $this->DeleteUserFull( $params['user_id'] );
action.do_deleteuser.php:91:    $this->_DisplayErrorPage ($id, $params, $returnid, $ret[1] );
action.do_deleteuser.php:99:$this->SendEvent( 'OnDeleteUser', $parms );
action.do_deleteuser.php:100:$this->_SendNotificationEmail('OnDeleteUser',$parms);
action.do_deleteuser.php:103:$this->Audit( 0, $this->Lang('friendlyname'),
action.do_deleteuser.php:104:	      $this->Lang('user_deleted',$params['user_id']) );
action.do_deleteuser.php:106:$this->myRedirectToTab($id, 'users' );
action.do_edituser1.php:3:#-------------------------------------------------------------------------
action.do_edituser1.php:10:#-------------------------------------------------------------------------
action.do_edituser1.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_edituser1.php:14:#-------------------------------------------------------------------------
action.do_edituser1.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_edituser1.php:36:#-------------------------------------------------------------------------
action.do_edituser1.php:40:if( !$this->_HasSufficientPermissions( 'editusers' ) )
action.do_edituser1.php:48:    $this->myRedirectToTab($id, 'users', $returnid, $params );
action.do_edituser1.php:53:    $this->_DisplayErrorPage( $id, $params, $returnid, $this->Lang('error_insufficientparams'));
action.do_edituser1.php:63:$ret = $this->_handleUserInfoValidation( $id, $params, $returnid, $message, false, 
action.do_edituser1.php:68:  case -1: // error
action.do_edituser1.php:69:    $this->smarty->assign ('error', "1");
action.do_edituser1.php:70:    $this->smarty->assign ('message', $message );
action.do_edituser1.php:71:    $this->_DisplayAdminEditUserStep1Page( $id, $params, $returnid );
action.do_edituser1.php:74:    $this->_DisplayAdminUserPage( $id, $params, $returnid );
action.do_edituser1.php:82:$props = $this->GetUserProperties( $user_id );
action.do_edituser1.php:89:$this->_params_to_session($params);    
action.do_edituser1.php:90:$this->myRedirect( $id, 'do_edituser2', $returnid );
action.do_edituser3.php:3:#-------------------------------------------------------------------------
action.do_edituser3.php:10:#-------------------------------------------------------------------------
action.do_edituser3.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_edituser3.php:14:#-------------------------------------------------------------------------
action.do_edituser3.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_edituser3.php:36:#-------------------------------------------------------------------------
action.do_edituser3.php:40:if( !$this->_HasSufficientPermissions( 'editusers' ) )
action.do_edituser3.php:42:    $this->_DisplayErrorPage($id, $params, $returnid,
action.do_edituser3.php:43:			     $this->Lang('accessdenied'));
action.do_edituser3.php:52:    $this->myRedirect( $id, 'edituser', $returnid,$params );
action.do_edituser3.php:56:    $this->myRedirectToTab($id, 'users' );
action.do_edituser3.php:60:    $this->_DisplayErrorPage($id, $params, $returnid,
action.do_edituser3.php:61:			     $this->Lang('error_insufficientparams'));
action.do_edituser3.php:118:	      $params['message'] = $this->Lang('error_missing_required_param',$name);
action.do_edituser3.php:119:	      $this->myRedirect( $id, 'do_adduser2', $returnid,$params );
action.do_edituser3.php:128:	  $params['message'] = $this->Lang('error_missing_required_param',$name);
action.do_edituser3.php:129:	  $this->myRedirect( $id, 'do_adduser2', $returnid,$params );
action.do_edituser3.php:157:	  // How can we validate a multi-select
action.do_edituser3.php:169:	      $destDir1 = $gCms->config['uploads_path'].DIRECTORY_SEPARATOR;
action.do_edituser3.php:170:	      $destDir1 .= $this->GetPreference('image_destination_path','feusers').DIRECTORY_SEPARATOR;
action.do_edituser3.php:214:     $this->smarty->assign ('error', "1");
action.do_edituser3.php:215:     $this->smarty->assign ('message', $ret[1] );
action.do_edituser3.php:216:     $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
action.do_edituser3.php:237:$ret = $this->SetUser( $user_id, $username, $password, $expiresdate );
action.do_edituser3.php:240:    $this->smarty->assign ('error', "1");
action.do_edituser3.php:241:    $this->smarty->assign ('message', $ret[1] );
action.do_edituser3.php:242:    $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
action.do_edituser3.php:247:$ret = $this->SetUserGroups( $user_id, $grpids );
action.do_edituser3.php:250:    $this->smarty->assign ('error', "1");
action.do_edituser3.php:251:    $this->smarty->assign ('message', $this->Lang('error_cantassignuser') );
action.do_edituser3.php:252:    $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
action.do_edituser3.php:258:$this->DeleteUserPropertyFull( "", $user_id, true );
action.do_edituser3.php:274:	  $result = $this->ManageImageUpload($id,'input_', $k, $user_id );
action.do_edituser3.php:278:	      $params['message'] = $this->Lang('error').'&nbsp;'.$result;
action.do_edituser3.php:279:	      $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
action.do_edituser3.php:285:  $ret = $this->SetUserPropertyFull( $k, $v, $user_id );
action.do_edituser3.php:289:      $params['message'] = $this->Lang('error');
action.do_edituser3.php:290:      $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
action.do_edituser3.php:300:$this->SendEvent('OnUpdateUser',$event_params);
action.do_edituser3.php:301:$this->_SendNotificationEmail('OnUpdateUser',$event_params);
action.do_edituser3.php:303:$this->myRedirectToTab($id, 'users' );
action.do_forgotpw.php:3:#-------------------------------------------------------------------------
action.do_forgotpw.php:10:#-------------------------------------------------------------------------
action.do_forgotpw.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_forgotpw.php:14:#-------------------------------------------------------------------------
action.do_forgotpw.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_forgotpw.php:36:#-------------------------------------------------------------------------
action.do_forgotpw.php:46:    $this->RedirectContent($returnid);
action.do_forgotpw.php:53:    $params['message'] = $this->Lang('error_insufficientparams');
action.do_forgotpw.php:55:    $this->myRedirect( $id, 'default', $returnid,$params );
action.do_forgotpw.php:60:$uid = $this->GetUserID( $params['input_username'] );
action.do_forgotpw.php:64:    $params['message'] = $this->Lang('error_usernotfound');
action.do_forgotpw.php:66:    $this->myRedirect( $id, 'default', $returnid,$params );
action.do_forgotpw.php:71:$email = $this->GetEmail($uid);
action.do_forgotpw.php:74:    $cmsmailer =& $this->GetModuleInstance('CMSMailer');
action.do_forgotpw.php:78:	$params['message'] = $this->Lang('error_nomailermodule');
action.do_forgotpw.php:80:	$this->myRedirect( $id, 'default', $returnid,$params );
action.do_forgotpw.php:88:    $code = $this->GenerateRandomPrintableString();
action.do_forgotpw.php:89:    if( !$this->SetUserTempCode( $uid, $code ) )
action.do_forgotpw.php:92:	$params['message'] = $this->Lang('error_resetalreadysent');
action.do_forgotpw.php:94:	$this->myRedirect( $id, 'default', $returnid,$params );
action.do_forgotpw.php:99:    $page = $this->GetPreference('pageidforgotpasswd');
action.do_forgotpw.php:107:    $this->smarty->assign('message_forgotpwemail',
action.do_forgotpw.php:108:			  $this->Lang('message_forgotpwemail'));
action.do_forgotpw.php:109:    $this->smarty->assign('prompt_code',$this->Lang('message_code'));
action.do_forgotpw.php:110:    $this->smarty->assign('data_code',$code);
action.do_forgotpw.php:111:    $this->smarty->assign('prompt_link',$this->Lang('prompt_link'));
action.do_forgotpw.php:114:    $config =& $gCms->GetConfig();
action.do_forgotpw.php:116:    $link = $this->CreateLink($id,'verifycode',$pid,'',$parms, '', true, false, '', false, $prettyurl);
action.do_forgotpw.php:118:    $this->smarty->assign('data_link',
action.do_forgotpw.php:119:			  $this->CreateLink($id,'verifycode',$pid,$link,$parms));
action.do_forgotpw.php:120:    $this->smarty->assign('data_url',$link);
action.do_forgotpw.php:122:    $body = $this->ProcessTemplateFromDatabase('feusers_forgotpasswordemailform');
action.do_forgotpw.php:124:    $cmsmailer->AddAddress( $email );
action.do_forgotpw.php:125:    $cmsmailer->SetBody( $body );
action.do_forgotpw.php:126:    $cmsmailer->IsHTML(true);
action.do_forgotpw.php:129:	$cmsmailer->IsHTML(true);
action.do_forgotpw.php:131:    $cmsmailer->SetSubject($this->Lang('lostpassword_emailsubject'));
action.do_forgotpw.php:132:    $cmsmailer->Send();
action.do_forgotpw.php:135:    $params['message'] = $this->Lang('info_forgotpwmessagesent',$email);
action.do_forgotpw.php:144:    $this->myRedirect( $id, 'default', $returnid,$params );
action.do_forgotpw.php:150:$params['message'] = $this->Lang('error_couldnotfindemail');
action.do_forgotpw.php:152:$this->myRedirect( $id, 'default', $returnid,$params );
action.do_login.php:3:#-------------------------------------------------------------------------
action.do_login.php:10:#-------------------------------------------------------------------------
action.do_login.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_login.php:14:#-------------------------------------------------------------------------
action.do_login.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_login.php:36:#-------------------------------------------------------------------------
action.do_login.php:40:$captcha =& $this->GetModuleInstance('Captcha');
action.do_login.php:43:    if (!$captcha->CheckCaptcha($params['input_captcha']))
action.do_login.php:45:	$params['error'] = $this->Lang('error_captchamismatch');
action.do_login.php:53:    $params['error'] = $this->Lang('error_missingusername');
action.do_login.php:60:    $params['error'] = $this->Lang('error_missingpassword');
action.do_login.php:68:    $result = $this->Login( $params['feu_input_username'], $params['feu_input_password'], $params['only_groups'] );			
action.do_login.php:72:     $result = $this->Login( $params['feu_input_username'], $params['feu_input_password'] );	
action.do_login.php:80:$this->Audit( 0, $this->Lang('friendlyname'),
action.do_login.php:81:	      $this->Lang('frontenduser_loggedin').": ".$params['feu_input_username'] );
action.do_login.php:91:    $this->SetLoginCookie($params['feu_input_username'],$params['feu_input_password']);
action.do_login.php:95:$page = $this->GetPreference('pageid_login');
action.do_login.php:106:$groups = $this->GetMemberGroupsArray( $this->LoggedinId() );
action.do_login.php:107:$groupname = $this->GetGroupName( $groups[0]['groupid'] );
action.do_login.php:112:$parms['id'] = $this->LoggedInId();
action.do_login.php:115:$this->SendEvent( 'OnLogin', $parms );
action.do_login.php:116:$this->_SendNotificationEmail('OnLogin',$parms);
action.do_login.php:123:	$this->RedirectContent( $id );
action.do_login.php:128:$this->RedirectContent( $returnid );
action.do_lostusername.php:3:#-------------------------------------------------------------------------
action.do_lostusername.php:10:#-------------------------------------------------------------------------
action.do_lostusername.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_lostusername.php:14:#-------------------------------------------------------------------------
action.do_lostusername.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_lostusername.php:36:#-------------------------------------------------------------------------
action.do_lostusername.php:47:    $this->RedirectContent($returnid);
action.do_lostusername.php:62:  $module->Redirect( $id, 'default', $returnid, $params );
action.do_lostusername.php:68:$captcha =& $this->GetModuleInstance('Captcha');
action.do_lostusername.php:71:    if( !$captcha->CheckCaptcha($params['input_captcha']) )
action.do_lostusername.php:74:			$this->Lang('error_captchamismatch'),
action.do_lostusername.php:87:		  $this->Lang('error_insufficientparams'),
action.do_lostusername.php:109:			$this->Lang('error_requiredfield',$propname),
action.do_lostusername.php:130:  $dbresult = $db->Execute( $query, array($propname,$data['input']) );
action.do_lostusername.php:131:  while( $dbresult && $row = $dbresult->FetchRow() )
action.do_lostusername.php:140:		    $this->Lang('error_cantfinduser'), $params );
action.do_lostusername.php:182:		  $this->Lang('error_nonuniquematch'), $params);
action.do_lostusername.php:191:$username = $this->GetUserName($uid);
action.do_lostusername.php:196:		  $this->Lang('error_usernotfound'), $params);
action.do_lostusername.php:200:if( !$this->CheckPassword( $username, $pw ) )
action.do_lostusername.php:204:		  $this->Lang('error_loginfailed'), $params);
action.do_lostusername.php:213:$smarty->assign('prompt_yourusernameis',$this->Lang('your_username_is'));
action.do_lostusername.php:214:$smarty->assign('username',$username);
action.do_lostusername.php:215:$smarty->assign('premsg',$this->Lang('lostunconfirm_premsg'));
action.do_lostusername.php:216:$smarty->assign('postmsg',$this->Lang('lostunconfirm_postmsg'));
action.do_lostusername.php:218:echo $this->ProcessTemplateFromDatabase('feusers_lostunform_confirm');
action.do_setprefs.php:3:#-------------------------------------------------------------------------
action.do_setprefs.php:10:#-------------------------------------------------------------------------
action.do_setprefs.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_setprefs.php:14:#-------------------------------------------------------------------------
action.do_setprefs.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_setprefs.php:36:#-------------------------------------------------------------------------
action.do_setprefs.php:40:if( !$this->_HasSufficientPermissions( 'editprefs' ) )
action.do_setprefs.php:46:$db =& $gCms->GetDB();
action.do_setprefs.php:49:    $this->ExpireTempCodes('-5 years');
action.do_setprefs.php:50:    $this->myRedirectToTab($id, 'prefs');
action.do_setprefs.php:54:    $this->ExpireTempCodes('-1 week');
action.do_setprefs.php:55:    $this->myRedirectToTab($id, 'prefs');
action.do_setprefs.php:59:    $this->ExpireTempCodes('-1 month');
action.do_setprefs.php:60:    $this->myRedirectToTab($id, 'prefs');
action.do_setprefs.php:64:    $this->myRedirectToTab($id, 'prefs' );
action.do_setprefs.php:73:	$this->_DisplayErrorPage( $id, $params, $returnid,
action.do_setprefs.php:74:				  $this->Lang('error_invalidpasswordlengths') );
action.do_setprefs.php:77:    $this->SetPreference('min_passwordlength',$params['input_minpwlen']);
action.do_setprefs.php:78:    $this->SetPreference('max_passwordlength',$params['input_maxpwlen']);
action.do_setprefs.php:86:$this->SetPreference('use_randomusername',$randomusername);
action.do_setprefs.php:90:    $this->SetPreference('expireage_months',(int)$params['input_expireage']);
action.do_setprefs.php:99:	$this->_DisplayErrorPage( $id, $params, $returnid,
action.do_setprefs.php:100:				  $this->Lang('error_invalidusernamelengths') );
action.do_setprefs.php:103:    $this->SetPreference('min_usernamelength',$params['input_minunlen']);
action.do_setprefs.php:104:    $this->SetPreference('max_usernamelength',$params['input_maxunlen']);
action.do_setprefs.php:107:$this->SetPreference('user_session_expires', $params['input_sessiontimeout']);
action.do_setprefs.php:114:$this->SetPreference('cookie_keepalive',$cookie_keepalive);
action.do_setprefs.php:116:$this->SetPreference('thumbnail_size',isset($params['input_thumbnail_size']) ? trim((int)$params['input_thumbnail_size']) : 75);
action.do_setprefs.php:123:$this->SetPreference('usecookiestoremember',$usecookiestoremember);
action.do_setprefs.php:125:$this->SetPreference('cookiename',$params['input_cookiename']);
action.do_setprefs.php:126:$this->SetPreference('default_group', $params['input_dfltgroup']);
action.do_setprefs.php:127:$this->SetPreference('signin_button', $params['input_signin_button']);
action.do_setprefs.php:128:$this->SetPreference('required_field_marker', $params['input_requiredfieldmarker']);
action.do_setprefs.php:129:$this->SetPreference('required_field_color', $params['input_requiredfieldcolor']);
action.do_setprefs.php:130:$this->SetPreference('require_onegroup', $params['input_requireonegroup']);
action.do_setprefs.php:131:$this->SetPreference('hidden_field_marker', $params['input_hiddenfieldmarker']);
action.do_setprefs.php:132:$this->SetPreference('hidden_field_color', $params['input_hiddenfieldcolor']);
action.do_setprefs.php:133:$this->SetPreference('pageidforgotpasswd', $params['input_forgotpw_page']);
action.do_setprefs.php:134:$this->SetPreference('pageid_changesettings', $params['input_changesettings_page']);
action.do_setprefs.php:135:$this->SetPreference('pageid_login', $params['input_login_page']);
action.do_setprefs.php:136:$this->SetPreference('pageid_logout', $params['input_logout_page']);
action.do_setprefs.php:137:$this->SetPreference('pageid_afterverify',
action.do_setprefs.php:139:$this->SetPreference('pageid_afterchangesettings',
action.do_setprefs.php:141:$this->SetPreference('username_is_email', (isset($params['input_username_is_email'])?$params['input_username_is_email']:0));
action.do_setprefs.php:142:$this->SetPreference('allow_duplicate_emails', (isset($params['input_allow_duplicate_emails'])?$params['input_allow_duplicate_emails']:0));
action.do_setprefs.php:143:$this->SetPreference('allow_duplicate_reminders', (isset($params['input_allow_duplicate_reminders'])?$params['input_allow_duplicate_reminders']:0));
action.do_setprefs.php:144:$this->SetPreference('allow_repeated_logins',(isset($params['input_allow_repeated_logins'])?$params['input_allow_repeated_logins']:0));
action.do_setprefs.php:145:$this->SetPreference('passwordfldlength', $params['input_pwfldlen']);
action.do_setprefs.php:146:$this->SetPreference('usernamefldlength', $params['input_unfldlen']);
action.do_setprefs.php:147:$this->SetPreference('image_destination_path',$params['input_image_destination_path']);
action.do_setprefs.php:148:$this->SetPreference('allowed_image_extensions',$params['input_allowed_image_extensions']);
action.do_setprefs.php:151:   $this->SetPreference('notifications',implode(',',$params['notifications']));
action.do_setprefs.php:153:$this->SetPreference('notification_address',$params['notification_address']);
action.do_setprefs.php:154:$this->SetPreference('notification_subject',$params['notification_subject']);
action.do_setprefs.php:155:$this->SetTemplate('notification_template',$params['notification_template']);
action.do_setprefs.php:158:$count = $db->GetOne($query);
action.do_setprefs.php:163:$this->SetPreference('feusers_specific_permissions',$feusers_specific_permissions);
action.do_setprefs.php:167:    // using FEUser-specific permissions, so create them if necessary
action.do_setprefs.php:171:	$this->CreatePermission('FEU Add Users','Add Front-End Users');
action.do_setprefs.php:172:	$this->CreatePermission('FEU Modify Users','Modify Front-End Users');
action.do_setprefs.php:173:	$this->CreatePermission('FEU Remove Users','Remove Front-End Users');
action.do_setprefs.php:174:	$this->CreatePermission('FEU Add Groups','Add Front-End User Groups');
action.do_setprefs.php:175:	$this->CreatePermission('FEU Modify Groups','Modify Front-End User Groups');
action.do_setprefs.php:176:	$this->CreatePermission('FEU Modify Group Assignments','Modify Front-End User Group Assignments');
action.do_setprefs.php:177:	$this->CreatePermission('FEU Remove Groups','Remove Front-End User Groups');
action.do_setprefs.php:178:	$this->CreatePermission('FEU Modify Site Preferences','Modify Front-End Users Site Prefs');
action.do_setprefs.php:179:	$this->CreatePermission('FEU Modify FrontEndUserProps','Modify Front-End User Properties');
action.do_setprefs.php:180:	$this->CreatePermission('FEU Modify Templates','Modify Front-End User Templates');
action.do_setprefs.php:187:     // sharing access permissions with Admin, so delete FEUser-specific permissions if necessary
action.do_setprefs.php:191:	 $this->RemovePermission('FEU Add Users');
action.do_setprefs.php:192:	 $this->RemovePermission('FEU Modify Users');
action.do_setprefs.php:193:	 $this->RemovePermission('FEU Remove Users');
action.do_setprefs.php:194:	 $this->RemovePermission('FEU Add Groups');
action.do_setprefs.php:195:	 $this->RemovePermission('FEU Modify Groups');
action.do_setprefs.php:196:	 $this->RemovePermission('FEU Modify Group Assignments');
action.do_setprefs.php:197:	 $this->RemovePermission('FEU Remove Groups');
action.do_setprefs.php:198:	 $this->RemovePermission('FEU Modify Site Preferences');
action.do_setprefs.php:199:	 $this->RemovePermission('FEU Modify FrontEndUserProps');
action.do_setprefs.php:200:	 $this->RemovePermission('FEU Modify Templates');
action.do_setprefs.php:206:$this->myRedirectToTab($id, 'prefs');
action.do_userchangesettings.php:3:#-------------------------------------------------------------------------
action.do_userchangesettings.php:10:#-------------------------------------------------------------------------
action.do_userchangesettings.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_userchangesettings.php:14:#-------------------------------------------------------------------------
action.do_userchangesettings.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_userchangesettings.php:36:#-------------------------------------------------------------------------
action.do_userchangesettings.php:46:	$this->RedirectContent($returnid);
action.do_userchangesettings.php:49:    $uid = $this->LoggedInId();
action.do_userchangesettings.php:53:	$this->_DisplayErrorPage( $id, $params, $returnid, 
action.do_userchangesettings.php:54:				  $this->Lang('error_notloggedin'));
action.do_userchangesettings.php:57:    $result = $this->GetUserInfo( $uid );
action.do_userchangesettings.php:61:	$this->_DisplayErrorPage( $id, $params, $returnid, 
action.do_userchangesettings.php:72:	$params['message'] = $this->Lang('error_passwordmismatch');
action.do_userchangesettings.php:73:	$this->Redirect($id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:76:    if( $password != '' && !$this->IsValidPassword($password) )
action.do_userchangesettings.php:79:	$params['message'] = $this->Lang('error_invalidpassword');
action.do_userchangesettings.php:80:	$this->Redirect($id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:84:$defnsbyname = $this->GetPropertyDefns();
action.do_userchangesettings.php:87:$groups = $this->GetMemberGroupsArray($uid);
action.do_userchangesettings.php:95:      $proprelations = $this->GetGroupPropertyRelations( $onegroup['groupid'] );
action.do_userchangesettings.php:122:		  $params['message'] = $this->Lang('error_invalidemailaddress').' '.$result[1];
action.do_userchangesettings.php:123:		  $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:134:		  $params['message'] = $this->Lang('error_invalidemailaddress').' '.$result[1];
action.do_userchangesettings.php:135:		  $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:139:		  $result = $this->IsValidEmailAddress( $params['feu_input_'.$propname], $uid );
action.do_userchangesettings.php:143:		      $params['message'] = $this->Lang('error_invalidemailaddress').' '.$result[1];
action.do_userchangesettings.php:144:		      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:154:	      $params['message'] = $this->Lang('error_requiredfield',$propname);
action.do_userchangesettings.php:155:	      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:161:	      $params['message'] = $this->Lang('error_requiredfield',$propname);
action.do_userchangesettings.php:162:	      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:170:	      $params['message'] = $this->Lang('error_requiredfield',$propname);
action.do_userchangesettings.php:171:	      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:184:	      $params['message'] = $this->Lang('error_requiredfield',$propname);
action.do_userchangesettings.php:185:	      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:204:	      $params['message'] = $this->Lang('error_requiredfield',$propname);
action.do_userchangesettings.php:205:	      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:218:	$result = $this->SetUser( $uid, $uinfo['username'], $password );
action.do_userchangesettings.php:222:	    $params['message'] = $this->Lang('error_problemsettinginfo').' '.$result[1];
action.do_userchangesettings.php:223:	    $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:230:    $this->_AttemptInvalidateLoginCookie();
action.do_userchangesettings.php:236:    $this->DeleteUserPropertyFull( "", $uid, true );
action.do_userchangesettings.php:263:		  $result = $this->ManageImageUpload($id, 'feu_input_', $propname, $uid );
action.do_userchangesettings.php:267:		      $params['message'] = $this->Lang('error').'&nbsp;'.$result[1];
action.do_userchangesettings.php:268:		      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:282:	  $ret = $this->SetUserPropertyFull( $propname, $val, $uid );
action.do_userchangesettings.php:286:	      $params['message'] = $this->Lang('error_settingproperty').' '.$propname;
action.do_userchangesettings.php:287:	      $this->Redirect( $id, 'changesettings', $returnid, $params );
action.do_userchangesettings.php:297:$this->SendEvent('OnUpdateUser',$event_params);
action.do_userchangesettings.php:298:$this->_SendNotificationEmail('OnUpdateUser',$event_params);
action.do_userchangesettings.php:305:	$this->RedirectContent( $page );
action.do_userchangesettings.php:310:$page = $this->GetPreference('pageid_afterchangesettings');
action.do_userchangesettings.php:314:    $groups = $this->GetMemberGroupsArray( $this->LoggedinId() );
action.do_userchangesettings.php:315:    $groupname = $this->GetGroupName( $groups[0]['groupid'] );
action.do_userchangesettings.php:326:$this->RedirectContent( $returnid );
action.do_verifycode.php:3:#-------------------------------------------------------------------------
action.do_verifycode.php:10:#-------------------------------------------------------------------------
action.do_verifycode.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.do_verifycode.php:14:#-------------------------------------------------------------------------
action.do_verifycode.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.do_verifycode.php:36:#-------------------------------------------------------------------------
action.do_verifycode.php:62:	$password != $repeatpassword || !$this->IsValidPassword($password))
action.do_verifycode.php:65:	$params['message'] = $this->Lang('error_invalidpassword');
action.do_verifycode.php:66:	$this->myRedirect( $id, 'verifycode', $returnid, $params );
action.do_verifycode.php:71:    $result = $this->GetUserTempCode( $uid );
action.do_verifycode.php:76:	$this->myRedirect( $id, 'verifycode', $returnid, $params );
action.do_verifycode.php:84:	$params['message'] = $this->Lang('error_invalidcode');
action.do_verifycode.php:85:	$this->myRedirect( $id, 'verifycode', $returnid, $params );
action.do_verifycode.php:90:    $ret = $this->SetUserPassword( $uid, $password );
action.do_verifycode.php:95:	$this->myRedirect( $id, 'verifycode', $returnid, $params );
action.do_verifycode.php:100:    $this->RemoveUserTempCode( $uid );
action.do_verifycode.php:104:    $event_params['name'] = $this->GetUsername($uid);
action.do_verifycode.php:106:    $this->SendEvent('OnUpdateUser',$event_params);
action.do_verifycode.php:107:    $this->_SendNotificationEmail('OnUpdateUser',$event_params);
action.do_verifycode.php:110:    $page = $this->GetPreference('pageid_afterverify');
action.do_verifycode.php:121:    $groups = $this->GetMemberGroupsArray( $uid );
action.do_verifycode.php:122:    $groupname = $this->GetGroupName( $groups[0]['groupid'] );
action.do_verifycode.php:130:	    $this->RedirectContent( $pageid );
action.do_verifycode.php:135:    $this->RedirectContent($returnid);
action.logout.php:3:#-------------------------------------------------------------------------
action.logout.php:10:#-------------------------------------------------------------------------
action.logout.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.logout.php:14:#-------------------------------------------------------------------------
action.logout.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.logout.php:36:#-------------------------------------------------------------------------
action.logout.php:40:$username = $this->LoggedInName();
action.logout.php:41:$uid = $this->LoggedInId();
action.logout.php:43:$this->Logout($uid);
action.logout.php:44:$this->_AttemptInvalidateLoginCookie();
action.logout.php:46:$this->Audit( 0, $this->Lang('friendlyname'),
action.logout.php:47:	      $this->Lang('frontenduser_logout').": $username");
action.logout.php:52:$this->SendEvent( 'OnLogout', $parms );
action.logout.php:53:$this->_SendNotificationEmail('OnLogout',$parms);
action.logout.php:58:$page = $this->GetPreference('pageid_logout');
action.logout.php:68:$groups = $this->GetMemberGroupsArray( $uid );
action.logout.php:69:$groupname = $this->GetGroupName( $groups[0]['groupid'] );
action.logout.php:77:	$this->RedirectContent( $id );
action.logout.php:81:$this->RedirectContent( $returnid );
action.reset_session.php:3:#-------------------------------------------------------------------------
action.reset_session.php:10:#-------------------------------------------------------------------------
action.reset_session.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.reset_session.php:14:#-------------------------------------------------------------------------
action.reset_session.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.reset_session.php:36:#-------------------------------------------------------------------------
action.reset_session.php:39:$uid = $this->LoggedInId();
action.reset_session.php:50:    $smarty->assign('session_timeout',$this->GetPreference('user_session_expires'));
action.reset_session.php:51:    $smarty->assign('reset_url',
action.reset_session.php:52:		    $this->CreateLink($id,'do_resetsession',$returnid,'',
action.reset_session.php:55:    echo $this->ProcessTemplateFromDatabase('feusers_resetsession');
action.userhistory.php:3:#-------------------------------------------------------------------------
action.userhistory.php:10:#-------------------------------------------------------------------------
action.userhistory.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.userhistory.php:14:#-------------------------------------------------------------------------
action.userhistory.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.userhistory.php:36:#-------------------------------------------------------------------------
action.userhistory.php:40:if( !$this->_HasSufficientPermissions( 'listusers' ) )
action.userhistory.php:61:$datelist[$this->Lang('date_allrecords')] = -1;
action.userhistory.php:62:$datelist[$this->Lang('date_onehourold')] = '1h';
action.userhistory.php:63:$datelist[$this->Lang('date_sixhourold')] = '6h';
action.userhistory.php:64:$datelist[$this->Lang('date_twelvehourold')] = '12h';
action.userhistory.php:65:$datelist[$this->Lang('date_onedayold')] = '1d';
action.userhistory.php:66:$datelist[$this->Lang('date_oneweekold')] = '1w';
action.userhistory.php:67:$datelist[$this->Lang('date_twoweeksold')] = '2w';
action.userhistory.php:68:$datelist[$this->Lang('date_onemonthold')] = '1m';
action.userhistory.php:69:$datelist[$this->Lang('date_threemonthsold')] = '3m';
action.userhistory.php:70:$datelist[$this->Lang('date_sixmonthsold')] = '6m';
action.userhistory.php:71:$datelist[$this->Lang('date_oneyearold')] = '1y';
action.userhistory.php:74:$sortorders[$this->Lang('sortorder_date_desc')] = 'refdate DESC';
action.userhistory.php:75:$sortorders[$this->Lang('sortorder_date_asc')] = 'refdate ASC';
action.userhistory.php:76:$sortorders[$this->Lang('sortorder_action_desc')] = 'action DESC';
action.userhistory.php:77:$sortorders[$this->Lang('sortorder_action_asc')] = 'action ASC';
action.userhistory.php:78:$sortorders[$this->Lang('sortorder_ipaddress_desc')] = 'ipaddress DESC';
action.userhistory.php:79:$sortorders[$this->Lang('sortorder_ipaddress_asc')] = 'ipaddress ASC';
action.userhistory.php:82:    $sortorders[$this->Lang('sortorder_username_desc')] = 'username DESC';
action.userhistory.php:83:    $sortorders[$this->Lang('sortorder_username_asc')] = 'username ASC';
action.userhistory.php:96:	$this->SetPreference('userhistory_pagelimit',$params['input_pagelimit']);
action.userhistory.php:100:	$this->SetPreference('userhistory_sortorder',$params['input_sortorder']);
action.userhistory.php:104:	$this->SetPreference('userhistory_eventtype',$params['input_eventtype']);
action.userhistory.php:108:	$this->SetPreference('userhistory_date',$params['input_filter_date']);
action.userhistory.php:112:	$this->SetPreference('userhistory_group_ip',$params['input_group_ip']);
action.userhistory.php:116:	$this->SetPreference('userhistory_username_regex',$params['input_username_regex']);
action.userhistory.php:120:	$this->myRedirectToTab($id,'userhistory');
action.userhistory.php:125:    $this->SetPreference('userhistory_pagelimit',10);
action.userhistory.php:126:    $this->SetPreference('userhistory_eventtype','all');
action.userhistory.php:127:    $this->SetPreference('userhistory_date','-1'); // todo
action.userhistory.php:128:    $this->SetPreference('userhistory_group_ip',0); // todo
action.userhistory.php:129:    $this->SetPreference('userhistory_sortorder','refdate DESC');
action.userhistory.php:130:    $this->SetPreference('userhistory_username_regex','');
action.userhistory.php:131:    if( $userid == '' ) $this->myRedirectToTab($id,'userhistory');
action.userhistory.php:134:$input_pagelimit = (int)$this->GetPreference('userhistory_pagelimit',10);
action.userhistory.php:135:$input_sortorder = $this->GetPreference('userhistory_sortorder','refdate DESC');
action.userhistory.php:136:$input_eventtype = $this->GetPreference('userhistory_eventtype','all');
action.userhistory.php:137:$input_filter_date = $this->GetPreference('userhistory_date','-1');
action.userhistory.php:138:$input_group_ip = $this->GetPreference('userhistory_group_ip',0);
action.userhistory.php:139:$input_username_regex = $this->GetPreference('userhistory_username_regex');
action.userhistory.php:145:    $results = $this->GetUserInfo($params['user_id']);
action.userhistory.php:153:	$smarty->assign('user_'.$k,$v);
action.userhistory.php:155:    $props = $this->GetUserProperties($params['user_id']);
action.userhistory.php:158:	$smarty->assign('userprop_'.$oneprop['title'],$oneprop['data']);
action.userhistory.php:168:$startelement = ($pagenumber-1) * $input_pagelimit;
action.userhistory.php:199:if( $input_filter_date != -1 )
action.userhistory.php:238:	$parms[] = trim($db->DbTimeStamp($date),"'");
action.userhistory.php:255:$tmprow = $db->GetRow( $query2, $parms );
action.userhistory.php:259:$smarty->assign('recordcount',$recordcount);
action.userhistory.php:264:    $smarty->assign('prevpage','<');
action.userhistory.php:265:    $smarty->assign('firstpage','<<');
action.userhistory.php:269:    $smarty->assign('prevpage',
action.userhistory.php:270:		    $this->CreateLink($id,$params['action'],
action.userhistory.php:272:				      array('pagenumber'=>$pagenumber-1,
action.userhistory.php:274:    $smarty->assign('firstpage',
action.userhistory.php:275:		    $this->CreateLink($id,$params['action'],
action.userhistory.php:282:    $smarty->assign('nextpage','>');
action.userhistory.php:283:    $smarty->assign('lastpage','>>');
action.userhistory.php:287:    $smarty->assign('nextpage',
action.userhistory.php:288:		    $this->CreateLink($id,$params['action'],
action.userhistory.php:293:    $smarty->assign('lastpage',
action.userhistory.php:294:		    $this->CreateLink($id,$params['action'],
action.userhistory.php:300:$smarty->assign('pagenumber',$pagenumber);
action.userhistory.php:301:$smarty->assign('pagecount',$pagecount);
action.userhistory.php:302:$smarty->assign('oftext',$this->Lang('prompt_of'));
action.userhistory.php:306:    $smarty->assign('multiuser',1);
action.userhistory.php:310:$dbresult = $db->Execute( $query1, $parms );
action.userhistory.php:313:while( $dbresult && !$dbresult->EOF )
action.userhistory.php:315:    $fields =& $dbresult->fields;
action.userhistory.php:319:	$onerow->$key = $value;
action.userhistory.php:323:    $onerow->refdate = $db->UnixTimeStamp($onerow->refdate);
action.userhistory.php:324:    if( $onerow->ipaddress == '' )
action.userhistory.php:326:	$onerow->ipaddress = $this->Lang('unknown');
action.userhistory.php:328:    $onerow->rowclass = $rowclass;
action.userhistory.php:332:    $dbresult->MoveNext();
action.userhistory.php:337:    $smarty->assign('message',$this->Lang('info_nohistorydetected'));
action.userhistory.php:340:$smarty->assign('prompt_recordsfound',$this->Lang('prompt_recordsfound'));
action.userhistory.php:341:$smarty->assign('title_legend_filter',$this->Lang('filter'));
action.userhistory.php:342:$smarty->assign('title_legend_groupsort',$this->Lang('title_groupsort'));
action.userhistory.php:343:$smarty->assign('formstart',$this->CreateFormStart($id,$params['action'],$returnid,'post','',false,'',$params));
action.userhistory.php:344:$smarty->assign('formend',$this->CreateFormEnd());
action.userhistory.php:345:$smarty->assign('submit',$this->CreateInputSubmit($id,'submituserhistory',$this->Lang('submit')));
action.userhistory.php:346:$smarty->assign('reset',$this->CreateInputSubmit($id,'reset',$this->Lang('reset')));
action.userhistory.php:348:$smarty->assign('prompt_pagelimit',$this->Lang('prompt_pagelimit'));
action.userhistory.php:349:$smarty->assign('input_pagelimit',
action.userhistory.php:350:		$this->CreateInputDropdown($id,'input_pagelimit',$pagelimits,
action.userhistory.php:351:					   -1, $input_pagelimit));
action.userhistory.php:353:$smarty->assign('prompt_sortorder',$this->Lang('sortby'));
action.userhistory.php:354:$smarty->assign('input_sortorder',
action.userhistory.php:355:		$this->CreateInputDropdown($id,'input_sortorder',$sortorders,
action.userhistory.php:356:					   -1,$input_sortorder));
action.userhistory.php:358:$smarty->assign('prompt_group_ip',$this->Lang('prompt_group_ip'));
action.userhistory.php:359:$smarty->assign('input_group_ip',
action.userhistory.php:360:		$this->CreateInputDropdown($id,'input_group_ip',
action.userhistory.php:361:					   array($this->Lang('yes')=>1,
action.userhistory.php:362:						 $this->Lang('no')=>0),
action.userhistory.php:363:					   -1, $input_group_ip));
action.userhistory.php:365:$smarty->assign('prompt_username_regex',$this->Lang('userfilter'));
action.userhistory.php:366:$smarty->assign('input_username_regex',
action.userhistory.php:367:		$this->CreateInputText($id,'input_username_regex',
action.userhistory.php:370:$smarty->assign('prompt_filter_eventtype',$this->Lang('prompt_filter_eventtype'));
action.userhistory.php:371:$smarty->assign('input_filter_eventtype',
action.userhistory.php:372:		$this->CreateInputDropdown($id,'input_eventtype',
action.userhistory.php:374:					   -1,$input_eventtype));
action.userhistory.php:375:$smarty->assign('prompt_filter_date',$this->Lang('prompt_filter_date'));
action.userhistory.php:376:$smarty->assign('input_filter_date',
action.userhistory.php:377:		$this->CreateInputDropdown($id,'input_filter_date',
action.userhistory.php:379:					   -1,$input_filter_date));
action.userhistory.php:381:$smarty->assign('title_userhistory',$this->Lang('title_userhistory'));
action.userhistory.php:382:$smarty->assign('for',$this->Lang('for'));
action.userhistory.php:383:$smarty->assign('prompt_username',$this->Lang('prompt_username'));
action.userhistory.php:384:$smarty->assign('prompt_for',$this->Lang('prompt_for'));
action.userhistory.php:385:$smarty->assign('items',$rowarray);
action.userhistory.php:386:$smarty->assign('itemcount',count($rowarray));
action.userhistory.php:387:$smarty->assign('prompt_refdate',$this->Lang('prompt_date'));
action.userhistory.php:388:$smarty->assign('prompt_action',$this->Lang('prompt_eventtype'));
action.userhistory.php:389:$smarty->assign('prompt_ipaddress',$this->Lang('prompt_ipaddress'));
action.userhistory.php:391:echo $this->ProcessTemplate('userhistory.tpl');
action.verifycode.php:3:#-------------------------------------------------------------------------
action.verifycode.php:10:#-------------------------------------------------------------------------
action.verifycode.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.verifycode.php:14:#-------------------------------------------------------------------------
action.verifycode.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.verifycode.php:36:#-------------------------------------------------------------------------
action.verifycode.php:53:     $username = $this->GetUserName( $uid );
action.verifycode.php:62:    $this->smarty->assign('error',$params['error']);
action.verifycode.php:66:    $this->smarty->assign('message',$params['message']);
action.verifycode.php:69:$this->smarty->assign('startform',
action.verifycode.php:70:		      $this->feCreateFormStart($id,'do_verifycode',$returnid));
action.verifycode.php:71:$this->smarty->assign('endform',
action.verifycode.php:72:		      $this->CreateFormEnd());
action.verifycode.php:73:$this->smarty->assign('hidden',
action.verifycode.php:74:		      $this->CreateInputHidden($id,'input_uid',$uid));
action.verifycode.php:75:$this->smarty->assign('submit',
action.verifycode.php:76:		      $this->CreateInputSubmit($id, 'submit',$this->Lang('submit')));
action.verifycode.php:77:$this->smarty->assign('prompt_username',$this->Lang('prompt_username'));
action.verifycode.php:78:$this->smarty->assign('input_username',
action.verifycode.php:79:		      $this->CreateInputText( $id, 'input_username', $username,
action.verifycode.php:80:					      $this->GetPreference('usernamefldlength'), 
action.verifycode.php:81:					      $this->GetPreference('max_usernamelength'),
action.verifycode.php:83:$this->smarty->assign('prompt_code',$this->Lang('prompt_code'));
action.verifycode.php:84:$this->smarty->assign('input_code',
action.verifycode.php:85:		      $this->CreateInputText( $id, 'input_code', $code, 10, 10 ));
action.verifycode.php:86:$this->smarty->assign('prompt_password',$this->Lang('prompt_password'));
action.verifycode.php:87:$this->smarty->assign('input_password',
action.verifycode.php:88:		      $this->CreateInputPassword($id, 'input_password', '',
action.verifycode.php:89:						 $this->GetPreference('passwordfldlength'),
action.verifycode.php:90:						 $this->GetPreference('max_passwordlength')));
action.verifycode.php:91:$this->smarty->assign('prompt_repeatpassword',$this->Lang('repeatpassword'));
action.verifycode.php:92:$this->smarty->assign('input_repeatpassword',
action.verifycode.php:93:		      $this->CreateInputPassword($id, 'input_repeatpassword', '',
action.verifycode.php:94:						 $this->GetPreference('passwordfldlength'),
action.verifycode.php:95:						 $this->GetPreference('max_passwordlength')));
action.verifycode.php:96:echo $this->ProcessTemplateFromDatabase('feusers_forgotpasswordverifyform');
action.viewuser.php:3:#-------------------------------------------------------------------------
action.viewuser.php:10:#-------------------------------------------------------------------------
action.viewuser.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
action.viewuser.php:14:#-------------------------------------------------------------------------
action.viewuser.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
action.viewuser.php:36:#-------------------------------------------------------------------------
action.viewuser.php:42:$smarty->assign_by_ref('feu',$this);
action.viewuser.php:45:$userinfo = $this->GetUserInfo($uid);
action.viewuser.php:49:    $this->_DisplayErrorPage( $id, $params, $returnid, 
action.viewuser.php:53:$smarty->assign('userinfo',$userinfo[1]);
action.viewuser.php:55:$groups = $this->GetMemberGroupsArray( $uid );
action.viewuser.php:67:  $proprelations = $this->GetGroupPropertyRelations( $gid );
action.viewuser.php:74:$defns = $this->GetPropertyDefns();
action.viewuser.php:91:$userprops = $this->GetUserProperties($uid);
action.viewuser.php:111:$smarty->assign('user_properties',$properties);
action.viewuser.php:112:$smarty->assign('user_propertiesbyname',$propsbyname);
action.viewuser.php:114:echo $this->ProcessTemplateFromDatabase('feusers_viewuser');
event.Core.ContentPostRender.php:3:#-------------------------------------------------------------------------
event.Core.ContentPostRender.php:10:#-------------------------------------------------------------------------
event.Core.ContentPostRender.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
event.Core.ContentPostRender.php:14:#-------------------------------------------------------------------------
event.Core.ContentPostRender.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
event.Core.ContentPostRender.php:36:#-------------------------------------------------------------------------
event.Core.ContentPostRender.php:42:if( version_compare($CMS_VERSION,'2.0-beta1') < 0 )
event.Core.ContentPostRender.php:49:$content_id = $gCms->variables['content_id'];
event.Core.ContentPostRender.php:60:$content_obj->load_properties();
event.Core.ContentPostRender.php:61:$feu_groups = $content_obj->get_property_value('feu_groups');
event.Core.ContentPostRender.php:62:$feu_redirect = $content_obj->get_property_value('feu_redirect');
event.Core.ContentPostRender.php:69:$uid = $this->LoggedInId();
event.Core.ContentPostRender.php:73:    $t1 = $this->GetMemberGroups($uid);
event.Core.ContentPostRender.php:85:	if( in_array($t1,'-1') )
event.Core.ContentPostRender.php:103:    if( $feu_redirect != -1 )
FrontEndUsers.api.php:1:<?php // -*- mode:php; c-file-style:linux; tab-width:2; indent-tabs-mode:t; c-basic-offset: 2; -*-
FrontEndUsers.api.php:3:#-------------------------------------------------------------------------
FrontEndUsers.api.php:10:#-------------------------------------------------------------------------
FrontEndUsers.api.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
FrontEndUsers.api.php:14:#-------------------------------------------------------------------------
FrontEndUsers.api.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
FrontEndUsers.api.php:36:#-------------------------------------------------------------------------
FrontEndUsers.api.php:48:    $db =& $this->GetDB();
FrontEndUsers.api.php:50:    $dbresult = $db->Execute( $q );
FrontEndUsers.api.php:55:    $row = $dbresult->FetchRow();
FrontEndUsers.api.php:61:    $db =& $this->GetDb();
FrontEndUsers.api.php:65:    $dbresult = $db->Execute( $q, array( $expires ) );
FrontEndUsers.api.php:73:    $db =& $this->GetDb();
FrontEndUsers.api.php:76:    $dbresult = $db->Execute( $q, array( $uid ) );
FrontEndUsers.api.php:85:    $db =& $this->GetDb();
FrontEndUsers.api.php:88:    $dbresult = $db->Execute( $q, array( $uid ));
FrontEndUsers.api.php:89:    if( $dbresult == FALSE || $dbresult->RecordCount() == 0 )
FrontEndUsers.api.php:91:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:93:    $row = $dbresult->FetchRow();
FrontEndUsers.api.php:101:   $db =& $this->GetDb();
FrontEndUsers.api.php:104:   $dbresult = $db->Execute( $q, array( $uid, $code,
FrontEndUsers.api.php:105:					 trim($db->DBTimeStamp(time()),"'") ) );
FrontEndUsers.api.php:113:    		$dbresult = $db->Execute( $q, array($code,
FrontEndUsers.api.php:114:					 trim($db->DBTimeStamp(time()),"'"),$uid ) );
FrontEndUsers.api.php:131:    $db = $this->getDb();
FrontEndUsers.api.php:140:    $dbresult = $db->Execute( $q, array( $newname, $prompt, $type, $length, $maxlength, $attribs, $name ));
FrontEndUsers.api.php:151:    $db =& $this->GetDb();
FrontEndUsers.api.php:155:    $dbresult = $db->Execute( $q, array( $name ) );
FrontEndUsers.api.php:166:    $db =& $this->GetDb();
FrontEndUsers.api.php:170:    $dbresult = $db->Execute( $q, array( $title ) );
FrontEndUsers.api.php:173:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:176:    while( $row = $dbresult->FetchRow() )
FrontEndUsers.api.php:187:    $db =& $this->GetDb();
FrontEndUsers.api.php:189:		$now = trim($db->DbTimeStamp(time()),'"');
FrontEndUsers.api.php:193:    $dbresult = $db->Execute( $q, array( $uid ) );
FrontEndUsers.api.php:194:    if( $dbresult && $dbresult->RecordCount() == 1 )
FrontEndUsers.api.php:205:    $db =& $this->GetDb();
FrontEndUsers.api.php:209:    $dbresult = $db->Execute( $q, array( $grpid ));
FrontEndUsers.api.php:212:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:215:    while( $row = $dbresult->FetchRow() )
FrontEndUsers.api.php:225:    $db =& $this->GetDb();
FrontEndUsers.api.php:229:    $dbresult = $db->Execute( $q, array( $propname, $grpid, $sortkey, $val, $lostun ));
FrontEndUsers.api.php:232:				die( $db->ErrorMsg()." ".$db->sql );
FrontEndUsers.api.php:233:				return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:241:    $db =& $this->GetDb();
FrontEndUsers.api.php:245:    $dbresult = $db->Execute( $q, array( $grpid ));
FrontEndUsers.api.php:248:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:256:    $db =& $this->GetDb();
FrontEndUsers.api.php:260:    $dbresult = $db->Execute( $q, array( $propname, $grpid ));
FrontEndUsers.api.php:263:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:271:    $db =& $this->GetDb();
FrontEndUsers.api.php:282:    $dbresult = $db->Execute( $q, $p );
FrontEndUsers.api.php:285:				return array(FALSE, $db->sql.'<br/>'.$db->ErrorMsg());
FrontEndUsers.api.php:293:    $db =& $this->GetDb();
FrontEndUsers.api.php:320:    $insert_vals = substr($insert_vals, 0, -2);
FrontEndUsers.api.php:322:    $db = $this->getDb();
FrontEndUsers.api.php:326:    $dbresult = $db->Execute($query);
FrontEndUsers.api.php:328:      return array(FALSE, $db->ErrorMsg());
FrontEndUsers.api.php:338:    $db =& $this->GetDb();
FrontEndUsers.api.php:340:    $dbresult = $db->Execute( $q );
FrontEndUsers.api.php:343:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:351:    $db =& $this->GetDb();
FrontEndUsers.api.php:354:    $dbresult = $db->Execute( $q, array( $name ) );
FrontEndUsers.api.php:357:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:366:    $db =& $this->GetDb();
FrontEndUsers.api.php:367:   $mod =& $this->GetModule();
FrontEndUsers.api.php:372:		if ($mod->GetPreference("username_is_email"))
FrontEndUsers.api.php:379:			$row = $db->GetRow( $q, array( $prefix.$num.$suffix ) );
FrontEndUsers.api.php:393:		if( !is_array($this->_cached_propdefns) )
FrontEndUsers.api.php:395:				$db =& $this->GetDb();
FrontEndUsers.api.php:398:				$data = $db->GetArray($query);
FrontEndUsers.api.php:401:				$this->_cached_propdefns = array();
FrontEndUsers.api.php:404:						$this->_cached_propdefns[$data[$i]['name']] = $data[$i];
FrontEndUsers.api.php:411:		$this->_cache_propertydefns();
FrontEndUsers.api.php:412:		if( !is_array($this->_cached_propdefns) ) return FALSE;
FrontEndUsers.api.php:413:		if( !isset($this->_cached_propdefns[$name])) return FALSE;
FrontEndUsers.api.php:414:		return $this->_cached_propdefns[$name];
FrontEndUsers.api.php:419:		$this->_cache_propertydefns();
FrontEndUsers.api.php:420:		if( !is_array($this->_cached_propdefns) ) return FALSE;
FrontEndUsers.api.php:421:		return $this->_cached_propdefns;
FrontEndUsers.api.php:427:   * @param String $controlname - name of the dropdown as in the propdefn table
FrontEndUsers.api.php:428:   * @param int $dim - dimension of the array
FrontEndUsers.api.php:435:	$db =& $this->GetDb();
FrontEndUsers.api.php:439:	$dbresult = $db->Execute( $q, array($controlname) );
FrontEndUsers.api.php:444:	while( $row = $dbresult->FetchRow() ) {
FrontEndUsers.api.php:459:    $uid = -1;
FrontEndUsers.api.php:461:    $db =& $this->GetDb();
FrontEndUsers.api.php:462:    $mod =& $this->GetModule();
FrontEndUsers.api.php:463:		$config =& $gCms->GetConfig();
FrontEndUsers.api.php:465:    if( !$this->CheckPassword( $username, $password, $groups, $md5pw ) )
FrontEndUsers.api.php:467:				$uid = $this->GetUserID( $username );
FrontEndUsers.api.php:468:				if( !$uid ) $uid = -1;
FrontEndUsers.api.php:469:				$error = $mod->Lang('error_loginfailed');
FrontEndUsers.api.php:473:				$uid = $this->GetUserID( $username );
FrontEndUsers.api.php:476:						$this->Logout($uid);
FrontEndUsers.api.php:479:				if( $this->IsAccountExpired( $uid ) )
FrontEndUsers.api.php:481:						$error = $mod->Lang('error_accountexpired');
FrontEndUsers.api.php:483:				else if( $mod->GetPreference('allow_repeated_logins') == 0 )
FrontEndUsers.api.php:488:						$dbresult = $db->Execute( $q, array( $uid ) );
FrontEndUsers.api.php:489:						if( $dbresult && $dbresult->RecordCount() )
FrontEndUsers.api.php:491:								$error = $mod->Lang('error_norepeatedlogins');
FrontEndUsers.api.php:510:				$dbresult = $db->Execute( $q, array( session_id(), time(), $uid ));
FrontEndUsers.api.php:513:						return array(FALSE, $db->ErrorMsg());
FrontEndUsers.api.php:517:				$module =& $this->GetModule();
FrontEndUsers.api.php:518:				if( $module->GetPreference('cookie_keepalive',0) ) {
FrontEndUsers.api.php:519:					$expirytime = $module->GetPreference('user_session_expires');
FrontEndUsers.api.php:526:				$db->Execute( $q, array( $uid, session_id(), 'login',
FrontEndUsers.api.php:527:																 trim($db->DBTimeStamp(time()),"'"),
FrontEndUsers.api.php:535:    $dbresult = $db->Execute( $q, array( $uid, session_id(), 'fail',
FrontEndUsers.api.php:536:			     trim($db->DBTimeStamp(time()),"'"),
FrontEndUsers.api.php:538:    if( !$dbresult ) $error = $db->ErrorMsg();
FrontEndUsers.api.php:557://     $db =& $this->GetDb();
FrontEndUsers.api.php:560://     $dbresult = $db->Execute( $q, array( $perm ) );
FrontEndUsers.api.php:561://     if( !$dbresult || $dbresult->RecordCount() == 0 ) return false;
FrontEndUsers.api.php:563://     $prow = $dbresult->FetchRow();
FrontEndUsers.api.php:566://     $dbresult = $db->Execute( $q, array( $prow['permission_id'], $gid ) );
FrontEndUsers.api.php:567://     if( !$dbresult || $dbresult->RecordCount() == 0 ) return false;
FrontEndUsers.api.php:577:    $uid = $this->LoggedInId();
FrontEndUsers.api.php:599:    if( !$this->UserExistsByID( $uid ) )
FrontEndUsers.api.php:605:    if( !$this->GroupExistsByID( $gid ) )
FrontEndUsers.api.php:612:    $db =& $this->GetDb();
FrontEndUsers.api.php:615:    $dbresult = $db->Execute( $q, array( $uid, $gid ) );
FrontEndUsers.api.php:626:    $module =& $this->GetModule();
FrontEndUsers.api.php:627:    $minlen = $module->GetPreference('min_passwordlength', 6 );
FrontEndUsers.api.php:628:    $maxlen = $module->GetPreference('max_passwordlength', 20 );
FrontEndUsers.api.php:655:    $this->LogoutUser( $id );
FrontEndUsers.api.php:658:    $this->DeleteAllUserPropertiesFull( $id );
FrontEndUsers.api.php:661:    $ret = $this->RemoveUserFromGroup( $id, '' );
FrontEndUsers.api.php:668:    $db =& $this->GetDb();
FrontEndUsers.api.php:671:    $dbresult = $db->Execute( $q, array( $id ) );
FrontEndUsers.api.php:674:				return array( FALSE< $db->ErrorMsg() );
FrontEndUsers.api.php:680:    $dbresult = $db->Execute( $q, array( $id ) );
FrontEndUsers.api.php:683:				return array( FALSE< $db->ErrorMsg() );
FrontEndUsers.api.php:694:    $db =& $this->GetDb();
FrontEndUsers.api.php:696:    $dbresult = $db->Execute( $q, array( $gid ) );
FrontEndUsers.api.php:699:				return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:701:    $row = $dbresult->FetchRow();
FrontEndUsers.api.php:702:		$dbresult->Close();
FrontEndUsers.api.php:710:		if( is_array($this->_cached_uid_map) && 
FrontEndUsers.api.php:711:				isset($this->_cached_uid_map[$uid]) )
FrontEndUsers.api.php:713:				return $this->_cached_uid_map[$uid];
FrontEndUsers.api.php:716:    $db =& $this->GetDb();
FrontEndUsers.api.php:719:		$row = $db->GetRow($q,array($uid));
FrontEndUsers.api.php:722:		$this->_cached_uid_map[$uid] = $row;
FrontEndUsers.api.php:732:		$row = $this->_getUser($uid);
FrontEndUsers.api.php:738:	function GetUserHistory($uid,$action='',$count=-1)
FrontEndUsers.api.php:740:		$db =& $this->GetDb();
FrontEndUsers.api.php:753:				$results = $db->GetArray($query,$parms);
FrontEndUsers.api.php:757:				$dbr = $db->SelectLimit($query,(int)$count);
FrontEndUsers.api.php:758:				while( $dbr && ($row = $dbr->FetchRow()) )
FrontEndUsers.api.php:777:    $db =& $this->GetDb();
FrontEndUsers.api.php:792:    $dbresult = $db->Execute( $q, $parms );
FrontEndUsers.api.php:798:    $row = $dbresult->FetchRow();
FrontEndUsers.api.php:806:    $db =& $this->GetDb();
FrontEndUsers.api.php:811:		$tusers = $db->GetArray($q1,array($groupid));
FrontEndUsers.api.php:827:						$dbr = $db->Execute($q2);
FrontEndUsers.api.php:831:						while( $dbr && $row = $dbr->FetchRow() )
FrontEndUsers.api.php:858:    $db =& $this->GetDb();
FrontEndUsers.api.php:946:    $dbresult = $db->SelectLimit( $q, $thelimit, $start_record, $parms );
FrontEndUsers.api.php:952:		$result = $dbresult->GetArray();
FrontEndUsers.api.php:961:    $data = $this->GetGroupInfo( $gid );
FrontEndUsers.api.php:970:    $gid = $this->GetGroupID( $name );
FrontEndUsers.api.php:977:      $userid=$this->LoggedInId();
FrontEndUsers.api.php:978:      return $this->GetEmail($userid);
FrontEndUsers.api.php:983:		 $module =& $this->GetModule();
FrontEndUsers.api.php:984:		 $db =& $this->GetDb();
FrontEndUsers.api.php:987:		 if ($module->GetPreference('username_is_email'))
FrontEndUsers.api.php:991:				 $result = $db->GetOne( $q, array( $uid ) );
FrontEndUsers.api.php:998:				 $result = $db->GetOne( $q, array( $uid ) );
FrontEndUsers.api.php:1006:  function IsValidEmailAddress( $email, $uid = -1 )
FrontEndUsers.api.php:1008:    $module =& $this->GetModule();
FrontEndUsers.api.php:1010:    if( !eregi("^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$", $email ) )
FrontEndUsers.api.php:1013:      	$result[1] = $module->Lang('error_improperemailformat');
FrontEndUsers.api.php:1017:    $module =& $this->GetModule();
FrontEndUsers.api.php:1018:	 $db =& $this->GetDb();
FrontEndUsers.api.php:1020:    if ($module->GetPreference('username_is_email'))
FrontEndUsers.api.php:1025:				if ($uid > -1)
FrontEndUsers.api.php:1030:				$dbresult = $db->Execute( $q, $parm );
FrontEndUsers.api.php:1031:				if( $dbresult && $dbresult->RecordCount() )
FrontEndUsers.api.php:1034:						$result[1] = $module->Lang('error_emailalreadyused');
FrontEndUsers.api.php:1038:    else if( !$module->GetPreference('allow_duplicate_emails') )
FrontEndUsers.api.php:1044:				if( $uid > -1 )
FrontEndUsers.api.php:1049:				$dbresult = $db->Execute( $q, array( $email ) );
FrontEndUsers.api.php:1050:				if( $dbresult && $dbresult->RecordCount() )
FrontEndUsers.api.php:1053:						$result[1] = $module->Lang('error_emailalreadyused');
FrontEndUsers.api.php:1069:    $module =& $this->GetModule();
FrontEndUsers.api.php:1070:    $minlen = $module->GetPreference('min_usernamelength', 4 );
FrontEndUsers.api.php:1071:    $maxlen = $module->GetPreference('max_usernamelength', 20 );
FrontEndUsers.api.php:1076:    if ($module->GetPreference('username_is_email'))
FrontEndUsers.api.php:1078:        $test = $this->IsValidEmailAddress($username);
FrontEndUsers.api.php:1084:    else if( !preg_match( '/^[a-zA-Z0-9_-]*$/', $username ) )
FrontEndUsers.api.php:1105:    $db =& $this->GetDb();
FrontEndUsers.api.php:1114:    $dbresult = $db->Execute( $q, $parms );
FrontEndUsers.api.php:1117:	return array( FALSE, $db->ErrorMsg() );
FrontEndUsers.api.php:1132:	$this->_DisplayErrorPage ($id, $params, $return_id,
FrontEndUsers.api.php:1133:				  $this->Lang ('error_insufficientparams'));
FrontEndUsers.api.php:1137:    $db =& $this->GetDb();
FrontEndUsers.api.php:1139:    $eid = $this->GetGroupID( $name );
FrontEndUsers.api.php:1142:	$mod =& $this->GetModule();
FrontEndUsers.api.php:1143:	return array(FALSE,$mod->Lang('error_groupname_exists'));
FrontEndUsers.api.php:1148:    $dbresult = $db->Execute( $q, array( $name, $desc, $id ) );
FrontEndUsers.api.php:1151:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:1160:    $db =& $this->GetDb();
FrontEndUsers.api.php:1163:    $dbresult = $db->Execute( $q, array( md5($password), $uid ));
FrontEndUsers.api.php:1166:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:1177:    $db =& $this->GetDb();
FrontEndUsers.api.php:1180:    $ret = $this->GetUserInfo( $uid );
FrontEndUsers.api.php:1183:    	$module =& $this->GetModule();
FrontEndUsers.api.php:1184:        return array(FALSE, $module->Lang('error_usernotfound'));	
FrontEndUsers.api.php:1188:    $nuid = $this->GetUserID($username);
FrontEndUsers.api.php:1191:	$module =& $this->GetModule();
FrontEndUsers.api.php:1192:	return array(FALSE, $module->Lang('error_usernametaken',$uid));
FrontEndUsers.api.php:1209:	$parms[] = trim($db->DBTimeStamp($expires),"'");
FrontEndUsers.api.php:1213:    $dbresult = $db->Execute( $q, $parms );
FrontEndUsers.api.php:1217:				return array( FALSE, $db->ErrorMsg() );
FrontEndUsers.api.php:1220:		if( isset($this->_cached_uid_map[$uid]) )
FrontEndUsers.api.php:1222:				unset($this->_cached_uid_map[$uid]);
FrontEndUsers.api.php:1235:    $db =& $this->GetDb();
FrontEndUsers.api.php:1238:    $ret = $this->GetUserInfo( $uid );
FrontEndUsers.api.php:1247:    $dbresult = $db->Execute( $q, array( $uid ));
FrontEndUsers.api.php:1250:	return array( FALSE, $db->ErrorMsg()  );
FrontEndUsers.api.php:1258:      $dbresult = $db->Execute( $q, array( $uid, $grpid ) );
FrontEndUsers.api.php:1261:	  return array( FALSE, $db->ErrorMsg()  );
FrontEndUsers.api.php:1275:    $this->DeleteUserPropertyFull( "", $uid, true );
FrontEndUsers.api.php:1280:      if ( $this->SetUserPropertyFull( $key, $val, $uid ) == false)
FrontEndUsers.api.php:1295:    $data = $this->GetUserInfo( $uid );
FrontEndUsers.api.php:1304:    $db =& $this->GetDb();
FrontEndUsers.api.php:1308:    $dbresult=$db->Execute($q,$p);
FrontEndUsers.api.php:1313:    while( $row = $dbresult->FetchRow() )
FrontEndUsers.api.php:1323:    $db =& $this->GetDb();
FrontEndUsers.api.php:1325:    $dbresult=$db->Execute($q,array($userid));
FrontEndUsers.api.php:1326:    if ($dbresult && $dbresult->RecordCount()) {
FrontEndUsers.api.php:1328:      while ($row=$dbresult->FetchRow()) {
FrontEndUsers.api.php:1344:    $userid=$this->LoggedInId();
FrontEndUsers.api.php:1346:    return $this->GetUserPropertyFull($title,$userid,$defaultvalue);
FrontEndUsers.api.php:1352:    $db=$this->GetDB();
FrontEndUsers.api.php:1355:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1356:    if ($result && $result->RecordCount()) {
FrontEndUsers.api.php:1357:      $row=$result->FetchRow();
FrontEndUsers.api.php:1367:    $userid=$this->LoggedInId();
FrontEndUsers.api.php:1369:    return $this->SetUserPropertyFull($title,$data,$userid);
FrontEndUsers.api.php:1375:    $db=$this->GetDB();
FrontEndUsers.api.php:1378:    $r=$db->Execute($q,$p);
FrontEndUsers.api.php:1379:    if (!$r || ($r->NumRows()==0)) {
FrontEndUsers.api.php:1380:      $newid=$db->GenID(cms_db_prefix()."module_feusers_properties_seq");
FrontEndUsers.api.php:1383:      $r=$db->Execute($q,$p);
FrontEndUsers.api.php:1385:      $row=$r->FetchRow();
FrontEndUsers.api.php:1388:      $r=$db->Execute($q,$p);
FrontEndUsers.api.php:1396:    $db = $this->GetDB();
FrontEndUsers.api.php:1399:    $result = $db->Execute( $q, $p );
FrontEndUsers.api.php:1406:    $userid=$this->LoggedInId();
FrontEndUsers.api.php:1408:    $db=$this->GetDB();
FrontEndUsers.api.php:1413:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1420:    $db=$this->GetDB();
FrontEndUsers.api.php:1425:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1432:    return $this->DeleteUserProperty("",true);
FrontEndUsers.api.php:1438:    return $this->DeleteUserPropertyFull("",$userid,true);
FrontEndUsers.api.php:1444:    $db =& $this->GetDb();
FrontEndUsers.api.php:1472:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1473:    if ($result && $result->RecordCount()) return true;
FrontEndUsers.api.php:1480:    $userid=$this->LoggedInId();
FrontEndUsers.api.php:1481:    if ($userid) return $this->GetUserName($userid); else return "";
FrontEndUsers.api.php:1489:		$config =& $gCms->GetConfig();
FrontEndUsers.api.php:1491:    $db =& $this->GetDb();
FrontEndUsers.api.php:1496:				$uid = $this->LoggedInId();
FrontEndUsers.api.php:1507:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1510:		@setcookie('feu_sessionid','',time()-60000,"/");
FrontEndUsers.api.php:1511:		@setcookie('feu_uid','',time()-60000,"/");
FrontEndUsers.api.php:1516:    $db->Execute( $q, array( $uid, session_id(), 'logout',
FrontEndUsers.api.php:1517:			     trim($db->DBTimeStamp(time()),"'"),$ip ));
FrontEndUsers.api.php:1524:    $db =& $this->GetDb();
FrontEndUsers.api.php:1527:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1531:    $db->Execute( $q, array( $uid, session_id(), $eventmsg ,
FrontEndUsers.api.php:1532:														 trim($db->DBTimeStamp(time()),"'"),$ip) );
FrontEndUsers.api.php:1538:    $module =& $this->GetModule();
FrontEndUsers.api.php:1539:    $expirytime = $module->GetPreference('user_session_expires');
FrontEndUsers.api.php:1540:    $db =& $this->GetDb();
FrontEndUsers.api.php:1542:    $p=array(time()-$expirytime);
FrontEndUsers.api.php:1543:    $dbresult = $db->Execute( $q, $p );
FrontEndUsers.api.php:1544:    while( $dbresult && ($row = $dbresult->FetchRow()) )
FrontEndUsers.api.php:1549:				$db->Execute( $q2, array( $row['userid'], $row['sessionid'],'expire',
FrontEndUsers.api.php:1550:																	trim($db->DbTimeStamp(time()),"'")));
FrontEndUsers.api.php:1551:				$module->NotifyExpiredUser( $row['userid'] );
FrontEndUsers.api.php:1555:    $result=$db->Execute($q,$p);
FrontEndUsers.api.php:1562:		$config =& $gCms->GetConfig();
FrontEndUsers.api.php:1563:		if( isset($gCms->variables['feu_logginid']) )
FrontEndUsers.api.php:1566:				return $gCms->variables['feu_logginid'];
FrontEndUsers.api.php:1569:    $db =& $this->GetDb();
FrontEndUsers.api.php:1571:    $this->ExpireUsers();
FrontEndUsers.api.php:1578:		$module =& $this->GetModule();
FrontEndUsers.api.php:1579:		$expirytime = $module->GetPreference('user_session_expires');
FrontEndUsers.api.php:1582:    $result = $db->GetOne($q,$p);
FrontEndUsers.api.php:1592:				$db->Execute( $q, array( time(), $sessionid ) );
FrontEndUsers.api.php:1597:				$gCms->variables['feu_logginid'] = $retval;
FrontEndUsers.api.php:1602:				if( $module->GetPreference('cookie_keepalive',0) &&
FrontEndUsers.api.php:1615:						 $row = $db->GetRow($q, array($sessionid) );
FrontEndUsers.api.php:1622:						 @setcookie('feu_sessionid','',time()-60000,$config['root_path']);
FrontEndUsers.api.php:1623:						 @setcookie('feu_uid','',time()-60000,$config['root_path']);
FrontEndUsers.api.php:1631:						$db->Execute( $q, array( $sessionid ) );
FrontEndUsers.api.php:1642:						$db->Execute( $q, array($sessionid, time(), $uid) );
FrontEndUsers.api.php:1648:						$gCms->variables['feu_logginid'] = $uid;
FrontEndUsers.api.php:1662:    if( !$this->LoggedInId() ) 
FrontEndUsers.api.php:1675:    $db =& $this->GetDb();
FrontEndUsers.api.php:1679:    $result=$db->Execute($q,$params);
FrontEndUsers.api.php:1680:    if ($result && $result->RecordCount()) 
FrontEndUsers.api.php:1694:		$row = $this->_getUser($userid);
FrontEndUsers.api.php:1703:    $db =& $this->GetDb();
FrontEndUsers.api.php:1705:    $dbresult=$db->Execute($q,array($username));
FrontEndUsers.api.php:1706:    if ($dbresult && $dbresult->RecordCount()) {
FrontEndUsers.api.php:1707:      $row=$dbresult->FetchRow();
FrontEndUsers.api.php:1718:    $db =& $this->GetDb();
FrontEndUsers.api.php:1723:    $dbresult = $db->Execute( $q, array( $name ) );
FrontEndUsers.api.php:1726:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:1728:    $row = $dbresult->FetchRow();
FrontEndUsers.api.php:1731:	return array(FALSE,$this->Lang('error_groupname_exists'));
FrontEndUsers.api.php:1735:      $db->GenID( cms_db_prefix()."module_feusers_groups_seq" );
FrontEndUsers.api.php:1738:    $dbresult = $db->Execute( $q, array( $grpid, $name, $description ) );
FrontEndUsers.api.php:1741:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:1751:    $db =& $this->GetDb();
FrontEndUsers.api.php:1756:    $dbresult = $db->Execute( $q, array( $name ) );
FrontEndUsers.api.php:1759:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:1761:    $row = $dbresult->FetchRow();
FrontEndUsers.api.php:1764:	$module =& $this->GetModule();
FrontEndUsers.api.php:1765:	return array(FALSE,$module->Lang('error_username_exists'));
FrontEndUsers.api.php:1770:      $db->GenID( cms_db_prefix()."module_feusers_users_seq" );
FrontEndUsers.api.php:1781:    $dbresult = $db->Execute( $q, array( $uid, $name, $pwtxt, 
FrontEndUsers.api.php:1782:					 trim($db->DbTimeStamp(time()),"'"),
FrontEndUsers.api.php:1783:					 trim($db->DbTimeStamp($expires),"'") ) );
FrontEndUsers.api.php:1786:	return array(FALSE,$db->ErrorMsg());
FrontEndUsers.api.php:1795:    $db =& $this->GetDb();
FrontEndUsers.api.php:1797:    $dbresult=$db->Execute($q,array($groupid));
FrontEndUsers.api.php:1798:    if ($dbresult && $dbresult->RecordCount()) {
FrontEndUsers.api.php:1799:      $row=$dbresult->FetchRow();
FrontEndUsers.api.php:1809:    $db =& $this->GetDb();
FrontEndUsers.api.php:1811:    $dbresult=$db->Execute($q,array($groupid));
FrontEndUsers.api.php:1812:    if ($dbresult && $dbresult->RecordCount()) {
FrontEndUsers.api.php:1813:      $row=$dbresult->FetchRow();
FrontEndUsers.api.php:1825:    $db = $this->GetDB();
FrontEndUsers.api.php:1830:    $dbresult = $db->Execute( $q, array( $id ) );
FrontEndUsers.api.php:1833:	return array( FALSE, $db->ErrorMsg() );
FrontEndUsers.api.php:1839:    $dbresult = $db->Execute( $q, array( $id ) );
FrontEndUsers.api.php:1842:	return array( FALSE, $db->ErrorMsg() );
FrontEndUsers.api.php:1847:    $dbresult = $db->Execute( $q, array( $id ) );
FrontEndUsers.api.php:1850:	return array( FALSE, $db->ErrorMsg() );
FrontEndUsers.api.php:1860:    $db =& $this->GetDb();
FrontEndUsers.api.php:1864:    $dbresult = $db->Execute( $q );
FrontEndUsers.api.php:1866:    while( $row = $dbresult->FetchRow() )
FrontEndUsers.api.php:1878:    $db =& $this->GetDb();
FrontEndUsers.api.php:1882:    $dbresult = $db->Execute( $query );
FrontEndUsers.api.php:1884:      while( $row = $dbresult->FetchRow() )
FrontEndUsers.api.php:1896:    $db =& $this->GetDb();
FrontEndUsers.api.php:1899:    $dbresult=$db->Execute($q,array($groupname));
FrontEndUsers.api.php:1900:    if ($dbresult && $dbresult->RecordCount()) 
FrontEndUsers.api.php:1902:				$row=$dbresult->FetchRow();
FrontEndUsers.api.php:1914:    $db =& $this->GetDb();
FrontEndUsers.api.php:1916:    $dbresult=$db->Execute($q,array($userid));
FrontEndUsers.api.php:1917:    if ($dbresult && $dbresult->RecordCount()) {
FrontEndUsers.api.php:1919:      while ($row=$dbresult->FetchRow()) {
FrontEndUsers.api.php:1921:					$result.=",".$this->GetGroupName($row["groupid"]);
FrontEndUsers.api.php:1923:					$result=$this->GetGroupName($row["groupid"]);
FrontEndUsers.api.php:1936:    $db =& $this->GetDb();
FrontEndUsers.api.php:1942:    $dbresult=$db->Execute($q);
FrontEndUsers.api.php:1944:    $dbresult=$db->Execute($q);
FrontEndUsers.api.php:1946:		if( isset($this->_cached_uid_map[$userid]) )
FrontEndUsers.api.php:1948:				unset($this->_cached_uid_map[$userid]);
FrontEndUsers.module.php:3:#-------------------------------------------------------------------------
FrontEndUsers.module.php:10:#-------------------------------------------------------------------------
FrontEndUsers.module.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
FrontEndUsers.module.php:14:#-------------------------------------------------------------------------
FrontEndUsers.module.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
FrontEndUsers.module.php:36:#-------------------------------------------------------------------------
FrontEndUsers.module.php:50:<!-- forgot password email template -->
FrontEndUsers.module.php:54:<!-- forgot password email template -->
FrontEndUsers.module.php:59:<!-- Logout form template -->
FrontEndUsers.module.php:62:  <p><a href="{$url_logout}" title="{$mod->Lang(\'info_logout\')}">{$mod->Lang(\'logout\')}</a></p>
FrontEndUsers.module.php:63:  <p><a href="{$url_changesettings}" title="{$mod->Lang(\'info_changesettings\')}">{$mod->Lang(\'prompt_changesettings\')}</a></p>
FrontEndUsers.module.php:65:<!-- Logout form template -->
FrontEndUsers.module.php:89:    $this->types = array( 'text' => 0,
FrontEndUsers.module.php:100:    $smarty =& $gCms->GetSmarty();
FrontEndUsers.module.php:101:    $smarty->assign_by_ref('feu_smarty',$obj);
FrontEndUsers.module.php:106:    if( $this->usermanip == NULL )
FrontEndUsers.module.php:117:      $this->usermanip = new $manipulator( $this );
FrontEndUsers.module.php:118:      if( !is_object( $this->usermanip ) )
FrontEndUsers.module.php:127:    return $o1->get($len);
FrontEndUsers.module.php:131:  /*---------------------------------------------------------
FrontEndUsers.module.php:133:   ---------------------------------------------------------*/
FrontEndUsers.module.php:140:  /*---------------------------------------------------------
FrontEndUsers.module.php:142:   ---------------------------------------------------------*/
FrontEndUsers.module.php:149:  /*---------------------------------------------------------
FrontEndUsers.module.php:154:   ---------------------------------------------------------*/
FrontEndUsers.module.php:160:      $k = $this->Lang($k);
FrontEndUsers.module.php:167:  /*---------------------------------------------------------
FrontEndUsers.module.php:169:   ---------------------------------------------------------*/
FrontEndUsers.module.php:175:  /*---------------------------------------------------------
FrontEndUsers.module.php:177:   ---------------------------------------------------------*/
FrontEndUsers.module.php:183:  /*---------------------------------------------------------
FrontEndUsers.module.php:185:   ---------------------------------------------------------*/
FrontEndUsers.module.php:191:  /*---------------------------------------------------------
FrontEndUsers.module.php:193:   ---------------------------------------------------------*/
FrontEndUsers.module.php:201: /*---------------------------------------------------------
FrontEndUsers.module.php:203:   ---------------------------------------------------------*/
FrontEndUsers.module.php:206:    return $this->Lang ('moddescription');
FrontEndUsers.module.php:210:  /*---------------------------------------------------------
FrontEndUsers.module.php:212:   ---------------------------------------------------------*/
FrontEndUsers.module.php:219:  /*---------------------------------------------------------
FrontEndUsers.module.php:221:   ---------------------------------------------------------*/
FrontEndUsers.module.php:228:  /*---------------------------------------------------------
FrontEndUsers.module.php:230:   ---------------------------------------------------------*/
FrontEndUsers.module.php:233:    $this->RestrictUnknownParams();
FrontEndUsers.module.php:234:    $this->RegisterModulePlugin();
FrontEndUsers.module.php:235:    $this->SetParameterType('code',CLEAN_STRING);
FrontEndUsers.module.php:236:    $this->SetParameterType('form',CLEAN_STRING);
FrontEndUsers.module.php:237:    $this->SetParameterType('returnto',CLEAN_STRING);
FrontEndUsers.module.php:238:    $this->SetParameterType('only_groups',CLEAN_STRING);
FrontEndUsers.module.php:239:    $this->SetParameterType('nocaptcha',CLEAN_INT);
FrontEndUsers.module.php:240:    $this->SetParameterType('input_username',CLEAN_STRING);
FrontEndUsers.module.php:241:    $this->SetParameterType('input_password',CLEAN_STRING);
FrontEndUsers.module.php:242:    $this->SetParameterType('input_repeatpassword',CLEAN_STRING);
FrontEndUsers.module.php:243:    $this->SetParameterType('error',CLEAN_INT);
FrontEndUsers.module.php:244:    $this->SetParameterType('message',CLEAN_STRING);
FrontEndUsers.module.php:245:    $this->SetParameterType('lostun_group',CLEAN_STRING);
FrontEndUsers.module.php:246:    $this->SetParameterType('input_captcha',CLEAN_STRING);
FrontEndUsers.module.php:247:    $this->SetParameterType('submit',CLEAN_STRING);
FrontEndUsers.module.php:248:    $this->SetParameterType('cancel',CLEAN_STRING);
FrontEndUsers.module.php:249:    $this->SetParameterType('input_returnto',CLEAN_INT);
FrontEndUsers.module.php:250:    $this->SetParameterType('input_uid',CLEAN_INT);
FrontEndUsers.module.php:251:    $this->SetParameterType('input_code',CLEAN_STRING);
FrontEndUsers.module.php:252:    $this->SetParameterType('skipformdisplay',CLEAN_INT);
FrontEndUsers.module.php:253:    $this->SetParameterType('uid',CLEAN_INT);
FrontEndUsers.module.php:254:    $this->SetParameterType('checkonly',CLEAN_INT);
FrontEndUsers.module.php:256:    $this->SetParameterType('noinline',CLEAN_INT);
FrontEndUsers.module.php:257:    $this->CreateParameter('noinline','',$this->Lang('help_noinline'));
FrontEndUsers.module.php:259:    $this->SetParameterType(CLEAN_REGEXP.'/feu_.*/',CLEAN_STRING);
FrontEndUsers.module.php:261:    $this->RegisterRoute('/[fF]eu\/verify\/(?P<returnid>[0-9]+)\/(?P<uid>[0-9]+)\/(?P<code>.*?)$/',
FrontEndUsers.module.php:264:    $this->RegisterRoute('/[fF]uo\/reset\/(?P<uid>[0-9]+)$/',
FrontEndUsers.module.php:269:    //nuno-dev-Pretty Url's
FrontEndUsers.module.php:270:    $this->RegisterRoute('/[fF]eu\/edit\/(?P<returnid>[0-9]+)$/',
FrontEndUsers.module.php:273:    $this->RegisterRoute('/[fF]eu\/logout\/(?P<returnid>[0-9]+)$/',
FrontEndUsers.module.php:276:    $this->RegisterRoute('/[fF]eu\/forgot\/(?P<returnid>[0-9]+)$/',
FrontEndUsers.module.php:279:    $this->RegisterRoute('/[fF]eu\/lostusername\/(?P<returnid>[0-9]+)$/',
FrontEndUsers.module.php:286:  /*---------------------------------------------------------
FrontEndUsers.module.php:288:   ---------------------------------------------------------*/
FrontEndUsers.module.php:292:    $uid = $this->LoggedInId();
FrontEndUsers.module.php:294:    $username = $this->LoggedInName();
FrontEndUsers.module.php:297:    $groups = $this->GetMemberGroupsArray( $uid );
FrontEndUsers.module.php:298:    $groupname = $this->GetGroupName( $groups[0]['groupid'] );
FrontEndUsers.module.php:300:    $this->smarty->assign('userid', $uid);
FrontEndUsers.module.php:301:    $this->smarty->assign('username', $username );
FrontEndUsers.module.php:302:    $this->smarty->assign('link_logout',
FrontEndUsers.module.php:303:			  $this->CreateLink($id,"logout",$returnid,
FrontEndUsers.module.php:304:					    $this->Lang('logout')));
FrontEndUsers.module.php:305:  //nuno-dev-Pretty Url's
FrontEndUsers.module.php:307:	 $logout_feu = $this->CreateLink($id, 'logout', $returnid,  '',
FrontEndUsers.module.php:310:	$this->smarty->assign('url_logout', $logout_feu);
FrontEndUsers.module.php:313:    $page = $this->GetPreference('pageid_changesettings');
FrontEndUsers.module.php:319:        $this->smarty->assign('link_changesettings','<!-- Error could not determine page from alias/id -->');
FrontEndUsers.module.php:323:        $this->smarty->assign('link_changesettings',
FrontEndUsers.module.php:324:			      $this->CreateLink($id,'default',$pageid,
FrontEndUsers.module.php:325:						$this->Lang('prompt_changesettings'),
FrontEndUsers.module.php:327:	//nuno-dev-Pretty Url's
FrontEndUsers.module.php:329:	$changesettings_feu = $this->CreateLink($id, 'default', $pageid,  '',
FrontEndUsers.module.php:333:	$this->smarty->assign('url_changesettings',$changesettings_feu);
FrontEndUsers.module.php:339:       $this->smarty->assign('link_changesettings',
FrontEndUsers.module.php:340:			  $this->CreateLink($id,'default',$returnid,
FrontEndUsers.module.php:341:					    $this->Lang('prompt_changesettings'),
FrontEndUsers.module.php:343:      //nuno-dev-Pretty Url's
FrontEndUsers.module.php:345:	$changesettings_feu = $this->CreateLink($id, 'default', $returnid,  '',
FrontEndUsers.module.php:349:	$this->smarty->assign('url_changesettings',$changesettings_feu);
FrontEndUsers.module.php:352:    $props = $this->GetUserProperties( $this->LoggedInId() );
FrontEndUsers.module.php:355:      $this->smarty->assign($p['title'],$p['data']);
FrontEndUsers.module.php:360:  /*---------------------------------------------------------
FrontEndUsers.module.php:362:   ---------------------------------------------------------*/
FrontEndUsers.module.php:365:    return $this->Lang('event_info_'.$eventname );
FrontEndUsers.module.php:369:  /*---------------------------------------------------------
FrontEndUsers.module.php:371:   ---------------------------------------------------------*/
FrontEndUsers.module.php:374:    return $this->Lang('event_help_'.$eventname );
FrontEndUsers.module.php:378:  /*---------------------------------------------------------
FrontEndUsers.module.php:380:   ---------------------------------------------------------*/
FrontEndUsers.module.php:383:    return $this->Lang('friendlyname');
FrontEndUsers.module.php:387:  /*---------------------------------------------------------
FrontEndUsers.module.php:389:   ---------------------------------------------------------*/
FrontEndUsers.module.php:398:    $db =& $this->GetDb();
FrontEndUsers.module.php:400:    $dbresult = $db->Execute($query);
FrontEndUsers.module.php:401:    if ($dbresult && $dbresult->RecordCount() > 0)	{
FrontEndUsers.module.php:402:      $row = $dbresult->FetchRow();
FrontEndUsers.module.php:411:   if ($this->GetPreference('feusers_specific_permissions','0') == '1')
FrontEndUsers.module.php:413:       $p1 = $this->CheckPermission( 'FEU Add Users' );
FrontEndUsers.module.php:414:       $p2 = $this->CheckPermission( 'FEU Modify Users' );
FrontEndUsers.module.php:415:       $p3 = $this->CheckPermission( 'FEU Remove Users' );
FrontEndUsers.module.php:416:       $p4 = $this->CheckPermission( 'FEU Add Groups' );
FrontEndUsers.module.php:417:       $p5 = $this->CheckPermission( 'FEU Modify Groups' );
FrontEndUsers.module.php:418:       $p6 = $this->CheckPermission( 'FEU Modify Group Assignments' );
FrontEndUsers.module.php:419:       $p7 = $this->CheckPermission( 'FEU Remove Groups' );
FrontEndUsers.module.php:420:       $p8 = $this->CheckPermission( 'FEU Modify Site Preferences' );
FrontEndUsers.module.php:421:       $p9 = $this->CheckPermission( 'FEU Modify FrontEndUserProps' );
FrontEndUsers.module.php:422:       $p10 = $this->CheckPermission( 'FEU Modify Templates' );
FrontEndUsers.module.php:426:       $p1 = $this->CheckPermission( 'Add Users' );
FrontEndUsers.module.php:427:       $p2 = $this->CheckPermission( 'Modify Users' );
FrontEndUsers.module.php:428:       $p3 = $this->CheckPermission( 'Remove Users' );
FrontEndUsers.module.php:429:       $p4 = $this->CheckPermission( 'Add Groups' );
FrontEndUsers.module.php:430:       $p5 = $this->CheckPermission( 'Modify Groups' );
FrontEndUsers.module.php:431:       $p6 = $this->CheckPermission( 'Modify Group Assignments' );
FrontEndUsers.module.php:432:       $p7 = $this->CheckPermission( 'Remove Groups' );
FrontEndUsers.module.php:433:       $p8 = $this->CheckPermission( 'Modify Site Preferences' );
FrontEndUsers.module.php:434:       $p9 = $this->CheckPermission( 'Modify FrontEndUserProps' );
FrontEndUsers.module.php:435:       $p10 = $this->CheckPermission( 'Modify Templates' );
FrontEndUsers.module.php:509:    return $this->Lang('postinstallmessage');
FrontEndUsers.module.php:515:    if ($this->GetPreference('feusers_specific_permissions','0') == '1')
FrontEndUsers.module.php:517:	return $this->CheckPermission('FEU Modify Site Preferences') ||
FrontEndUsers.module.php:518:	  $this->CheckPermission('FEU Modify Templates') ||
FrontEndUsers.module.php:519:	  $this->CheckPermission('FEU Add Groups') ||
FrontEndUsers.module.php:520:	  $this->CheckPermission('FEU Modify Groups') ||
FrontEndUsers.module.php:521:	  $this->CheckPermission('FEU Remove Groups') ||
FrontEndUsers.module.php:522:	  $this->CheckPermission('FEU Add Users') ||
FrontEndUsers.module.php:523:	  $this->CheckPermission('FEU Modify Users') ||
FrontEndUsers.module.php:524:	  $this->CheckPermission('FEU Remove Users') ||
FrontEndUsers.module.php:525:	  $this->CheckPermission('FEU Modify FrontEndUserProps');
FrontEndUsers.module.php:529:	return $this->CheckPermission('Modify Site Preferences') ||
FrontEndUsers.module.php:530:	  $this->CheckPermission('Modify Templates') ||
FrontEndUsers.module.php:531:	  $this->CheckPermission('Add Groups') ||
FrontEndUsers.module.php:532:	  $this->CheckPermission('Modify Groups') ||
FrontEndUsers.module.php:533:	  $this->CheckPermission('Remove Groups') ||
FrontEndUsers.module.php:534:	  $this->CheckPermission('Add Users') ||
FrontEndUsers.module.php:535:	  $this->CheckPermission('Modify Users') ||
FrontEndUsers.module.php:536:	  $this->CheckPermission('Remove Users') ||
FrontEndUsers.module.php:537:	  $this->CheckPermission('Modify FrontEndUserProps');
FrontEndUsers.module.php:542:  /*---------------------------------------------------------
FrontEndUsers.module.php:548:   ---------------------------------------------------------*/
FrontEndUsers.module.php:551:    $this->smarty->assign('title_error', $this->Lang('error'));
FrontEndUsers.module.php:554:	$this->smarty->assign('message', $message);
FrontEndUsers.module.php:558:    echo $this->ProcessTemplate('error.tpl');
FrontEndUsers.module.php:567:	$this->SetTemplate('feusers_changesettingsform', file_get_contents($fn) );
FrontEndUsers.module.php:571:	$this->SetTemplate('feusers_changesettingsform', $params['templatecontent']);
FrontEndUsers.module.php:573:    $this->myRedirectToTab($id, 'changesettings_template' );
FrontEndUsers.module.php:583:	$this->SetTemplate('feusers_forgotpasswordform', file_get_contents($fn) );
FrontEndUsers.module.php:585:	$this->SetTemplate('feusers_forgotpasswordemailform', $this->dflt_forgotpasswordtemplate2);
FrontEndUsers.module.php:588:	$this->SetTemplate('feusers_forgotpasswordverifyform',file_get_contents($fn));
FrontEndUsers.module.php:592:	$this->SetTemplate('feusers_forgotpasswordform', $params['templatecontent1']);
FrontEndUsers.module.php:593:	$this->SetTemplate('feusers_forgotpasswordemailform', $params['templatecontent2']);;
FrontEndUsers.module.php:594:	$this->SetTemplate('feusers_forgotpasswordverifyform', $params['templatecontent3']);;
FrontEndUsers.module.php:596:    $this->myRedirectToTab($id, 'forgotpassword_template' );
FrontEndUsers.module.php:605:	$this->SetTemplate('feusers_loginform', file_get_contents($fn) );
FrontEndUsers.module.php:609:	$this->SetTemplate('feusers_loginform', $params['templateloginform']);
FrontEndUsers.module.php:611:    $this->myRedirectToTab($id, 'logintemplate' );
FrontEndUsers.module.php:619:	$this->SetTemplate('feusers_logoutform', $this->dflt_logoutformtemplate);
FrontEndUsers.module.php:623:	$this->SetTemplate('feusers_logoutform', $params['templatelogoutform']);
FrontEndUsers.module.php:625:    $this->myRedirectToTab($id, 'logouttemplate', $params);
FrontEndUsers.module.php:634:	$this->_AttemptLoginWithCookie();
FrontEndUsers.module.php:635:	if( !$this->LoggedIn() ) 
FrontEndUsers.module.php:665:	    $this->_ExportLoggedInUserVariables( $id, $params, $returnid );
FrontEndUsers.module.php:679:    $tmp = $this->_session_to_params();
FrontEndUsers.module.php:687:	$this->smarty->assign('message', $params['message'] );
FrontEndUsers.module.php:691:	$this->smarty->assign('error', $params['error'] );
FrontEndUsers.module.php:708:	  $proprelations = $this->GetGroupPropertyRelations( $grpid );
FrontEndUsers.module.php:716:	if( $this->GetPreference('require_onegroup') == 1 )
FrontEndUsers.module.php:719:	    $params['message'] = $this->Lang('error_onegrouprequired');
FrontEndUsers.module.php:720:	    $this->myRedirect( $id, 'adduser', $returnid, $params, true );
FrontEndUsers.module.php:726:	    $this->myRedirect( $id, 'do_edituser3', $returnid, $params, true );
FrontEndUsers.module.php:730:	    $this->myRedirect( $id, 'do_adduser3', $returnid, $params, true );
FrontEndUsers.module.php:736:	$params['message'] = $this->Lang('error_properties');
FrontEndUsers.module.php:737:	$this->myRedirect( $id, 'adduser', $returnid, $params, true );
FrontEndUsers.module.php:746:      $defn = $this->GetPropertyDefn( $prop['name'] );
FrontEndUsers.module.php:755:	  $propval = $this->GetUserPropertyFull( $prop['name'], $params['user_id'] );
FrontEndUsers.module.php:761:      if( $prop['required'] == 2 ) $color = $this->GetPreference('requried_field_color','blue');
FrontEndUsers.module.php:762:      if( $prop['required'] == 3 ) $color = $this->GetPreference('hidden_field_color','green');
FrontEndUsers.module.php:764:      if( $prop['required'] == 2 ) $marker = $this->GetPreference('requried_field_marker','*');
FrontEndUsers.module.php:765:      if( $prop['required'] == 3 ) $marker = $this->GetPreference('hidden_field_marker','!!');
FrontEndUsers.module.php:766:      $onerow->required = ($prop['required'] == 2);
FrontEndUsers.module.php:767:      $onerow->type     = $defn['type'];
FrontEndUsers.module.php:768:      $onerow->color    = $color;
FrontEndUsers.module.php:769:      $onerow->marker   = $marker;
FrontEndUsers.module.php:770:      $onerow->hidden = RRUtils::myCreateInputHidden( $id, 'hidden_'.$prop['name'],
FrontEndUsers.module.php:777:      $seloptions = $this->GetSelectOptions($prop['name']);
FrontEndUsers.module.php:789:      $onerow->prompt = $defn['prompt'];
FrontEndUsers.module.php:793:	  $onerow->control = $this->CreateInputText( $id, 'input_'.$prop['name'],
FrontEndUsers.module.php:798:	  $onerow->control = RRUtils::myCreateInputCheckbox( $id, 'input_'.$prop['name'], 1, $val );
FrontEndUsers.module.php:802:	  $onerow->control = $this->CreateInputText( $id, 'input_'.$prop['name'],
FrontEndUsers.module.php:807:	  $onerow->control = $this->CreateTextArea(is_array($attribs) && isset($attribs['wysiwyg'])?$attribs['wysiwyg']:0,
FrontEndUsers.module.php:812:	  $onerow->control = $this->CreateInputDropdown(
FrontEndUsers.module.php:816:							-1, 
FrontEndUsers.module.php:821:	  $onerow->control = $this->CreateInputSelectList(
FrontEndUsers.module.php:833:		$destDir1 = $gCms->config['uploads_path'].DIRECTORY_SEPARATOR;
FrontEndUsers.module.php:834:		$destDir1 .= $this->GetPreference('image_destination_path','feusers').DIRECTORY_SEPARATOR;
FrontEndUsers.module.php:835:		$destDir2 = $gCms->config['uploads_url'].DIRECTORY_SEPARATOR;
FrontEndUsers.module.php:836:		$destDir2 .= $this->GetPreference('image_destination_path','feusers').DIRECTORY_SEPARATOR;
FrontEndUsers.module.php:841:		    $onerow->image = '<img src="'.$file2.'" alt="'.$val.'"/>';
FrontEndUsers.module.php:842:		    $onerow->prompt2 = $this->Lang('prompt_clear');
FrontEndUsers.module.php:843:		    $onerow->control2 = $this->CreateInputCheckbox($id,'input_'.$prop['name'].'_clear','clear','');
FrontEndUsers.module.php:846:	    $onerow->control = $this->CreateFileUploadInput($id,'input_'.$prop['name'], '', $defn['length']);
FrontEndUsers.module.php:852:	    $onerow->control = $this->CreateInputRadioGroup($id, 'input_'.$prop['name'],
FrontEndUsers.module.php:863:	    $parms['start_year'] = (is_array($attribs) && isset($attribs['startyear']))?$attribs['startyear']:"-5";
FrontEndUsers.module.php:871:	    $onerow->control = $this->ProcessTemplateFromData($str);
FrontEndUsers.module.php:881:	$this->smarty->assign('edittext',$this->Lang('editing_user'));
FrontEndUsers.module.php:882:	$this->smarty->assign('username',trim($params['input_username']));
FrontEndUsers.module.php:884:    $this->smarty->assign('hidden', 
FrontEndUsers.module.php:886:    $this->smarty->assign('controls', $rowarray);
FrontEndUsers.module.php:887:    $this->smarty->assign('controlcount', count($rowarray));
FrontEndUsers.module.php:888:    $this->smarty->assign('submit',$this->CreateInputSubmit($id,'submit',
FrontEndUsers.module.php:889:							    $this->Lang('submit')));
FrontEndUsers.module.php:890:    $this->smarty->assign('cancel',$this->CreateInputSubmit($id,'cancel',
FrontEndUsers.module.php:891:							    $this->Lang('cancel')));
FrontEndUsers.module.php:892:    $this->smarty->assign('back',$this->CreateInputSubmit($id,'back',
FrontEndUsers.module.php:893:							    $this->Lang('back')));
FrontEndUsers.module.php:896:    $this->smarty->assign('title', $this->Lang('edituser'));
FrontEndUsers.module.php:897:	$this->smarty->assign('hidden2', 
FrontEndUsers.module.php:898:			      $this->CreateInputHidden($id,'user_id',$params['user_id']));
FrontEndUsers.module.php:899:	$this->smarty->assign('startform',
FrontEndUsers.module.php:900:				      $this->CreateFormStart ($id,
FrontEndUsers.module.php:904:							      'multipart/form-data'));
FrontEndUsers.module.php:908:    $this->smarty->assign('title', $this->Lang('adduser'));
FrontEndUsers.module.php:909:	$this->smarty->assign('startform',
FrontEndUsers.module.php:910:			      $this->CreateFormStart ($id,
FrontEndUsers.module.php:914:						      'multipart/form-data'));
FrontEndUsers.module.php:917:    $this->smarty->assign('endform', $this->CreateFormEnd ());
FrontEndUsers.module.php:918:    echo $this->ProcessTemplate( 'adduser2.tpl' );
FrontEndUsers.module.php:938:	$this->smarty->assign('title', $this->Lang('edituser'));
FrontEndUsers.module.php:939:	$this->smarty->assign('startform',
FrontEndUsers.module.php:940:				      $this->CreateFormStart ($id,
FrontEndUsers.module.php:946:	$this->smarty->assign('title', $this->Lang('adduser'));
FrontEndUsers.module.php:947:	$this->smarty->assign('startform',
FrontEndUsers.module.php:948:				      $this->CreateFormStart ($id,
FrontEndUsers.module.php:958:	    $txt .= $this->CreateInputHidden($id,$key,$value);
FrontEndUsers.module.php:960:	$this->smarty->assign('hidden',$txt);
FrontEndUsers.module.php:964:      $this->smarty->assign('error',$params['error']);
FrontEndUsers.module.php:966:      $this->smarty->assign('message',$params['message']);
FrontEndUsers.module.php:969:    if( $this->GetPreference('use_randomusername',0) == 1 )
FrontEndUsers.module.php:971:	$username = $this->GenerateRandomUsername();
FrontEndUsers.module.php:987:    $this->smarty->assign('endform', $this->CreateFormEnd ());
FrontEndUsers.module.php:988:    $this->smarty->assign('submit',
FrontEndUsers.module.php:989:				  $this->CreateInputSubmit ($id, 'submit',
FrontEndUsers.module.php:990:							    $this->Lang('next')));
FrontEndUsers.module.php:991:    $this->smarty->assign('cancel',
FrontEndUsers.module.php:992:				  $this->CreateInputSubmit ($id, 'cancel',
FrontEndUsers.module.php:993:							    $this->Lang('cancel')));
FrontEndUsers.module.php:994:    if ($this->GetPreference('username_is_email'))
FrontEndUsers.module.php:996:      $this->smarty->assign ('prompt_username',
FrontEndUsers.module.php:997:			   $this->Lang ('prompt_email'));
FrontEndUsers.module.php:1001:      $this->smarty->assign ('prompt_username',
FrontEndUsers.module.php:1002:			   $this->Lang ('username'));
FrontEndUsers.module.php:1004:    $this->smarty->assign ('input_username',
FrontEndUsers.module.php:1005:			   $this->CreateInputText ($id, 'input_username',
FrontEndUsers.module.php:1007:						   $this->GetPreference('usernamefldlength'), 
FrontEndUsers.module.php:1008:						   $this->GetPreference('max_usernamelength')));
FrontEndUsers.module.php:1010:    $this->smarty->assign ('prompt_password',
FrontEndUsers.module.php:1011:			   $this->Lang ('password'));
FrontEndUsers.module.php:1012:    $this->smarty->assign ('input_password',
FrontEndUsers.module.php:1013:			   $this->CreateInputPassword ($id, 'input_password',
FrontEndUsers.module.php:1015:						       $this->GetPreference('passwordfldlength'),
FrontEndUsers.module.php:1016:						       $this->GetPreference('max_passwordlength')));
FrontEndUsers.module.php:1017:    $this->smarty->assign ('prompt_repeatpassword',
FrontEndUsers.module.php:1018:			   $this->Lang ('repeatpassword'));
FrontEndUsers.module.php:1019:    $this->smarty->assign ('input_repeatpassword',
FrontEndUsers.module.php:1020:			   $this->CreateInputPassword ($id, 'input_repeatpassword',
FrontEndUsers.module.php:1022:						       $this->GetPreference('passwordfldlength'),
FrontEndUsers.module.php:1023:						       $this->GetPreference('max_passwordlength')));
FrontEndUsers.module.php:1027:	$this->smarty->assign ('info_password',
FrontEndUsers.module.php:1028:			       $this->Lang ('info_admin_password'));
FrontEndUsers.module.php:1030:	$this->smarty->assign ('info_repeatpassword',
FrontEndUsers.module.php:1031:			       $this->Lang ('info_admin_repeatpassword'));
FrontEndUsers.module.php:1034:    $this->smarty->assign ('prompt_expires',
FrontEndUsers.module.php:1035:			   $this->Lang('expires'));
FrontEndUsers.module.php:1036:    $this->smarty->assign ('expires_dateprefix', $id.'expiresdate_');
FrontEndUsers.module.php:1037:    $tmp = $this->GetPreference('expireage_months',520);
FrontEndUsers.module.php:1043:    $this->smarty->assign ('expiresdate', $expiresdate );
FrontEndUsers.module.php:1049:    if( $this->_HasSufficientPermissions('editgroups') )
FrontEndUsers.module.php:1058:	$this->smarty->assign( 'idtext', $this->Lang('id') );
FrontEndUsers.module.php:1059:	$this->smarty->assign( 'nametext', $this->Lang('name') );
FrontEndUsers.module.php:1060:	$this->smarty->assign( 'desctext', $this->Lang('description') );
FrontEndUsers.module.php:1062:	$groups = $this->GetGroupListFull();
FrontEndUsers.module.php:1068:	  $onerow->id = $group['id'];
FrontEndUsers.module.php:1069:	  $onerow->name = $group['groupname'];
FrontEndUsers.module.php:1070:	  $onerow->desc = $group['groupdesc'];
FrontEndUsers.module.php:1071:	  $onerow->member = $this->CreateInputCheckbox($id,'memberof_'.$group['id'],
FrontEndUsers.module.php:1074:						   $params['memberof_'.$group['id']] : -1));
FrontEndUsers.module.php:1075:	  $onerow->rowclass = $rowclass;
FrontEndUsers.module.php:1080:	$this->smarty->assign('itemcount',count($rowarray));
FrontEndUsers.module.php:1081:	$this->smarty->assign('items',$rowarray);
FrontEndUsers.module.php:1084:    $this->smarty->assign('propadd', $this->CreateInputSubmit( $id, 'propadd',
FrontEndUsers.module.php:1085:							       $this->Lang('add')));
FrontEndUsers.module.php:1086:    $this->smarty->assign('groupstitle', $this->Lang('groups'));
FrontEndUsers.module.php:1087:    $this->smarty->assign('propertiestitle', $this->Lang('properties'));
FrontEndUsers.module.php:1089:    $this->smarty->assign('props',
FrontEndUsers.module.php:1090:			  $this->CreateInputSubmit($id, 'props', $this->Lang('properties')."..."));
FrontEndUsers.module.php:1091:    echo $this->ProcessTemplate('adduser1.tpl');
FrontEndUsers.module.php:1095:  function DoAction($action, $id, $params, $returnid = -1) 
FrontEndUsers.module.php:1098:    $smarty =& $gCms->GetSmarty();
FrontEndUsers.module.php:1099:    $smarty->assign('feuactionid',$id);
FrontEndUsers.module.php:1100:    $smarty->assign('feuactionparams',$params);
FrontEndUsers.module.php:1101:    $smarty->assign_by_ref('mod',$this);
FrontEndUsers.module.php:1110:	  $this->_DoUserAction( $id, $params, $returnid );
FrontEndUsers.module.php:1116:      //nuno-dev
FrontEndUsers.module.php:1119:	  $this->_DoUserAction( $id, $params, $returnid );
FrontEndUsers.module.php:1124:      $this->_DoUserAction( $id, $params, $returnid );
FrontEndUsers.module.php:1130:	  if( $this->_HasSufficientPermissions( 'adduser' ) )
FrontEndUsers.module.php:1132:	      $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
FrontEndUsers.module.php:1136:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1137:				      $this->Lang('accessdenied'));
FrontEndUsers.module.php:1145:	  if( $this->_HasSufficientPermissions( 'editusers' ) )
FrontEndUsers.module.php:1147:	      $this->_DisplayAdminAddUserStep2Page( $id, $params, $returnid );
FrontEndUsers.module.php:1151:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1152:				      $this->Lang('accessdenied'));
FrontEndUsers.module.php:1159:	  if( $this->_HasSufficientPermissions( 'templates' ) )
FrontEndUsers.module.php:1161:	      $this->_DoSetChangeSettingsTemplate( $id, $params, $returnid );
FrontEndUsers.module.php:1165:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1166:				      $this->Lang('accessdenied'));
FrontEndUsers.module.php:1173:	  if( $this->_HasSufficientPermissions( 'templates' ) )
FrontEndUsers.module.php:1175:	      $this->_DoSetForgotPWTemplate( $id, $params, $returnid );
FrontEndUsers.module.php:1179:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1180:				      $this->Lang('accessdenied'));
FrontEndUsers.module.php:1187:	  if( $this->_HasSufficientPermissions( 'templates' ) )
FrontEndUsers.module.php:1189:	      $this->_DoSetLoginTemplate( $id, $params, $returnid );
FrontEndUsers.module.php:1193:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1194:				      $this->Lang('accessdenied'));
FrontEndUsers.module.php:1201:	  if( $this->_HasSufficientPermissions( 'templates' ) )
FrontEndUsers.module.php:1203:	      $this->_DoSetLogoutTemplate( $id, $params, $returnid );
FrontEndUsers.module.php:1207:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1208:				      $this->Lang('accessdenied'));
FrontEndUsers.module.php:1217:	  if( $this->_HasSufficientPermissions( 'editusers' ) )
FrontEndUsers.module.php:1219:	      $this->_DisplayAdminEditUserStep1Page( $id, $params, $returnid );
FrontEndUsers.module.php:1223:	      $this->_DisplayErrorPage($id, $params, $returnid,
FrontEndUsers.module.php:1224:				       $this->Lang('accessdenied'));
FrontEndUsers.module.php:1269:	$this->_DisplayErrorPage ($id, $params, $returnid,
FrontEndUsers.module.php:1270:				 $this->Lang ('error_insufficientparams'));
FrontEndUsers.module.php:1275:    $user = $this->GetUserInfo( $params['user_id'] );
FrontEndUsers.module.php:1278:	$this->_DisplayErrorPage ($id, $params, $returnid, $user[1] );
FrontEndUsers.module.php:1284:    $props = $this->GetUserProperties( $params['user_id'] );
FrontEndUsers.module.php:1287:    $groups = $this->GetMemberGroupsArray( $params['user_id'] );
FrontEndUsers.module.php:1291:// 	$this->_DisplayErrorPage ($id, $params, $returnid, $this->Lang('error_membergroups') );
FrontEndUsers.module.php:1326:    $this->_DisplayAdminUserPage( $id, $params, $returnid );
FrontEndUsers.module.php:1342:	$message = $this->Lang('error_invalidusername');
FrontEndUsers.module.php:1343:	if( $this->GetPreference('username_is_email',0) == 1 )
FrontEndUsers.module.php:1345:	    $message = $this->Lang('error_invalidemailaddress');
FrontEndUsers.module.php:1348:		return -1;
FrontEndUsers.module.php:1351:	if( !$this->IsValidUsername( $username ) )
FrontEndUsers.module.php:1353:	    return -1;
FrontEndUsers.module.php:1357:    if ($this->GetPreference('username_is_email','0') == '1'
FrontEndUsers.module.php:1360:      $message = $this->Lang('error_invalidemailaddress');
FrontEndUsers.module.php:1361:      return -1;
FrontEndUsers.module.php:1368:	$message = $this->Lang('error_invalidparams');
FrontEndUsers.module.php:1369:	return -1;
FrontEndUsers.module.php:1375:	$message = $this->Lang('error_passwordmismatch');
FrontEndUsers.module.php:1376:	return -1;
FrontEndUsers.module.php:1380:    if( $needpw && !$this->IsValidPassword( $password ) )
FrontEndUsers.module.php:1382:	$message = $this->Lang('error_invalidpassword');
FrontEndUsers.module.php:1383:	return -1;
FrontEndUsers.module.php:1394:	$message = $this->Lang('error_invalidexpirydate');
FrontEndUsers.module.php:1395:	return -1;
FrontEndUsers.module.php:1403:	$message = $this->Lang('error_invalidexpirydate');
FrontEndUsers.module.php:1404:	return -1;
FrontEndUsers.module.php:1413:   $str = "/modules/".$this->GetName()."/";
FrontEndUsers.module.php:1426:    $this->myRedirect( $id, 'defaultadmin', '', $parms, $ignore_returnto );
FrontEndUsers.module.php:1435:	$this->LoadRedirectMethods();
FrontEndUsers.module.php:1436:	$modobj =& $this->GetModuleInstance($mod);
FrontEndUsers.module.php:1440:    $this->Redirect( $id, $action, $returnid, $params );
FrontEndUsers.module.php:1446:    return $this->CreateFormStart($id,$action,$returnid,$method,$enctype,$inline,$idsuffix, $params);
FrontEndUsers.module.php:1452:    return $this->Lang('help');
FrontEndUsers.module.php:1474:  /*---------------------------------------------------------
FrontEndUsers.module.php:1476:   ---------------------------------------------------------*/
FrontEndUsers.module.php:1483:    $obj =& $this->GetModuleInstance('JQueryTools');
FrontEndUsers.module.php:1486:	return $this->ProcessTemplateFromData($tmpl);
FrontEndUsers.module.php:1494:    $user = $this->GetUserInfo( $userid );
FrontEndUsers.module.php:1503:    $this->SendEvent('OnExpireUser',$parms);
FrontEndUsers.module.php:1504:    $this->_SendNotificationEmail('OnExpireUser',$parms);
FrontEndUsers.module.php:1513:    $img = $it->factory($config['image_manipulation_prog']);
FrontEndUsers.module.php:1514:    $img->load($srcSpec);
FrontEndUsers.module.php:1515:    if ($img->img_x < $img->img_y)
FrontEndUsers.module.php:1517:	$long_axis = $img->img_y;
FrontEndUsers.module.php:1521:	$long_axis = $img->img_x;
FrontEndUsers.module.php:1526:	$img->scaleByLength($size);
FrontEndUsers.module.php:1527:	$img->save($destSpec, 'jpeg');
FrontEndUsers.module.php:1531:	$img->save($destSpec, 'jpeg');
FrontEndUsers.module.php:1533:    $img->free();
FrontEndUsers.module.php:1543:	$image_width = $this->GetPreference('thumbnail_size',75);
FrontEndUsers.module.php:1546:    $allowed_extensions=$this->GetPreference('allowed_image_extensions',
FrontEndUsers.module.php:1548:    $maxfilesize = $this->GetPreference('max_upload_size',10*1024*1024);
FrontEndUsers.module.php:1549:    $destDir = $gCms->config['uploads_path'].DIRECTORY_SEPARATOR;
FrontEndUsers.module.php:1550:    $destDir .= $this->GetPreference('image_destination_path', 'feusers');
FrontEndUsers.module.php:1554:	return array(false,$this->Lang('error_missing_upload'));
FrontEndUsers.module.php:1566:      preg_replace('/[^a-zA-Z0-9\.\$\%\'\`\-\@\{\}\~\!\#\(\)\&\_\^]/', '',
FrontEndUsers.module.php:1577:	return array(false,$this->Lang('error_destinationnotwritable'));
FrontEndUsers.module.php:1582:    $this->imageTransform($file['tmp_name'], $destDir.DIRECTORY_SEPARATOR.$destname, $image_width, $gCms->config);
FrontEndUsers.module.php:1591:    $config =& $gCms->GetConfig();
FrontEndUsers.module.php:1592:    if( $this->GetPreference('usecookiestoremember') &&
FrontEndUsers.module.php:1593:	($this->GetPreference('cookiename') != '') )
FrontEndUsers.module.php:1595:	$cookiename = $this->GetPreference('cookiename');
FrontEndUsers.module.php:1606:	$str = $this->_encrypt($key,$str);
FrontEndUsers.module.php:1620:    $config =& $gCms->GetConfig();
FrontEndUsers.module.php:1621:    if( $this->GetPreference('usecookiestoremember') &&
FrontEndUsers.module.php:1622:	($this->GetPreference('cookiename') != '') )
FrontEndUsers.module.php:1624:	$cookiename = $this->GetPreference('cookiename');
FrontEndUsers.module.php:1631:	$expires = time()-(3600*24); // one day ago
FrontEndUsers.module.php:1641:    $config =& $gCms->GetConfig();
FrontEndUsers.module.php:1642:    if( $this->GetPreference('usecookiestoremember') &&
FrontEndUsers.module.php:1643:	($this->GetPreference('cookiename') != '') )
FrontEndUsers.module.php:1645:	$cookiename = $this->GetPreference('cookiename');
FrontEndUsers.module.php:1656:	$str = $this->_decrypt($key,$str);
FrontEndUsers.module.php:1666:	$res = $this->Login( $arr['u'], $arr['p'], '', true, true );
FrontEndUsers.module.php:1673:    $notifications = explode(',',$this->GetPreference('notifications',''));
FrontEndUsers.module.php:1675:    $dest = trim($this->GetPreference('notification_address'));
FrontEndUsers.module.php:1680:    $smarty =& $gCms->GetSmarty();
FrontEndUsers.module.php:1681:    $smarty->assign('event',$event);
FrontEndUsers.module.php:1682:    $smarty->assign('event_name',$this->Lang($event));
FrontEndUsers.module.php:1683:    $smarty->assign('plaintext_event',$this->Lang('event'));
FrontEndUsers.module.php:1686:	$smarty->assign('param_'.$key,$value);
FrontEndUsers.module.php:1688:    $text = $this->ProcessTemplateFromDatabase('notification_template');
FrontEndUsers.module.php:1690:    $cmsmailer =& $this->GetModuleInstance('CMSMailer');
FrontEndUsers.module.php:1691:    $cmsmailer->reset();
FrontEndUsers.module.php:1692:    $cmsmailer->AddAddress($dest);
FrontEndUsers.module.php:1693:    $cmsmailer->SetSubject($this->GetPreference('notification_subject'));
FrontEndUsers.module.php:1694:    $cmsmailer->SetBody($text);
FrontEndUsers.module.php:1695:    $cmsmailer->IsHTML(false);
FrontEndUsers.module.php:1696:    $cmsmailer->Send();
FrontEndUsers.module.php:1722:    $this->_load();
FrontEndUsers.module.php:1723:    return $this->usermanip->AddGroup( $name, $description );
FrontEndUsers.module.php:1729:    $this->_load();
FrontEndUsers.module.php:1730:    return $this->usermanip->AddGroupPropertyRelation( $grpid, $propname, $sortkey, $lostun, $val );
FrontEndUsers.module.php:1736:    $this->_load();
FrontEndUsers.module.php:1737:    return $this->usermanip->AddPropertyDefn( $name, $prompt, $type, $length, $maxlength, $attribs );
FrontEndUsers.module.php:1743:    $this->_load();
FrontEndUsers.module.php:1744:    return $this->usermanip->AddSelectOptions( $name, $seloptions );
FrontEndUsers.module.php:1750:    $this->_load();
FrontEndUsers.module.php:1751:    return $this->usermanip->AddUser( $name, $password, $expires, $do_md5 );
FrontEndUsers.module.php:1757:    $this->_load();
FrontEndUsers.module.php:1758:    return $this->usermanip->AssignUserToGroup( $uid, $gid );
FrontEndUsers.module.php:1764:    $this->_load();
FrontEndUsers.module.php:1765:    return $this->usermanip->CheckPassword($username,$password,$groups,$md5pw);
FrontEndUsers.module.php:1771:    $this->_load();
FrontEndUsers.module.php:1772:    return $this->usermanip->CountTempCodeRecords();
FrontEndUsers.module.php:1778:    $this->_load();
FrontEndUsers.module.php:1779:    return $this->usermanip->CountUsersInGroup( $gid );
FrontEndUsers.module.php:1786:    $this->_load();
FrontEndUsers.module.php:1787:    return $this->usermanip->DeleteAllGroupPropertyRelations( $grpid );
FrontEndUsers.module.php:1793:    $this->_load();
FrontEndUsers.module.php:1794:    return $this->usermanip->DeleteAllGroupPropertyRelations( $grpid, $propname );
FrontEndUsers.module.php:1799:    $this->_load();
FrontEndUsers.module.php:1800:    return $this->usermanip->DeletePropertyDefn( $name );
FrontEndUsers.module.php:1806:    $this->_load();
FrontEndUsers.module.php:1807:    return $this->usermanip->DeletePropertyDefns();
FrontEndUsers.module.php:1813:    $this->_load();
FrontEndUsers.module.php:1814:    return $this->usermanip->DeleteSelectOptions( $name );
FrontEndUsers.module.php:1820:    $this->_load();
FrontEndUsers.module.php:1821:    return $this->usermanip->DeleteUserFull( $uid );
FrontEndUsers.module.php:1827:    $this->_load();
FrontEndUsers.module.php:1828:    return $this->usermanip->DeleteUserPropertyByName($title);
FrontEndUsers.module.php:1834:    $this->_load();
FrontEndUsers.module.php:1835:    return $this->usermanip->DeleteUserProperty($title,$all);
FrontEndUsers.module.php:1841:    $this->_load();
FrontEndUsers.module.php:1842:    return $this->usermanip->DeleteAllUserProperties();
FrontEndUsers.module.php:1848:    $this->_load();
FrontEndUsers.module.php:1849:    return $this->usermanip->DeleteAllUserPropertiesFull($userid);
FrontEndUsers.module.php:1856:    $this->_load();
FrontEndUsers.module.php:1857:    return $this->usermanip->DeleteUserPropertyFull($title,$userid,$all);
FrontEndUsers.module.php:1863:    $this->_load();
FrontEndUsers.module.php:1864:    return $this->usermanip->DeleteGroupFull( $gid );
FrontEndUsers.module.php:1870:    $this->_load();
FrontEndUsers.module.php:1871:    return $this->usermanip->DeleteUser( $id );
FrontEndUsers.module.php:1876:    $this->_load();
FrontEndUsers.module.php:1877:    return $this->usermanip->ExpireUsers();
FrontEndUsers.module.php:1882:    $this->_load();
FrontEndUsers.module.php:1883:    return $this->usermanip->ExpireTempCodes( $expirycode );
FrontEndUsers.module.php:1889:    $this->_load();
FrontEndUsers.module.php:1890:    return $this->usermanip->GenerateRandomUsername( $prefix );
FrontEndUsers.module.php:1895:    $this->_load();
FrontEndUsers.module.php:1896:    return $this->usermanip->GetUserProperties($uid);
FrontEndUsers.module.php:1902:    $this->_load();
FrontEndUsers.module.php:1903:    return $this->usermanip->GetMemberGroupsArray($userid);
FrontEndUsers.module.php:1908:    $this->_load();
FrontEndUsers.module.php:1909:    return $this->usermanip->GetUserProperty( $title, $defaultvalue );
FrontEndUsers.module.php:1914:    $this->_load();
FrontEndUsers.module.php:1915:    return $this->usermanip->GetUserPropertyFull($title,$userid,$defaultvalue);
FrontEndUsers.module.php:1920:    $this->_load();
FrontEndUsers.module.php:1921:    return $this->usermanip->GetUserTempCode( $uid );
FrontEndUsers.module.php:1927:    $this->_load();
FrontEndUsers.module.php:1928:    return $this->usermanip->GetPropertyGroupRelations( $title );
FrontEndUsers.module.php:1934:    $this->_load();
FrontEndUsers.module.php:1935:    return $this->usermanip->GetGroupPropertyRelations( $grpid );
FrontEndUsers.module.php:1941:    $this->_load();
FrontEndUsers.module.php:1942:    return $this->usermanip->GetGroupInfo( $gid );
FrontEndUsers.module.php:1946:  function GetUserHistory( $uid, $action = '', $count = -1 )
FrontEndUsers.module.php:1948:    $this->_load();
FrontEndUsers.module.php:1949:    return $this->usermanip->GetUserHistory($uid,$action,$count);
FrontEndUsers.module.php:1955:    $this->_load();
FrontEndUsers.module.php:1956:    return $this->usermanip->GetUserInfo( $uid );
FrontEndUsers.module.php:1962:    $this->_load();
FrontEndUsers.module.php:1963:    return $this->usermanip->GetFullUsersInGroup($gid);
FrontEndUsers.module.php:1970:    $this->_load();
FrontEndUsers.module.php:1971:    return $this->usermanip->GetUsersInGroup( $gid, $regex, $limit, $sort,
FrontEndUsers.module.php:1978:    $this->_load();
FrontEndUsers.module.php:1979:    return $this->usermanip->GroupExistsByID( $gid );
FrontEndUsers.module.php:1984:    $this->_load();
FrontEndUsers.module.php:1985:    return $this->usermanip->GroupExistsByName( $name );
FrontEndUsers.module.php:1990:    $this->_load();
FrontEndUsers.module.php:1991:    return $this->usermanip->LoggedInEmail();
FrontEndUsers.module.php:1996:    $this->_load();
FrontEndUsers.module.php:1997:    return $this->usermanip->GetEmail($uid);
FrontEndUsers.module.php:2002:    $this->_load();
FrontEndUsers.module.php:2003:    return $this->usermanip->GetPropertyDefns();
FrontEndUsers.module.php:2008:    $this->_load();
FrontEndUsers.module.php:2009:    return $this->usermanip->GetPropertyDefn( $name );
FrontEndUsers.module.php:2014:    $this->_load();
FrontEndUsers.module.php:2015:    return $this->usermanip->GetSelectOptions( $name, $dim );
FrontEndUsers.module.php:2021:    $this->_load();
FrontEndUsers.module.php:2022:    return $this->usermanip->GetUserName($userid);
FrontEndUsers.module.php:2028:    $this->_load();
FrontEndUsers.module.php:2029:    return $this->usermanip->GetUserID($username);
FrontEndUsers.module.php:2035:    $this->_load();
FrontEndUsers.module.php:2036:    return $this->usermanip->GetGroupName( $groupid );
FrontEndUsers.module.php:2041:    $this->_load();
FrontEndUsers.module.php:2042:    return $this->usermanip->GetGroupDesc( $groupid );
FrontEndUsers.module.php:2048:    $this->_load();
FrontEndUsers.module.php:2049:    return $this->usermanip->GetGroupList();
FrontEndUsers.module.php:2055:    $this->_load();
FrontEndUsers.module.php:2056:    return $this->usermanip->GetGroupListFull();
FrontEndUsers.module.php:2061:    $this->_load();
FrontEndUsers.module.php:2062:    return $this->usermanip->GetGroupID( $groupname );
FrontEndUsers.module.php:2068:    $this->_load();
FrontEndUsers.module.php:2069:    return $this->usermanip->GetMemberGroups($userid);
FrontEndUsers.module.php:2075:    $this->_load();
FrontEndUsers.module.php:2076:    return $this->usermanip->IsAccountExpired( $uid );
FrontEndUsers.module.php:2082:    $this->_load();
FrontEndUsers.module.php:2083:    return $this->usermanip->IsValidPassword( $password );
FrontEndUsers.module.php:2087:  function IsValidEmailAddress( $email, $uid = -1 )
FrontEndUsers.module.php:2089:    $this->_load();
FrontEndUsers.module.php:2090:    return $this->usermanip->IsValidEmailAddress( $email, $uid );
FrontEndUsers.module.php:2096:    $this->_load();
FrontEndUsers.module.php:2097:    return $this->usermanip->IsValidUsername( $username );
FrontEndUsers.module.php:2104:    $this->_load();
FrontEndUsers.module.php:2105:    return $this->usermanip->Login( $username, $password, $groups,
FrontEndUsers.module.php:2112:    $this->_load();
FrontEndUsers.module.php:2113:    $str = $this->usermanip->LoggedInName();
FrontEndUsers.module.php:2120:    $this->_load();
FrontEndUsers.module.php:2121:    return $this->usermanip->Logout($uid);
FrontEndUsers.module.php:2127:    $this->_load();
FrontEndUsers.module.php:2128:    return $this->usermanip->LogoutUser($uid,$eventmsg);
FrontEndUsers.module.php:2134:    $this->_load();
FrontEndUsers.module.php:2135:    return $this->usermanip->LoggedInId();
FrontEndUsers.module.php:2141:    $this->_load();
FrontEndUsers.module.php:2142:    return $this->usermanip->LoggedIn();
FrontEndUsers.module.php:2148:    $this->_load();
FrontEndUsers.module.php:2149:    return $this->usermanip->MemberOfGroup($userid,$groupid);
FrontEndUsers.module.php:2155:    $this->_load();
FrontEndUsers.module.php:2156:    return $this->usermanip->RemoveUserTempCode( $uid );
FrontEndUsers.module.php:2162:    $this->_load();
FrontEndUsers.module.php:2163:    return $this->usermanip->RemoveUserFromGroup( $uid, $gid );
FrontEndUsers.module.php:2169:    $this->_load();
FrontEndUsers.module.php:2170:    return $this->usermanip->SetUserTempCode( $uid, $code, $this->GetPreference('allow_duplicate_reminders') );
FrontEndUsers.module.php:2176:    $this->_load();
FrontEndUsers.module.php:2177:    return $this->usermanip->SetPropertyDefn( $name, $newname, $prompt, $type, $length, $maxlength, $attribs );
FrontEndUsers.module.php:2183:    $this->_load();
FrontEndUsers.module.php:2184:    return $this->usermanip->SetGroup( $gid, $name, $desc );
FrontEndUsers.module.php:2190:    $this->_load();
FrontEndUsers.module.php:2191:    return $this->usermanip->SetUserPassword( $uid, $password );
FrontEndUsers.module.php:2197:    $this->_load();
FrontEndUsers.module.php:2198:    return $this->usermanip->SetUser( $uid, $username, $password, $expires );
FrontEndUsers.module.php:2203:    $this->_load();
FrontEndUsers.module.php:2204:    return $this->usermanip->SetUserGroups( $uid, $grpids );
FrontEndUsers.module.php:2210:    $this->_load();
FrontEndUsers.module.php:2211:    return $this->usermanip->SetUserProperties( $uid, $props );
FrontEndUsers.module.php:2216:    $this->_load();
FrontEndUsers.module.php:2217:    return $this->usermanip->SetUserProperty($title,$data);
FrontEndUsers.module.php:2222:    $this->_load();
FrontEndUsers.module.php:2223:    return $this->usermanip->SetUserPropertyFull($title,$data,$userid);
FrontEndUsers.module.php:2228:    $this->_load();
FrontEndUsers.module.php:2229:    return $this->usermanip->UserExistsByID( $uid );
FrontEndUsers.module.php:2246:    if( $tmp != -1 )
FrontEndUsers.module.php:2269:    if( $tmp != -1 )
FrontEndUsers.module.php:2294:    $attr->set_helper(feu_content_attribute_helper::get_instance());
FrontEndUsers.module.php:2308:	    $tmp1[$this->Lang('selectone')] = -1;
FrontEndUsers.module.php:2310:	$tmp = $this->GetGroupList();
FrontEndUsers.module.php:2312:	return $this->CreateInputDropdown('',$blockName,$groups,-1,$value);
FrontEndUsers.module.php:2335:	if( $value == -1 )
FrontEndUsers.module.php:2337:	    return $this->Lang('error_mustselect_group');
function.admin_admintab.php:3:#-------------------------------------------------------------------------
function.admin_admintab.php:10:#-------------------------------------------------------------------------
function.admin_admintab.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_admintab.php:14:#-------------------------------------------------------------------------
function.admin_admintab.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_admintab.php:36:#-------------------------------------------------------------------------
function.admin_admintab.php:42:$smarty->assign('startform', 
function.admin_admintab.php:43:		      $this->CreateFormStart( $id, 'do_admintasks', $returnid,
function.admin_admintab.php:44:					      'post', 'multipart/form-data'));
function.admin_admintab.php:45:$smarty->assign('input_hidden',
function.admin_admintab.php:46:		      $this->CreateInputHidden($id,'active_tab','admin'));
function.admin_admintab.php:47:$smarty->assign('endform',$this->CreateFormEnd());
function.admin_admintab.php:50:$smarty->assign('legend_exportusers',$this->Lang('prompt_exportusers'));
function.admin_admintab.php:51:$smarty->assign('prompt_exportusers',$this->Lang('prompt_exportcsv'));
function.admin_admintab.php:52:$smarty->assign('input_exportusers',
function.admin_admintab.php:53:		      $this->CreateInputSubmit($id,'button_exportusers',
function.admin_admintab.php:54:					       $this->Lang('exportcsv')));
function.admin_admintab.php:57:$smarty->assign('legend_importusers',$this->Lang('prompt_importusers'));
function.admin_admintab.php:58:$smarty->assign('prompt_importuserstogroup',$this->Lang('prompt_importdestgroup'));
function.admin_admintab.php:59:$smarty->assign('input_importuserstogroup',
function.admin_admintab.php:60:		$this->CreateInputDropdown($id,'input_importdestgroup',
function.admin_admintab.php:61:					   $this->GetGroupList()));
function.admin_admintab.php:62:$smarty->assign('prompt_importusersfile',$this->Lang('prompt_importfilename'));
function.admin_admintab.php:63:$smarty->assign('input_importusersfile',
function.admin_admintab.php:64:		$this->CreateFileUploadInput($id,'input_importusersfile','',40));
function.admin_admintab.php:65:$smarty->assign('input_importusersbtn',
function.admin_admintab.php:66:		      $this->CreateInputSubmit($id,'button_importusers',
function.admin_admintab.php:67:					       $this->Lang('importcsv')));
function.admin_admintab.php:68:$smarty->assign('info_importusersfileformat',
function.admin_admintab.php:69:		$this->Lang('info_importusersfileformat'));
function.admin_admintab.php:72:$smarty->assign('legend_userhistorymaintenance',
function.admin_admintab.php:73:		$this->Lang('title_userhistorymaintenance'));
function.admin_admintab.php:74:$smarty->assign('prompt_exportuserhistory',
function.admin_admintab.php:75:		$this->Lang('prompt_exportuserhistory'));
function.admin_admintab.php:77:$exportlist[$this->Lang('date_allrecords')] = -1;
function.admin_admintab.php:78:$exportlist[$this->Lang('date_onehourold')] = '1h';
function.admin_admintab.php:79:$exportlist[$this->Lang('date_sixhourold')] = '6h';
function.admin_admintab.php:80:$exportlist[$this->Lang('date_twelvehourold')] = '12h';
function.admin_admintab.php:81:$exportlist[$this->Lang('date_onedayold')] = '1h';
function.admin_admintab.php:82:$exportlist[$this->Lang('date_oneweekold')] = '1w';
function.admin_admintab.php:83:$exportlist[$this->Lang('date_twoweeksold')] = '2w';
function.admin_admintab.php:84:$exportlist[$this->Lang('date_onemonthold')] = '1m';
function.admin_admintab.php:85:$exportlist[$this->Lang('date_threemonthsold')] = '3m';
function.admin_admintab.php:86:$exportlist[$this->Lang('date_sixmonthsold')] = '6m';
function.admin_admintab.php:87:$exportlist[$this->Lang('date_oneyearold')] = '1y';
function.admin_admintab.php:88:$smarty->assign('input_exportuserhistory',
function.admin_admintab.php:89:		$this->CreateInputDropdown($id,'input_exportuserhistory',
function.admin_admintab.php:91:$smarty->assign('button_exportuserhistory',
function.admin_admintab.php:92:		$this->CreateInputSubmit($id,'button_exportuserhistory',$this->Lang('export')));
function.admin_admintab.php:94:$smarty->assign('prompt_clearuserhistory',
function.admin_admintab.php:95:		$this->Lang('prompt_clearuserhistory'));
function.admin_admintab.php:96:$smarty->assign('input_clearuserhistory',
function.admin_admintab.php:97:		$this->CreateInputDropdown($id,'input_clearuserhistory',
function.admin_admintab.php:99:$smarty->assign('button_clearuserhistory',
function.admin_admintab.php:100:		$this->CreateInputSubmit($id,'button_clearuserhistory',$this->Lang('clear')));
function.admin_admintab.php:103:echo $this->ProcessTemplate('admintasks.tpl');
function.admin_clearuserhistory.php:3:#-------------------------------------------------------------------------
function.admin_clearuserhistory.php:10:#-------------------------------------------------------------------------
function.admin_clearuserhistory.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_clearuserhistory.php:14:#-------------------------------------------------------------------------
function.admin_clearuserhistory.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_clearuserhistory.php:36:#-------------------------------------------------------------------------
function.admin_clearuserhistory.php:40:$date = '-1';
function.admin_clearuserhistory.php:75:$db =& $this->GetDb();
function.admin_clearuserhistory.php:78:if( $date != -1 )
function.admin_clearuserhistory.php:81:    $parms[] = trim($db->DBTimeStamp($date),"'");
function.admin_clearuserhistory.php:84:$db->Execute( $query, $parms );
function.admin_clearuserhistory.php:85:$this->myRedirectToTab($id,'admin');
function.admin_exportuserhistory.php:3:#-------------------------------------------------------------------------
function.admin_exportuserhistory.php:10:#-------------------------------------------------------------------------
function.admin_exportuserhistory.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_exportuserhistory.php:14:#-------------------------------------------------------------------------
function.admin_exportuserhistory.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_exportuserhistory.php:36:#-------------------------------------------------------------------------
function.admin_exportuserhistory.php:40:$date = '-1';
function.admin_exportuserhistory.php:78:header('Content-Description: File Transfer');
function.admin_exportuserhistory.php:79:header('Content-Type: application/force-download');
function.admin_exportuserhistory.php:80:header('Content-Disposition: attachment; filename=userhistory.csv');
function.admin_exportuserhistory.php:83:$db =& $this->GetDb();
function.admin_exportuserhistory.php:89:if( $date != -1 )
function.admin_exportuserhistory.php:92:    $parms[] = trim($db->DBTimeStamp($date),"'");
function.admin_exportuserhistory.php:98:    $dbresult = $db->Execute( $query, $parms );
function.admin_exportuserhistory.php:99:    if( !$dbresult || ($dbresult->RecordCount() == 0) )
function.admin_exportuserhistory.php:106:    while( $dbresult && !$dbresult->EOF )
function.admin_exportuserhistory.php:108:	$fields = $dbresult->fields;
function.admin_exportuserhistory.php:115:		$res = $this->GetUserInfo($uid);
function.admin_exportuserhistory.php:129:	$dbresult->MoveNext();
function.admin_groupstab.php:3:#-------------------------------------------------------------------------
function.admin_groupstab.php:10:#-------------------------------------------------------------------------
function.admin_groupstab.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_groupstab.php:14:#-------------------------------------------------------------------------
function.admin_groupstab.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_groupstab.php:36:#-------------------------------------------------------------------------
function.admin_groupstab.php:40:  $db =& $this->GetDb();
function.admin_groupstab.php:41:  $groups = $this->GetGroupListFull();
function.admin_groupstab.php:45:  $this->smarty->assign( 'groupsfound', $this->Lang('groupsfound'));
function.admin_groupstab.php:48:      if( $this->_HasSufficientPermissions('listgroups') )
function.admin_groupstab.php:51:	  $onerow->id = $onegroup['id'];
function.admin_groupstab.php:52:	  $onerow->name =
function.admin_groupstab.php:53:	    $this->CreateLink( $id, 'addgroup', $returnid, $onegroup['groupname'],
function.admin_groupstab.php:55:	  $onerow->desc = $onegroup['groupdesc'];
function.admin_groupstab.php:56:	  $onerow->rowclass = $rowclass;
function.admin_groupstab.php:58:	  if( $this->_HasSufficientPermissions('editgroups') )
function.admin_groupstab.php:60:	      $onerow->editlink =
function.admin_groupstab.php:61:		$this->CreateLink ($id, 'addgroup', $returnid,
function.admin_groupstab.php:62:				     $gCms->variables['admintheme']->DisplayImage ('icons/system/edit.gif',
function.admin_groupstab.php:63:										   $this->Lang ('edit'), '', '', 'systemicon'),
function.admin_groupstab.php:65:	      $onerow->exportlink =
function.admin_groupstab.php:66:		$this->CreateLink ($id, 'admin_exportgroup', $returnid,
function.admin_groupstab.php:71:				   '', false, false, 'class="systemicon" title="'.$this->Lang('title_rssexport').'"');
function.admin_groupstab.php:73:	  if( $this->_HasSufficientPermissions('removegroups') &&
function.admin_groupstab.php:74:	      count($this->GetUsersInGroup( $onegroup['id'] )) == 0 )
function.admin_groupstab.php:76:	      $onerow->deletelink =
function.admin_groupstab.php:77:		$this->CreateLink ($id, 'do_deletegroup', $returnid,
function.admin_groupstab.php:78:				     $gCms->variables['admintheme']->DisplayImage ('icons/system/delete.gif',
function.admin_groupstab.php:79:										   $this->Lang ('delete'), '', '', 'systemicon'),
function.admin_groupstab.php:81:				     $this->Lang ('areyousure_deletegroup'));
function.admin_groupstab.php:88:      $this->smarty->assign('itemcount',count($rowarray));
function.admin_groupstab.php:89:      $this->smarty->assign('items',$rowarray);
function.admin_groupstab.php:90:      $this->smarty->assign('groupsfound', $this->Lang('groupsfound') );
function.admin_groupstab.php:91:      $this->smarty->assign('idtext', $this->Lang('id'));
function.admin_groupstab.php:92:      $this->smarty->assign('nametext', $this->Lang('name'));
function.admin_groupstab.php:93:      $this->smarty->assign('desctext', $this->Lang('description'));
function.admin_groupstab.php:96:  if( $this->_HasSufficientPermissions('listgroups') )
function.admin_groupstab.php:98:      $propdefns = $this->GetPropertyDefns();
function.admin_groupstab.php:99:      $smarty->assign('propcount',count($propdefns));
function.admin_groupstab.php:102:	  $smarty->assign('addlink', 
function.admin_groupstab.php:103:			  $this->CreateLink( $id, 'addgroup', $returnid,
function.admin_groupstab.php:104:					     $gCms->variables['admintheme']->DisplayImage('icons/system/newobject.gif',
function.admin_groupstab.php:105:											  $this->Lang('addgroup'),'','','systemicon')).' '.
function.admin_groupstab.php:106:			  $this->CreateLink( $id, 'addgroup',
function.admin_groupstab.php:108:					     $this->Lang('addgroup')));
function.admin_groupstab.php:111:      $smarty->assign('importlink',
function.admin_groupstab.php:112:		      $this->CreateLink( $id, 'admin_importgroup', $returnid,
function.admin_groupstab.php:113:					 $gCms->variables['admintheme']->DisplayImage('icons/system/import.gif',
function.admin_groupstab.php:114:										      $this->Lang('importgroup'),'','','systemicon')).' '.
function.admin_groupstab.php:115:		      $this->CreateLink( $id, 'admin_importgroup',
function.admin_groupstab.php:116:					 $returnid, $this->Lang('importgroup')));
function.admin_groupstab.php:120:  echo $this->ProcessTemplate( 'grouplist.tpl' );
function.admin_importusers.php:3:#-------------------------------------------------------------------------
function.admin_importusers.php:10:#-------------------------------------------------------------------------
function.admin_importusers.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_importusers.php:14:#-------------------------------------------------------------------------
function.admin_importusers.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_importusers.php:36:#-------------------------------------------------------------------------
function.admin_importusers.php:74:    $this->myRedirectToTab($id,'admin',array('error'=>$this->Lang('error_insufficientparams')));
function.admin_importusers.php:83:    $this->myRedirectToTab($id,'admin',
function.admin_importusers.php:84:			   array('error'=>$this->Lang('error_missing_upload')));
function.admin_importusers.php:89:$grouppropmap = $this->GetGroupPropertyRelations( $params['input_importdestgroup'] );
function.admin_importusers.php:90:$groupinfo = $this->GetGroupInfo( $params['input_importdestgroup'] );	
function.admin_importusers.php:93:		$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:94:			   array('error'=>$this->Lang('error_nogroupproperties')));
function.admin_importusers.php:97:$propdefns = $this->GetPropertyDefns();
function.admin_importusers.php:100:	$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:101:		array('error'=>$this->Lang('error_propertydefns')));
function.admin_importusers.php:107:$imageDir = $gCms->config['uploads_path'].DIRECTORY_SEPARATOR;
function.admin_importusers.php:108:$imageDir .= $this->GetPreference('image_destination_path', 'feusers');
function.admin_importusers.php:116:	$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:117:			   array('error'=>$this->Lang('error_couldnotopenfile')));
function.admin_importusers.php:128:	$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:129:			   array('error'=>$this->Lang('error_importfileformat')));
function.admin_importusers.php:137:	$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:138:			   array('error'=>$this->Lang('error_importfileformat')));
function.admin_importusers.php:149:	  $this->myRedirectToTab($id,'admin',
function.admin_importusers.php:150:				 array('error'=>$this->Lang('error_importfileformat')));
function.admin_importusers.php:204:	$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:205:				 array('error'=>$this->Lang('error_importrequiredfield',
function.admin_importusers.php:210:// Only use if we aren't importing a group field -- This will be done on the user level since we now use a group field
function.admin_importusers.php:226:				 $this->myRedirectToTab($id,'admin',
function.admin_importusers.php:227:							 array('error'=>$this->Lang('error_importrequiredfield',
function.admin_importusers.php:252:		padding-top: 1px;
function.admin_importusers.php:257:	font-weight: normal;
function.admin_importusers.php:259:		padding-top: 5px;
function.admin_importusers.php:260:		padding-right: 5px;
function.admin_importusers.php:262:		margin-bottom: 0.5em;
function.admin_importusers.php:265:		font-weight: bold;
function.admin_importusers.php:267:		padding-top: 5px;
function.admin_importusers.php:268:		margin-bottom: 0.5em;
function.admin_importusers.php:332:			$gid = $this->GetGroupID($name);
function.admin_importusers.php:336:				$grouppropmap = $this->GetGroupPropertyRelations( $gid );
function.admin_importusers.php:339:						$this->myRedirectToTab($id,'admin',
function.admin_importusers.php:340:							   array('error'=>$this->Lang('error_nogroupproperties')));
function.admin_importusers.php:355:						_errorout($this->Lang('error_importrequiredfield',$onegroupprop['name'].' for line '.$lineno));
function.admin_importusers.php:398:			_errorout($this->Lang('error_importusers',$lineno, 'Prop '.$key.' is missing') );
function.admin_importusers.php:407:				$result = $this->IsValidEmailAddress($propvalue, $uid);
function.admin_importusers.php:410:					_errorout($this->Lang('error_importusers',$lineno, $result[1],$key) );
function.admin_importusers.php:419:					_errorout($this->Lang('error_importusers',$lineno,
function.admin_importusers.php:420:								  $this->Lang('error_importfieldlength',$key)));
function.admin_importusers.php:433:				$options = $this->GetSelectOptions($key);
function.admin_importusers.php:449:					_errorout($this->Lang('error_importusers',$lineno,
function.admin_importusers.php:450:						      $this->Lang('error_importfieldvalue',$key)));
function.admin_importusers.php:461:					_errorout($this->Lang('error_importusers',$lineno,
function.admin_importusers.php:462:							      $this->Lang('error_importfilenotfound',$propvalue)));
function.admin_importusers.php:468:				$tmp = explode('-',$propvalue);
function.admin_importusers.php:486:			$result = $this->SetUser($userid, $username, $password, $expires );
function.admin_importusers.php:489:			$result = $this->AddUser( $username, $password, $expires );
function.admin_importusers.php:493:				_errorout($this->Lang('error_importusers',$lineno,$result[1]));
function.admin_importusers.php:498:		$this->SetUserGroups($uid,$ugroups); 
function.admin_importusers.php:499:		$result = $this->SetUserProperties($uid,$uprops);
function.admin_importusers.php:502:				_errorout($this->Lang('error_importusers',$lineno,"Error Setting User Properties"));
function.admin_importusers.php:518:$formtext .= $this->CreateFormStart($id,'defaultadmin',$returnid,'post','',false,'',
function.admin_importusers.php:520:$formtext .= $this->CreateInputSubmit($id,'submit',$this->Lang('prompt_return'));
function.admin_importusers.php:521:$formtext .= $this->CreateFormEnd();				    
function.admin_importusers.php:522:echo '</div><!-- progress -->';
function.admin_importusers.php:523:echo '<p>'.$this->Lang('import_complete_msg').'</p>';
function.admin_importusers.php:524:_resultout($this->Lang('prompt_linesprocessed'),$lineno);
function.admin_importusers.php:525:_resultout($this->Lang('prompt_errors'),$errors);
function.admin_importusers.php:526:_resultout($this->Lang('prompt_recordsadded'),$added);
function.admin_importusers.php:529:echo '</div><!-- pageoverflow -->';
function.admin_lostusername_template.php:3:#-------------------------------------------------------------------------
function.admin_lostusername_template.php:10:#-------------------------------------------------------------------------
function.admin_lostusername_template.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_lostusername_template.php:14:#-------------------------------------------------------------------------
function.admin_lostusername_template.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_lostusername_template.php:36:#-------------------------------------------------------------------------
function.admin_lostusername_template.php:40:if( !$this->_HasSufficientPermissions('templates') ) return;
function.admin_lostusername_template.php:42:$smarty->assign('startform',
function.admin_lostusername_template.php:43:		$this->CreateFormStart( $id, 'admin_setlostun_template'));
function.admin_lostusername_template.php:45:$smarty->assign('prompt_template1',$this->Lang('lostun_details_template'));
function.admin_lostusername_template.php:46:$smarty->assign('input_template1',
function.admin_lostusername_template.php:47:		$this->CreateTextArea( false, $id,
function.admin_lostusername_template.php:48:			  $this->GetTemplate ('feusers_lostunform'),
function.admin_lostusername_template.php:51:$smarty->assign('prompt_template2',$this->Lang('lostun_confirm_template'));
function.admin_lostusername_template.php:52:$smarty->assign('input_template2',
function.admin_lostusername_template.php:53:		$this->CreateTextArea( false, $id,
function.admin_lostusername_template.php:54:			  $this->GetTemplate ('feusers_lostunform_confirm'),
function.admin_lostusername_template.php:57:$smarty->assign('submit',
function.admin_lostusername_template.php:58:		$this->CreateInputSubmit ($id, 'submit',$this->Lang('submit')));
function.admin_lostusername_template.php:59:$smarty->assign('defaults',
function.admin_lostusername_template.php:60:		$this->CreateInputSubmit ($id, 'defaults',
function.admin_lostusername_template.php:61:					  $this->Lang('defaults')));
function.admin_lostusername_template.php:62:$smarty->assign('endform',$this->CreateFormEnd());
function.admin_lostusername_template.php:63:echo $this->ProcessTemplate('lostun_templateform.tpl');
function.admin_prefstab.php:3:#-------------------------------------------------------------------------
function.admin_prefstab.php:10:#-------------------------------------------------------------------------
function.admin_prefstab.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_prefstab.php:14:#-------------------------------------------------------------------------
function.admin_prefstab.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_prefstab.php:36:#-------------------------------------------------------------------------
function.admin_prefstab.php:40:$smarty->assign('startform',
function.admin_prefstab.php:41:		$this->CreateFormStart( $id, 'do_setprefs'));
function.admin_prefstab.php:44:for( $i = 520; $i > 0; $i-- )
function.admin_prefstab.php:50:$smarty->assign('input_randomusername', 
function.admin_prefstab.php:52:					       $this->GetPreference('use_randomusername',0)));
function.admin_prefstab.php:54:$smarty->assign('input_expireage',
function.admin_prefstab.php:55:		$this->CreateInputDropdown($id,'input_expireage',$months,-1,
function.admin_prefstab.php:56:                                          $this->GetPreference('expireage_months',260)));
function.admin_prefstab.php:58:$smarty->assign('prompt_pwfldlen', $this->Lang('prompt_pwfldlen'));
function.admin_prefstab.php:59:$smarty->assign('input_pwfldlen', 
function.admin_prefstab.php:60:		$this->CreateInputText($id, 'input_pwfldlen',
function.admin_prefstab.php:61:				       $this->GetPreference('passwordfldlength',20), 
function.admin_prefstab.php:64:$smarty->assign('prompt_minpwlen', $this->Lang('prompt_minpwlen'));
function.admin_prefstab.php:65:$smarty->assign('input_minpwlen', 
function.admin_prefstab.php:66:		$this->CreateInputText($id, 'input_minpwlen',
function.admin_prefstab.php:67:				       $this->GetPreference('min_passwordlength'), 2, 2 ));
function.admin_prefstab.php:68:$smarty->assign('info_minpwlen',
function.admin_prefstab.php:69:		$this->Lang('warning_effectsfieldlength'));
function.admin_prefstab.php:70:$smarty->assign('prompt_maxpwlen', $this->Lang('prompt_maxpwlen'));
function.admin_prefstab.php:71:$smarty->assign('input_maxpwlen', 
function.admin_prefstab.php:72:		$this->CreateInputText($id, 'input_maxpwlen',
function.admin_prefstab.php:73:				       $this->GetPreference('max_passwordlength'), 2, 2 ));
function.admin_prefstab.php:74:$smarty->assign('info_maxpwlen',
function.admin_prefstab.php:75:		$this->Lang('warning_effectsfieldlength'));
function.admin_prefstab.php:77:$smarty->assign('prompt_unfldlen', $this->Lang('prompt_unfldlen'));
function.admin_prefstab.php:78:$smarty->assign('input_unfldlen', 
function.admin_prefstab.php:79:		$this->CreateInputText($id, 'input_unfldlen',
function.admin_prefstab.php:80:				       $this->GetPreference('usernamefldlength',20), 
function.admin_prefstab.php:83:$smarty->assign('prompt_minunlen', $this->Lang('prompt_minunlen'));
function.admin_prefstab.php:84:$smarty->assign('input_minunlen', 
function.admin_prefstab.php:85:		$this->CreateInputText($id, 'input_minunlen',
function.admin_prefstab.php:86:				       $this->GetPreference('min_usernamelength'), 2, 2 ));
function.admin_prefstab.php:87:$smarty->assign('info_minunlen',
function.admin_prefstab.php:88:		$this->Lang('warning_effectsfieldlength'));
function.admin_prefstab.php:89:$smarty->assign('prompt_maxunlen', $this->Lang('prompt_maxunlen'));
function.admin_prefstab.php:90:$smarty->assign('input_maxunlen', 
function.admin_prefstab.php:91:		$this->CreateInputText($id, 'input_maxunlen',
function.admin_prefstab.php:92:				       $this->GetPreference('max_usernamelength'), 2, 2 ));
function.admin_prefstab.php:93:$smarty->assign('info_maxunlen',
function.admin_prefstab.php:94:		$this->Lang('warning_effectsfieldlength'));
function.admin_prefstab.php:96:$smarty->assign('prompt_signin_button', $this->Lang('prompt_signin_button'));
function.admin_prefstab.php:97:$smarty->assign('input_signin_button',
function.admin_prefstab.php:98:		$this->CreateInputText($id, 'input_signin_button',
function.admin_prefstab.php:99:				       $this->GetPreference('signin_button',$this->Lang('login')), 15, 15 ));
function.admin_prefstab.php:101:$smarty->assign('prompt_sessiontimeout', $this->Lang('prompt_sessiontimeout'));
function.admin_prefstab.php:102:$smarty->assign('input_sessiontimeout', 
function.admin_prefstab.php:103:		$this->CreateInputText($id, 'input_sessiontimeout',
function.admin_prefstab.php:104:				       $this->GetPreference('user_session_expires'), 4, 4 ));
function.admin_prefstab.php:106:$smarty->assign('prompt_cookiekeepalive',$this->Lang('prompt_cookiekeepalive'));
function.admin_prefstab.php:107:$smarty->assign('input_cookiekeepalive',
function.admin_prefstab.php:109:					       $this->GetPreference('cookie_keepalive',0)));
function.admin_prefstab.php:110:$smarty->assign('info_cookie_keepalive',
function.admin_prefstab.php:111:		$this->Lang('info_cookie_keepalive'));
function.admin_prefstab.php:113:$smarty->assign('prompt_thumbnail_size',$this->Lang('prompt_thumbnail_size'));
function.admin_prefstab.php:114:$smarty->assign('input_thumbnail_size',
function.admin_prefstab.php:115:		$this->CreateInputText($id,'input_thumbnail_size',
function.admin_prefstab.php:116:				       $this->GetPreference('thumbnail_size',75), 3, 3));
function.admin_prefstab.php:118:$smarty->assign('prompt_usecookiestoremember',
function.admin_prefstab.php:119:		$this->Lang('prompt_usecookiestoremember'));
function.admin_prefstab.php:120:$smarty->assign('input_usecookiestoremember',
function.admin_prefstab.php:123:					       $this->GetPreference('usecookiestoremember')));
function.admin_prefstab.php:126:    $smarty->assign('info_cookiestoremember',
function.admin_prefstab.php:127:		$this->Lang('info_cookiestoremember'));
function.admin_prefstab.php:130:$smarty->assign('prompt_cookiename',$this->Lang('prompt_cookiename'));
function.admin_prefstab.php:131:$smarty->assign('input_cookiename',
function.admin_prefstab.php:132:		$this->CreateInputText($id,'input_cookiename',
function.admin_prefstab.php:133:				       $this->GetPreference('cookiename',''),20));
function.admin_prefstab.php:135:$smarty->assign('prompt_requireonegroup', $this->Lang('prompt_requireonegroup'));
function.admin_prefstab.php:136:$smarty->assign('input_requireonegroup', 
function.admin_prefstab.php:138:					       $this->GetPreference('require_onegroup')));
function.admin_prefstab.php:140:$smarty->assign('prompt_username_is_email',
function.admin_prefstab.php:141:		$this->Lang('prompt_username_is_email'));
function.admin_prefstab.php:142:$smarty->assign('input_username_is_email',
function.admin_prefstab.php:144:					       $this->GetPreference('username_is_email')));
function.admin_prefstab.php:145:$smarty->assign('info_username_is_email', $this->Lang('info_username_is_email'));
function.admin_prefstab.php:148:$smarty->assign('prompt_allow_duplicate_emails',
function.admin_prefstab.php:149:		$this->Lang('prompt_allow_duplicate_emails'));
function.admin_prefstab.php:150:$smarty->assign('input_allow_duplicate_emails', 
function.admin_prefstab.php:152:					       $this->GetPreference('allow_duplicate_emails')));
function.admin_prefstab.php:153:$smarty->assign('info_allow_duplicate_emails', $this->Lang('info_allow_duplicate_emails'));
function.admin_prefstab.php:155:$smarty->assign('prompt_allow_duplicate_reminders',
function.admin_prefstab.php:156:		$this->Lang('prompt_allow_duplicate_reminders'));
function.admin_prefstab.php:157:$smarty->assign('input_allow_duplicate_reminders',
function.admin_prefstab.php:159:					       $this->GetPreference('allow_duplicate_reminders')));
function.admin_prefstab.php:160:$smarty->assign('info_allow_duplicate_reminders', $this->Lang('info_allow_duplicate_reminders'));
function.admin_prefstab.php:162:$smarty->assign('prompt_feusers_specific_permissions',
function.admin_prefstab.php:163:		$this->Lang('prompt_feusers_specific_permissions'));
function.admin_prefstab.php:164:$smarty->assign('input_feusers_specific_permissions',
function.admin_prefstab.php:166:					       $this->GetPreference('feusers_specific_permissions')));
function.admin_prefstab.php:167:$smarty->assign('info_feusers_specific_permissions', $this->Lang('info_feusers_specific_permissions'));
function.admin_prefstab.php:171:$smarty->assign('prompt_dfltgroup', $this->Lang('prompt_dfltgroup'));
function.admin_prefstab.php:172:$groups1 = $this->GetGroupList();
function.admin_prefstab.php:173:$groups = array_merge( array("None" => -1), $groups1 );
function.admin_prefstab.php:174:$smarty->assign('input_dfltgroup',
function.admin_prefstab.php:175:		$this->CreateInputDropDown( $id, 'input_dfltgroup', $groups, -1,
function.admin_prefstab.php:176:					    $this->GetPreference('default_group')));
function.admin_prefstab.php:178:$smarty->assign('submit',
function.admin_prefstab.php:179:		$this->CreateInputSubmit ($id, 'submit',
function.admin_prefstab.php:180:					  $this->Lang('submit'),'','',
function.admin_prefstab.php:181:					  $this->Lang('confirm_submitprefs')));
function.admin_prefstab.php:182:$smarty->assign ('cancel',
function.admin_prefstab.php:183:		 $this->CreateInputSubmit ($id, 'cancel',
function.admin_prefstab.php:184:					   $this->Lang('cancel')));
function.admin_prefstab.php:186:$smarty->assign('prompt_requiredmarker',
function.admin_prefstab.php:187:		$this->Lang('requiredfieldmarker'));
function.admin_prefstab.php:188:$smarty->assign('input_requiredmarker',
function.admin_prefstab.php:189:		$this->CreateInputText($id,'input_requiredfieldmarker',
function.admin_prefstab.php:190:				       $this->GetPreference('required_field_marker','*'),2,2));
function.admin_prefstab.php:192:$smarty->assign('prompt_requiredcolor',
function.admin_prefstab.php:193:		$this->Lang('requiredfieldcolor'));
function.admin_prefstab.php:194:$smarty->assign('input_requiredcolor',
function.admin_prefstab.php:195:		$this->CreateInputText($id,'input_requiredfieldcolor',
function.admin_prefstab.php:196:				       $this->GetPreference('required_field_color','blue'),10,10));
function.admin_prefstab.php:198:$smarty->assign('prompt_hiddenmarker',
function.admin_prefstab.php:199:		$this->Lang('hiddenfieldmarker'));
function.admin_prefstab.php:200:$smarty->assign('input_hiddenmarker',
function.admin_prefstab.php:201:		$this->CreateInputText($id,'input_hiddenfieldmarker',
function.admin_prefstab.php:202:				       $this->GetPreference('hidden_field_marker','!!'),2,2));
function.admin_prefstab.php:204:$smarty->assign('prompt_hiddencolor',
function.admin_prefstab.php:205:		$this->Lang('hiddenfieldcolor'));
function.admin_prefstab.php:206:$smarty->assign('input_hiddencolor',
function.admin_prefstab.php:207:		$this->CreateInputText($id,'input_hiddenfieldcolor',
function.admin_prefstab.php:208:				       $this->GetPreference('hidden_field_color','green'),10,10));
function.admin_prefstab.php:210:$smarty->assign('prompt_forgotpw_page',
function.admin_prefstab.php:211:		$this->Lang('prompt_forgotpw_page'));
function.admin_prefstab.php:212:$smarty->assign('input_forgotpw_page',
function.admin_prefstab.php:213:		$this->CreateInputText($id,'input_forgotpw_page',
function.admin_prefstab.php:214:				       $this->GetPreference('pageidforgotpasswd'), 25, 50));
function.admin_prefstab.php:215:$smarty->assign('prompt_changesettings_page',
function.admin_prefstab.php:216:		$this->Lang('prompt_changesettings_page'));
function.admin_prefstab.php:217:$smarty->assign('input_changesettings_page',
function.admin_prefstab.php:218:		$this->CreateInputText($id,'input_changesettings_page',
function.admin_prefstab.php:219:				       $this->GetPreference('pageid_changesettings'), 25, 50));
function.admin_prefstab.php:220:$smarty->assign('prompt_login_page',
function.admin_prefstab.php:221:		$this->Lang('prompt_login_page'));
function.admin_prefstab.php:222:$smarty->assign('input_login_page',
function.admin_prefstab.php:223:		$this->CreateInputText($id,'input_login_page',
function.admin_prefstab.php:224:				       $this->GetPreference('pageid_login'), 25, 50));
function.admin_prefstab.php:225:$smarty->assign('prompt_logout_page',
function.admin_prefstab.php:226:		$this->Lang('prompt_logout_page'));
function.admin_prefstab.php:227:$smarty->assign('input_logout_page',
function.admin_prefstab.php:228:		$this->CreateInputText($id,'input_logout_page',
function.admin_prefstab.php:229:				       $this->GetPreference('pageid_logout'), 25, 50));
function.admin_prefstab.php:231:$smarty->assign('prompt_after_verify_code',
function.admin_prefstab.php:232:		$this->Lang('prompt_after_verify_code'));
function.admin_prefstab.php:233:$smarty->assign('input_after_verify_code',
function.admin_prefstab.php:234:		$this->CreateInputText($id,'input_after_verify_code',
function.admin_prefstab.php:235:				       $this->GetPreference('pageid_afterverify'), 25, 50));
function.admin_prefstab.php:237:$smarty->assign('prompt_after_change_settings',
function.admin_prefstab.php:238:		$this->Lang('prompt_after_change_settings'));
function.admin_prefstab.php:239:$smarty->assign('input_after_change_settings',
function.admin_prefstab.php:240:		$this->CreateInputText($id,'input_after_change_settings',
function.admin_prefstab.php:241:				       $this->GetPreference('pageid_afterchangesettings'), 25, 50));
function.admin_prefstab.php:243:$smarty->assign('prompt_allow_repeated_logins',
function.admin_prefstab.php:244:		$this->Lang('prompt_allow_repeated_logins'));
function.admin_prefstab.php:245:$smarty->assign('input_allow_repeated_logins',
function.admin_prefstab.php:247:						$this->GetPreference('allow_repeated_logins')));
function.admin_prefstab.php:261:  $smarty->assign('prompt_usermanipulator',
function.admin_prefstab.php:262:		  $this->Lang('prompt_usermanipulator'));
function.admin_prefstab.php:263:  $smarty->assign('input_usermanipulator',
function.admin_prefstab.php:264:		  $this->CreateInputDropdown( $id, 'input_usermanipulator',
function.admin_prefstab.php:265:					      $usermanipulators, -1,
function.admin_prefstab.php:266:					      $this->GetPreference('usermanipulator','FrontEndUsers.api.php')));
function.admin_prefstab.php:269:$smarty->assign('prompt_image_destination_path',
function.admin_prefstab.php:270:				$this->Lang('prompt_image_destination_path'));
function.admin_prefstab.php:271:$smarty->assign('input_image_destination_path',
function.admin_prefstab.php:272:				$this->CreateInputText($id,'input_image_destination_path',
function.admin_prefstab.php:273:									   $this->GetPreference('image_destination_path'),40));
function.admin_prefstab.php:274:$smarty->assign('prompt_allowed_image_extensions',
function.admin_prefstab.php:275:				$this->Lang('prompt_allowed_image_extensions'));
function.admin_prefstab.php:276:$smarty->assign('input_allowed_image_extensions',
function.admin_prefstab.php:277:				$this->CreateInputText($id,'input_allowed_image_extensions',
function.admin_prefstab.php:278:						       $this->GetPreference('allowed_image_extensions'),40,40));
function.admin_prefstab.php:281:$notification_list[$this->Lang('OnLogin')] = 'OnLogin';
function.admin_prefstab.php:282:$notification_list[$this->Lang('OnLogout')] = 'OnLogout';
function.admin_prefstab.php:283:$notification_list[$this->Lang('OnExpireUser')] = 'OnExpireUser';
function.admin_prefstab.php:284:$notification_list[$this->Lang('OnCreateUser')] = 'OnCreateUser';
function.admin_prefstab.php:285:$notification_list[$this->Lang('OnDeleteUser')] = 'OnDeleteUser';
function.admin_prefstab.php:286:$notification_list[$this->Lang('OnUpdateUser')] = 'OnUpdateUser';
function.admin_prefstab.php:287:$notification_list[$this->Lang('OnCreateGroup')] = 'OnCreateGroup';
function.admin_prefstab.php:288:$notification_list[$this->Lang('OnUpdateGroup')] = 'OnUpdateGroup';
function.admin_prefstab.php:289:$notification_list[$this->Lang('OnDeleteGroup')] = 'OnDeleteGroup';
function.admin_prefstab.php:290:$smarty->assign('prompt_notifications',$this->Lang('prompt_notifications'));
function.admin_prefstab.php:291:$notifications = explode(',',$this->GetPreference('notifications',''));
function.admin_prefstab.php:292:$smarty->assign('input_notifications',
function.admin_prefstab.php:293:		$this->CreateInputSelectList($id,'notifications[]',$notification_list, $notifications));
function.admin_prefstab.php:295:$smarty->assign('prompt_notification_address',$this->Lang('prompt_notification_address'));
function.admin_prefstab.php:296:$smarty->assign('input_notification_address',
function.admin_prefstab.php:297:		$this->CreateInputText($id,'notification_address',
function.admin_prefstab.php:298:				       $this->GetPreference('notification_address'),50,255));
function.admin_prefstab.php:300:$smarty->assign('prompt_notification_subject',$this->Lang('prompt_notification_subject'));
function.admin_prefstab.php:301:$smarty->assign('input_notification_subject',
function.admin_prefstab.php:302:		$this->CreateInputText($id,'notification_subject',
function.admin_prefstab.php:303:				       $this->GetPreference('notification_subject'),50,255));
function.admin_prefstab.php:305:$smarty->assign('prompt_notification_template',$this->Lang('prompt_notification_template'));
function.admin_prefstab.php:306:$smarty->assign('input_notification_template',
function.admin_prefstab.php:307:		$this->CreateTextArea(false,$id,
function.admin_prefstab.php:308:				      $this->GetTemplate('notification_template'),
function.admin_prefstab.php:311:$smarty->assign('info_star',$this->Lang('info_star'));
function.admin_prefstab.php:312:$num = $this->CountTempCodeRecords();
function.admin_prefstab.php:315:      $smarty->assign('prompt_numresetrecords',
function.admin_prefstab.php:316:		      $this->Lang('prompt_numresetrecord'));
function.admin_prefstab.php:317:      $smarty->assign('data_numresetrecords', $num); //todo
function.admin_prefstab.php:318:      $smarty->assign('input_removeall',
function.admin_prefstab.php:319:		      $this->CreateInputSubmit($id,'input_removeall',
function.admin_prefstab.php:320:					       $this->Lang('removeall'),
function.admin_prefstab.php:321:					       'onclick="return confirm(\''.$this->Lang('areyousure').'\')"'));
function.admin_prefstab.php:322:      $smarty->assign('input_remove1week',
function.admin_prefstab.php:323:		      $this->CreateInputSubmit($id,'input_remove1week',
function.admin_prefstab.php:324:					       $this->Lang('remove1week'),
function.admin_prefstab.php:325:					       'onclick="return confirm(\''.$this->Lang('areyousure').'\')"'));
function.admin_prefstab.php:327:      $smarty->assign('input_remove1month',
function.admin_prefstab.php:328:		      $this->CreateInputSubmit($id,'input_remove1month',
function.admin_prefstab.php:329:					       $this->Lang('remove1month'),
function.admin_prefstab.php:330:					       'onclick="return confirm(\''.$this->Lang('areyousure').'\')"'));
function.admin_prefstab.php:332:$smarty->assign('endform',$this->CreateFormEnd());
function.admin_prefstab.php:333:echo $this->ProcessTemplate('adminprefs.tpl');
function.admin_propertiestab.php:3:#-------------------------------------------------------------------------
function.admin_propertiestab.php:10:#-------------------------------------------------------------------------
function.admin_propertiestab.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_propertiestab.php:14:#-------------------------------------------------------------------------
function.admin_propertiestab.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_propertiestab.php:36:#-------------------------------------------------------------------------
function.admin_propertiestab.php:42:      $this->smarty->assign('message', $message);
function.admin_propertiestab.php:45:  $this->smarty->assign('title',$this->Lang('properties'));
function.admin_propertiestab.php:49:  $keys = array_keys($this->types);
function.admin_propertiestab.php:51:  $defns = $this->GetPropertyDefns();
function.admin_propertiestab.php:55:	$propgroups = $this->GetPropertyGroupRelations($defn['name']);
function.admin_propertiestab.php:58:	if( $this->_HasSufficientPermissions('editprop')) 
function.admin_propertiestab.php:60:	    $onerow->name = 
function.admin_propertiestab.php:61:	      $this->CreateLink( $id, 'addprop', $returnid, $defn['name'],
function.admin_propertiestab.php:66:	    $onerow->name = $defn['name'];
function.admin_propertiestab.php:68:	$onerow->prompt = $defn['prompt'];
function.admin_propertiestab.php:69:	$onerow->type = $this->Lang($keys[$defn['type']]);
function.admin_propertiestab.php:70:	$onerow->length = $defn['length'];
function.admin_propertiestab.php:71:	$onerow->rowclass = $rowclass;
function.admin_propertiestab.php:73:	if( $this->_HasSufficientPermissions('editprop'))
function.admin_propertiestab.php:75:	    $onerow->editlink =
function.admin_propertiestab.php:76:	      $this->CreateLink ($id, 'addprop', $returnid,
function.admin_propertiestab.php:77:				 $gCms->variables['admintheme']->DisplayImage('icons/system/edit.gif',
function.admin_propertiestab.php:78:									      $this->Lang ('edit'), '', '', 'systemicon'),
function.admin_propertiestab.php:83:		$onerow->deletelink =
function.admin_propertiestab.php:84:		  $this->CreateLink ($id, 'do_deleteprop', $returnid,
function.admin_propertiestab.php:85:				     $gCms->variables['admintheme']->DisplayImage('icons/system/delete.gif',
function.admin_propertiestab.php:86:										  $this->Lang ('delete'), '', '', 'systemicon'),
function.admin_propertiestab.php:88:				     $this->Lang('confirm_delete_prop'));
function.admin_propertiestab.php:97:  $this->smarty->assign('nametext',$this->Lang('name'));
function.admin_propertiestab.php:98:  $this->smarty->assign('lengthtext',$this->Lang('length'));
function.admin_propertiestab.php:99:  $this->smarty->assign('prompttext',$this->Lang('prompt'));
function.admin_propertiestab.php:100:  $this->smarty->assign('typetext',$this->Lang('prompt_type'));
function.admin_propertiestab.php:101:  $this->smarty->assign('props',$rowarray);
function.admin_propertiestab.php:102:  $this->smarty->assign('propcount', count($rowarray));
function.admin_propertiestab.php:103:  $this->smarty->assign('propsfound',$this->Lang('propsfound'));
function.admin_propertiestab.php:105:  if( $this->_HasSufficientPermissions('addprop') )
function.admin_propertiestab.php:109:      $this->smarty->assign('addlink', 
function.admin_propertiestab.php:110:			    $this->CreateLink($id,'addprop',$returnid,
function.admin_propertiestab.php:111:					      $gCms->variables['admintheme']->DisplayImage('icons/system/newobject.gif',
function.admin_propertiestab.php:112:											   $this->Lang('addprop'),'','','systemicon'),
function.admin_propertiestab.php:114:			    $this->CreateLink( $id, 'addprop',
function.admin_propertiestab.php:116:					       $this->Lang('addprop'),
function.admin_propertiestab.php:123:  echo $this->ProcessTemplate('propertiesform.tpl');
function.admin_resetsession_template.php:3:#-------------------------------------------------------------------------
function.admin_resetsession_template.php:10:#-------------------------------------------------------------------------
function.admin_resetsession_template.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_resetsession_template.php:14:#-------------------------------------------------------------------------
function.admin_resetsession_template.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_resetsession_template.php:36:#-------------------------------------------------------------------------
function.admin_resetsession_template.php:39:if( !$this->_HasSufficientPermissions('templates') ) return;
function.admin_resetsession_template.php:41:$smarty->assign('startform',
function.admin_resetsession_template.php:42:		$this->CreateFormStart( $id, 'admin_resetsession_template'));
function.admin_resetsession_template.php:43:$smarty->assign('endform',$this->CreateFormEnd());
function.admin_resetsession_template.php:45:$smarty->assign('prompt_template1',$this->Lang('resetsession_template'));
function.admin_resetsession_template.php:46:$smarty->assign('input_template1',
function.admin_resetsession_template.php:47:		$this->CreateTextArea( false, $id,
function.admin_resetsession_template.php:48:			  $this->GetTemplate ('feusers_resetsession'),
function.admin_resetsession_template.php:51:$smarty->assign('submit',
function.admin_resetsession_template.php:52:		$this->CreateInputSubmit ($id, 'submit',$this->Lang('submit')));
function.admin_resetsession_template.php:53:$smarty->assign('defaults',
function.admin_resetsession_template.php:54:		$this->CreateInputSubmit ($id, 'defaults',
function.admin_resetsession_template.php:55:					  $this->Lang('defaults')));
function.admin_resetsession_template.php:57:echo $this->ProcessTemplate('resetsession_templateform.tpl');
function.admin_userstab.php:3:#-------------------------------------------------------------------------
function.admin_userstab.php:10:#-------------------------------------------------------------------------
function.admin_userstab.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_userstab.php:14:#-------------------------------------------------------------------------
function.admin_userstab.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_userstab.php:36:#-------------------------------------------------------------------------
function.admin_userstab.php:43:  if( $this->_HasSufficientPermissions('listusers') )
function.admin_userstab.php:51:	      $this->myRedirect( $id, 'admin_bulkactions', $returnid,
function.admin_userstab.php:62:	      $this->SetPreference('current_group', $params['filter_group'] );
function.admin_userstab.php:66:	      $this->SetPreference('current_regex', $params['filter_regex'] );
function.admin_userstab.php:70:	      $this->SetPreference('current_loggedinonly', $params['filter_loggedinonly'] );
function.admin_userstab.php:74:		  $this->SetPreference('current_loggedinonly', 0);
function.admin_userstab.php:78:	      $this->SetPreference('current_limit', $params['filter_limit'] );
function.admin_userstab.php:82:	      $this->SetPreference('current_sort', $params['filter_sortby'] );
function.admin_userstab.php:86:	      $this->SetPreference('current_propsel', $params['filter_propertysel'] );
function.admin_userstab.php:90:	      $this->SetPreference('current_propval', $params['filter_property'] );
function.admin_userstab.php:93:      $curgroup = $this->GetPreference('current_group', '');
function.admin_userstab.php:94:      $curregex = $this->GetPreference('current_regex', '');
function.admin_userstab.php:95:	  $currloggedinonly = $this->GetPreference('current_loggedinonly', 0);
function.admin_userstab.php:96:      $curlimit = $this->GetPreference('current_limit', 100);
function.admin_userstab.php:97:      $cursort  = $this->GetPreference('current_sort', '');
function.admin_userstab.php:98:      $curpropsel = $this->GetPreference('current_propsel', 'none');
function.admin_userstab.php:99:      $curpropval = $this->GetPreference('current_propval', ''); 
function.admin_userstab.php:103:      $groups1 = $this->GetGroupList();
function.admin_userstab.php:104:      $groups = array_merge( array("All Groups" => -1), $groups1 );
function.admin_userstab.php:115:      $defns1 = $this->GetPropertyDefns();
function.admin_userstab.php:134:      $smarty->assign( 'prompt_filter', $this->Lang('filter'));
function.admin_userstab.php:135:      $smarty->assign( 'prompt_sort', $this->Lang('sort'));
function.admin_userstab.php:136:      $smarty->assign( 'startform',
function.admin_userstab.php:137:			       $this->CreateFormStart( $id, 'defaultadmin'));
function.admin_userstab.php:138:      $smarty->assign( 'perm_removeusers',
function.admin_userstab.php:139:		       $this->_HasSufficientPermissions('removeusers')?1:0);
function.admin_userstab.php:140:      $smarty->assign( 'prompt_group', $this->Lang('group'));
function.admin_userstab.php:141:      $smarty->assign( 'usersfound', $this->Lang('usersfound'));
function.admin_userstab.php:142:      $smarty->assign( 'usersingroup', $this->Lang('usersingroup'));
function.admin_userstab.php:143:      $smarty->assign( 'filter_group',
function.admin_userstab.php:144:			       $this->CreateInputDropDown( $id, 'filter_group', $groups, -1,
function.admin_userstab.php:146:      $smarty->assign( 'prompt_userfilter', $this->Lang('userfilter'));
function.admin_userstab.php:147:      $smarty->assign( 'filter_regex', 
function.admin_userstab.php:148:			       $this->CreateInputText( $id, 'filter_regex',
function.admin_userstab.php:151:      $smarty->assign( 'prompt_propertyfiltersel',$this->Lang('propertyfilter'));
function.admin_userstab.php:152:      $smarty->assign( 'filter_propertysel',
function.admin_userstab.php:153:			       $this->CreateInputDropDown( $id, 'filter_propertysel',
function.admin_userstab.php:154:							     $defns, -1, $curpropsel ));
function.admin_userstab.php:155:      $smarty->assign( 'prompt_propertyfilter',$this->Lang('valueregex'));
function.admin_userstab.php:156:      $smarty->assign( 'filter_property',
function.admin_userstab.php:157:			       $this->CreateInputText( $id, 'filter_property',
function.admin_userstab.php:160:	  $smarty->assign( 'prompt_loggedinonly',
function.admin_userstab.php:161:					   $this->Lang('prompt_loggedinonly'));
function.admin_userstab.php:162:	  $smarty->assign( 'filter_loggedinonly',
function.admin_userstab.php:163:					   $this->CreateInputCheckbox($id,'filter_loggedinonly',
function.admin_userstab.php:165:      $smarty->assign( 'prompt_limit',
function.admin_userstab.php:166:			       $this->Lang('userlimit'));
function.admin_userstab.php:167:      $smarty->assign( 'filter_limit',
function.admin_userstab.php:168:			       $this->CreateInputDropDown( $id, 'filter_limit', $limits, -1,
function.admin_userstab.php:170:      $smarty->assign( 'prompt_sortby',
function.admin_userstab.php:171:			       $this->Lang('sortby'));
function.admin_userstab.php:172:      $smarty->assign( 'filter_sortby',
function.admin_userstab.php:173:			       $this->CreateInputDropDown( $id, 'filter_sortby', $sorts, -1,
function.admin_userstab.php:176:      $smarty->assign('input_select',
function.admin_userstab.php:177:			      $this->CreateInputSubmit( $id, 'filter',
function.admin_userstab.php:178:							  $this->Lang('applyfilter')));
function.admin_userstab.php:179:      $smarty->assign('input_hidden',
function.admin_userstab.php:180:			      $this->CreateInputHidden( $id, 'active_tab', 'users')
function.admin_userstab.php:182:      $smarty->assign ('endform', $this->CreateFormEnd ());
function.admin_userstab.php:185:      $users = $this->GetUsersInGroup( $curgroup, $curregex, $curlimit, $cursort,
function.admin_userstab.php:190:	  $db =& $this->GetDb();
function.admin_userstab.php:191:	  $this->_DisplayErrorPage ($id, $params, $returnid,
function.admin_userstab.php:192:				      $db->ErrorMsg() );
function.admin_userstab.php:197:      $numusers = $this->CountUsersInGroup( $curgroup );
function.admin_userstab.php:202:      $smarty->assign('numusers', $numusers );
function.admin_userstab.php:203:      if( $this->GetPreference('username_is_email') )
function.admin_userstab.php:205:	  $smarty->assign('usernametext', $this->Lang('prompt_email'));
function.admin_userstab.php:209:	  $smarty->assign('usernametext', $this->Lang('username'));
function.admin_userstab.php:211:      $smarty->assign('emailtext', $this->Lang('email'));
function.admin_userstab.php:212:      $smarty->assign('statustext', $this->Lang('status'));
function.admin_userstab.php:213:      $smarty->assign('createdtext', $this->Lang('created'));
function.admin_userstab.php:214:      $smarty->assign('expirestext', $this->Lang('expires'));
function.admin_userstab.php:220:	      $onerow->rowclass = $rowclass;
function.admin_userstab.php:221:	      $onerow->id = $row['id'];
function.admin_userstab.php:222:	      $onerow->created  = $row['createdate'];
function.admin_userstab.php:223:	      $onerow->username = $this->CreateLink($id, 'edituser', $returnid, $row['username'],
function.admin_userstab.php:225:	      $onerow->expires  = $row['expires'];
function.admin_userstab.php:226:	      if( $this->_HasSufficientPermissions('listusers') )
function.admin_userstab.php:228:		  $onerow->historylink =
function.admin_userstab.php:229:		    $this->CreateLink ($id, 'userhistory', $returnid,
function.admin_userstab.php:230:				       $gCms->variables['admintheme']->DisplayImage('icons/system/info.gif',
function.admin_userstab.php:231:										$this->Lang('history'),'','','systemicon'),
function.admin_userstab.php:235:	      if( $this->_HasSufficientPermissions('editusers') )
function.admin_userstab.php:237:		  $onerow->editlink =
function.admin_userstab.php:238:		    $this->CreateLink ($id, 'edituser', $returnid,
function.admin_userstab.php:239:				       $gCms->variables['admintheme']->DisplayImage('icons/system/edit.gif',
function.admin_userstab.php:240:										    $this->Lang ('edit'), '', '', 'systemicon'),
function.admin_userstab.php:244:				  $onerow->logoutlink =
function.admin_userstab.php:245:					  $this->CreateLink ($id,'admin_logout',$returnid,
function.admin_userstab.php:246:								 $gCms->variables['admintheme']->DisplayImage('icons/system/back.gif',
function.admin_userstab.php:247:								 $this->Lang('prompt_logout'),'','','systemicon'),
function.admin_userstab.php:253:	      if( $this->_HasSufficientPermissions('removeusers') )
function.admin_userstab.php:255:		  $onerow->deletelink = 
function.admin_userstab.php:256:		    $this->CreateLink ($id,'do_deleteuser',$returnid,
function.admin_userstab.php:257:				       $gCms->variables['admintheme']->DisplayImage('icons/system/delete.gif',
function.admin_userstab.php:258:										    $this->Lang ('delete'), '', '', 'systemicon'),
function.admin_userstab.php:260:				       $this->Lang ('areyousure'));
function.admin_userstab.php:268:      $smarty->assign('items',$rowarray);
function.admin_userstab.php:269:      $smarty->assign('itemcount', count($rowarray));
function.admin_userstab.php:272:  if( $this->_HasSufficientPermissions('adduser') )
function.admin_userstab.php:274:      if( $this->GetPreference('require_onegroup') == 0 ||
function.admin_userstab.php:277:	  $smarty->assign('addlink', 
function.admin_userstab.php:278:			  $this->CreateLink($id,'adduser',$returnid,
function.admin_userstab.php:279:					    $gCms->variables['admintheme']->DisplayImage('icons/system/newobject.gif',
function.admin_userstab.php:280:											 $this->Lang('adduser'),'','','systemicon'),
function.admin_userstab.php:282:			  $this->CreateLink( $id, 'adduser',
function.admin_userstab.php:284:					     $this->Lang('adduser'),
function.admin_userstab.php:291:	  $smarty->assign('addlink',
function.admin_userstab.php:292:				  $this->Lang('nogroups'));
function.admin_userstab.php:296:  echo $this->ProcessTemplate( 'userlist.tpl' );
function.admin_viewuser_template.php:3:#-------------------------------------------------------------------------
function.admin_viewuser_template.php:10:#-------------------------------------------------------------------------
function.admin_viewuser_template.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.admin_viewuser_template.php:14:#-------------------------------------------------------------------------
function.admin_viewuser_template.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.admin_viewuser_template.php:36:#-------------------------------------------------------------------------
function.admin_viewuser_template.php:40:if( !$this->_HasSufficientPermissions('templates') ) return;
function.admin_viewuser_template.php:42:$smarty->assign('startform',
function.admin_viewuser_template.php:43:		$this->CreateFormStart( $id, 'admin_setviewuser_template'));
function.admin_viewuser_template.php:44:$smarty->assign('endform',$this->CreateFormEnd());
function.admin_viewuser_template.php:46:$smarty->assign('prompt_template1',$this->Lang('viewuser_template'));
function.admin_viewuser_template.php:47:$smarty->assign('input_template1',
function.admin_viewuser_template.php:48:		$this->CreateTextArea( false, $id,
function.admin_viewuser_template.php:49:			  $this->GetTemplate ('feusers_viewuser'),
function.admin_viewuser_template.php:52:$smarty->assign('submit',
function.admin_viewuser_template.php:53:		$this->CreateInputSubmit ($id, 'submit',$this->Lang('submit')));
function.admin_viewuser_template.php:54:$smarty->assign('defaults',
function.admin_viewuser_template.php:55:		$this->CreateInputSubmit ($id, 'defaults',
function.admin_viewuser_template.php:56:					  $this->Lang('defaults')));
function.admin_viewuser_template.php:58:echo $this->ProcessTemplate('viewuser_templateform.tpl');
function.default_lostusernameform.php:3:#-------------------------------------------------------------------------
function.default_lostusernameform.php:10:#-------------------------------------------------------------------------
function.default_lostusernameform.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.default_lostusernameform.php:14:#-------------------------------------------------------------------------
function.default_lostusernameform.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.default_lostusernameform.php:36:#-------------------------------------------------------------------------
function.default_lostusernameform.php:40:$smarty =& $gCms->GetSmarty();
function.default_lostusernameform.php:45:    $smarty->assign('message',$message);
function.default_lostusernameform.php:50:    $smarty->assign('error',$error);
function.default_lostusernameform.php:53:$gid = $this->GetPreference('default_group',-1);
function.default_lostusernameform.php:56:    $gid = $this->GetGroupID( $params['lostun_group'] );
function.default_lostusernameform.php:59:	$this->_DisplayErrorPage( $id, $params, $returnid,
function.default_lostusernameform.php:60:				  $this->Lang('error_groupnotfound'));
function.default_lostusernameform.php:66:    $groups = $this->GetGroupList();
function.default_lostusernameform.php:71:$relns = $this->GetGroupPropertyRelations( $gid );
function.default_lostusernameform.php:74:    echo '<!-- FEU: Error - '.$relns[1].' -->';
function.default_lostusernameform.php:78:$captcha =& $this->GetModuleInstance('Captcha');
function.default_lostusernameform.php:81:    $smarty->assign('captcha_title', $this->Lang('captcha_title'));
function.default_lostusernameform.php:82:    $smarty->assign('input_captcha',
function.default_lostusernameform.php:83:		    $this->CreateInputText($id,'input_captcha','',10));
function.default_lostusernameform.php:84:    $smarty->assign('captcha', $captcha->getCaptcha());
function.default_lostusernameform.php:90:$smarty->assign('prompt_password',
function.default_lostusernameform.php:91:		$this->Lang('prompt_password'));
function.default_lostusernameform.php:92:$smarty->assign('input_password',
function.default_lostusernameform.php:93:		$this->CreateInputPassword($id,'feu_input_password','',
function.default_lostusernameform.php:94:		   $this->GetPreference('passwordfldlength')),
function.default_lostusernameform.php:95:		   $this->GetPreference('max_passwordlength'));
function.default_lostusernameform.php:110:      echo '<!-- FEU: ERROR - A Hidden/readonly field is required for lost username? -->';
function.default_lostusernameform.php:114:  $defn = $this->GetPropertyDefn( $onereln['name'] );
function.default_lostusernameform.php:117:  $onerow->name = 'input_'.$onereln['name'];
function.default_lostusernameform.php:118:  $onerow->id   = $id.$onerow->name;
function.default_lostusernameform.php:119:  $onerow->color = '';
function.default_lostusernameform.php:120:  $onerow->type = $defn['type'];
function.default_lostusernameform.php:121:  $onerow->marker = '';
function.default_lostusernameform.php:122:  $onerow->classname = $onereln['name'];
function.default_lostusernameform.php:124:  $onerow->hidden = RRUtils::myCreateInputHidden( $id, 
function.default_lostusernameform.php:134:      $onerow->control = $this->CreateInputText( $id, 'feu_'.$onerow->name,
function.default_lostusernameform.php:141:      $onerow->control = RRUtils::myCreateInputCheckbox( $id,
function.default_lostusernameform.php:142:							 'feu_'.$onerow->name,
function.default_lostusernameform.php:148:      $onerow->control = $this->CreateInputText( $id, 'feu_'.$onerow->name,
function.default_lostusernameform.php:155:      $onerow->control = $this->CreateTextArea( false, $id, '', 
function.default_lostusernameform.php:156:						'feu_'.$onerow->name );
function.default_lostusernameform.php:160:      $onerow->control = $this->CreateInputDropdown(
function.default_lostusernameform.php:162:						    'feu_'.$onerow->name,
function.default_lostusernameform.php:163:						    $this->GetSelectOptions($defn['name'], 1), 
function.default_lostusernameform.php:164:						    -1, 
function.default_lostusernameform.php:165:						    -1,
function.default_lostusernameform.php:172:	$onerow->control = $this->CreateInputSelectList(
function.default_lostusernameform.php:174:							'feu_'.$onerow->name.'[]', 
function.default_lostusernameform.php:175:							$this->GetSelectOptions($defn['name'], 1), 
function.default_lostusernameform.php:186:  $onerow->labelfor = $id.$onereln['name'];
function.default_lostusernameform.php:187:  $onerow->type = $defn['type'];
function.default_lostusernameform.php:188:  $onerow->length = $defn['length'];
function.default_lostusernameform.php:189:  $onerow->maxlength = $defn['maxlength'];
function.default_lostusernameform.php:190:  $onerow->prompt = $defn['prompt'];
function.default_lostusernameform.php:191:  $onerow->name = $onereln['name'];
function.default_lostusernameform.php:196:$smarty->assign('title',$this->Lang('title_lostusername'));
function.default_lostusernameform.php:197:$smarty->assign('startform',
function.default_lostusernameform.php:198:		$this->feCreateFormStart($id,'do_lostusername',
function.default_lostusernameform.php:201:$smarty->assign('endform', $this->CreateFormEnd());
function.default_lostusernameform.php:202:$smarty->assign('submit',
function.default_lostusernameform.php:203:		$this->CreateInputSubmit($id,'submit',$this->Lang('submit')));
function.default_lostusernameform.php:204:$smarty->assign('cancel',
function.default_lostusernameform.php:205:		$this->CreateInputSubmit($id,'cancel',$this->Lang('cancel')));
function.default_lostusernameform.php:210:    $hidden .= $this->CreateInputHidden($id,'lostun_group',$params['lostun_group']);
function.default_lostusernameform.php:214:    $hidden .= $this->CreateInputHidden($id,'input_returnto',
function.default_lostusernameform.php:219:    $smarty->assign('hidden',$hidden);
function.default_lostusernameform.php:221:$smarty->assign('formid',$id);
function.default_lostusernameform.php:222:$smarty->assign('controls', $rowarray);
function.default_lostusernameform.php:223:$smarty->assign('controlcount', count($rowarray));
function.default_lostusernameform.php:225:echo $this->ProcessTemplateFromDatabase('feusers_lostunform');
functions.php:3:#-------------------------------------------------------------------------
functions.php:10:#-------------------------------------------------------------------------
functions.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
functions.php:14:#-------------------------------------------------------------------------
functions.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
functions.php:36:#-------------------------------------------------------------------------
functions.php:134:	return -1;
functions.php:208:	$img = $gCms->config['root_url'].DIRECTORY_SEPARATOR.$image;
function.user_changesettings.php:3:#-------------------------------------------------------------------------
function.user_changesettings.php:10:#-------------------------------------------------------------------------
function.user_changesettings.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.user_changesettings.php:14:#-------------------------------------------------------------------------
function.user_changesettings.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.user_changesettings.php:36:#-------------------------------------------------------------------------
function.user_changesettings.php:39:$uid = $this->LoggedInId();
function.user_changesettings.php:43:    $this->_DisplayErrorPage( $id, $params, $returnid, 
function.user_changesettings.php:44:			      $this->Lang('error_notloggedin'));
function.user_changesettings.php:47:$result = $this->GetUserInfo( $uid );
function.user_changesettings.php:51:    $this->_DisplayErrorPage( $id, $params, $returnid, 
function.user_changesettings.php:59:    $this->smarty->assign('error', $params['error'] );
function.user_changesettings.php:63:    $this->smarty->assign('message', $params['message'] );
function.user_changesettings.php:67:$groups = $this->GetMemberGroupsArray( $uid );
function.user_changesettings.php:72:    $this->_DisplayErrorPage( $id, $params, $returnid, 
function.user_changesettings.php:73:			      $this->Lang('error_nogroups'));
function.user_changesettings.php:82:  $proprelations = $this->GetGroupPropertyRelations( $gid );
function.user_changesettings.php:90:    if( $this->GetPreference('require_onegroup') == 1 )
function.user_changesettings.php:94:	$this->_DisplayErrorPage( $id, $params, $returnid, 
function.user_changesettings.php:95:				  $this->Lang('error_onegrouprequired'));
function.user_changesettings.php:108:$onerow->name = 'username';
function.user_changesettings.php:109:$onerow->type = 0;
function.user_changesettings.php:110:$onerow->color = $this->GetPreference('required_field_color','blue');
function.user_changesettings.php:111:$onerow->marker = $this->GetPreference('required_field_marker','*');
function.user_changesettings.php:112:$onerow->required = 1;
function.user_changesettings.php:113:if ($this->GetPreference('username_is_email'))
function.user_changesettings.php:115:  $onerow->prompt = $this->Lang('prompt_email');
function.user_changesettings.php:119:  $onerow->prompt = $this->Lang('prompt_username');
function.user_changesettings.php:121:$onerow->control =$this->CreateInputText($id, 'feu_input_username', $val,
function.user_changesettings.php:122:					 $this->GetPreference('usernamefldlength'),
function.user_changesettings.php:123:					 $this->GetPreference('max_usernamelength'),
function.user_changesettings.php:125:$rowarray[$onerow->name] = $onerow;
function.user_changesettings.php:132:$onerow->name = 'password';
function.user_changesettings.php:133:$onerow->type = 0;
function.user_changesettings.php:134:$onerow->color = $this->GetPreference('required_field_color','blue');
function.user_changesettings.php:135:$onerow->marker = $this->GetPreference('required_field_marker','*');
function.user_changesettings.php:136:$onerow->required = 1;
function.user_changesettings.php:137:$onerow->prompt = $this->Lang('password');
function.user_changesettings.php:138:$onerow->control =$this->CreateInputPassword($id, 'feu_input_password', $val,
function.user_changesettings.php:139:					     $this->GetPreference('passwordfldlength'),
function.user_changesettings.php:140:					     $this->GetPreference('max_passwordlength'));
function.user_changesettings.php:141:$onerow->addtext =$this->Lang('info_emptypasswordfield');
function.user_changesettings.php:142:$rowarray[$onerow->name] = $onerow;
function.user_changesettings.php:149:$onerow->name = 'repeat_password';
function.user_changesettings.php:150:$onerow->type = 0;
function.user_changesettings.php:151:$onerow->color = $this->GetPreference('required_field_color','blue');
function.user_changesettings.php:152:$onerow->marker = $this->GetPreference('required_field_marker','*');
function.user_changesettings.php:153:$onerow->required = 1;
function.user_changesettings.php:154:$onerow->prompt = $this->Lang('repeatpassword');
function.user_changesettings.php:155:$onerow->control =$this->CreateInputPassword($id, 'feu_input_repeatpassword', 
function.user_changesettings.php:157:	 $this->GetPreference('passwordfldlength'),
function.user_changesettings.php:158:	 $this->GetPreference('max_passwordlength'));
function.user_changesettings.php:159:$onerow->addtext =$this->Lang('info_emptypasswordfield');
function.user_changesettings.php:160:$rowarray[$onerow->name] = $onerow;
function.user_changesettings.php:166:  $defn = $this->GetPropertyDefn( $prop['name'] );
function.user_changesettings.php:167:  $val = $this->GetUserPropertyFull( $prop['name'], $uid );
function.user_changesettings.php:184:  $onerow->name     = 'input_'.$prop['name'];
function.user_changesettings.php:185:  $onerow->id       = $id.$onerow->name;
function.user_changesettings.php:188:      $onerow->control = $this->CreateInputHidden( $id, 'feu_input_'.$prop['name'],$val);								   				   
function.user_changesettings.php:189:      $rowarray[$onerow->name] = $onerow;
function.user_changesettings.php:194:  if( $prop['required'] == 2 ) $color = $this->GetPreference('required_field_color','blue');
function.user_changesettings.php:196:  if( $prop['required'] == 2 ) $marker = $this->GetPreference('required_field_marker','*');
function.user_changesettings.php:197:  $onerow->required = ($prop['required'] == 2);
function.user_changesettings.php:198:  $onerow->status   = $prop['required'];
function.user_changesettings.php:199:  $onerow->type = $defn['type'];
function.user_changesettings.php:200:  $onerow->color    = $color;
function.user_changesettings.php:201:  $onerow->marker   = $marker;
function.user_changesettings.php:202:  $onerow->classname = $classname;
function.user_changesettings.php:205:  if (isset($params['feu_'.$onerow->name])) {
function.user_changesettings.php:206:    $val=$params['feu_'.$onerow->name];
function.user_changesettings.php:213:      $onerow->control = $this->CreateInputText( $id, 'feu_'.$onerow->name,
function.user_changesettings.php:220:      $onerow->control = RRUtils::myCreateInputCheckbox( $id, 
function.user_changesettings.php:221:							 'feu_'.$onerow->name,
function.user_changesettings.php:227:      $onerow->control = $this->CreateInputText( $id, 'feu_'.$onerow->name,
function.user_changesettings.php:243:      $onerow->control = $this->CreateTextArea($flag, $id, $val, 
function.user_changesettings.php:244:					       'feu_'.$onerow->name);
function.user_changesettings.php:248:      $onerow->control = $this->CreateInputDropdown(
function.user_changesettings.php:250:						    'feu_'.$onerow->name,
function.user_changesettings.php:251:						    $this->GetSelectOptions($defn['name'], 1), 
function.user_changesettings.php:252:						    -1, 
function.user_changesettings.php:260:	$onerow->control = $this->CreateInputSelectList(
function.user_changesettings.php:262:							'feu_'.$onerow->name.'[]', 
function.user_changesettings.php:263:							$this->GetSelectOptions($defn['name'], 1), 
function.user_changesettings.php:273:	$destDir1 = $gCms->config['uploads_path'].DIRECTORY_SEPARATOR;
function.user_changesettings.php:274:	$destDir1 .= $this->GetPreference('image_destination_path','feusers').DIRECTORY_SEPARATOR;
function.user_changesettings.php:275:	$destDir2 = $gCms->config['uploads_url'].DIRECTORY_SEPARATOR;
function.user_changesettings.php:276:	$destDir2 .= $this->GetPreference('image_destination_path','feusers').DIRECTORY_SEPARATOR;
function.user_changesettings.php:281:	    $onerow->image = '<img src="'.$file2.'" alt="'.$val.'"/>';
function.user_changesettings.php:282:	    $onerow->prompt2 = $this->Lang('prompt_clear');
function.user_changesettings.php:283:	    $onerow->control2 = $this->CreateInputCheckbox($id,
function.user_changesettings.php:284:							   'feu_'.$onerow->name.'_clear',
function.user_changesettings.php:287:	$onerow->control = $this->CreateInputHidden($id,'feu_'.$onerow->name,$val).
function.user_changesettings.php:288:	  $this->CreateFileUploadInput($id,'feu_'.$onerow->name, '', $defn['length']);
function.user_changesettings.php:294:	$onerow->control = $this->CreateInputRadioGroup($id, 'feu_'.$onerow->name,
function.user_changesettings.php:295:							$this->GetSelectOptions($defn['name'],1),
function.user_changesettings.php:304:	$parms['prefix'] = $id.'feu_'.$onerow->name;
function.user_changesettings.php:306:	$parms['start_year'] = "-5";
function.user_changesettings.php:328:	$onerow->control = $this->ProcessTemplateFromData($str);
function.user_changesettings.php:332:  $onerow->labelfor = $id.$prop['name'];
function.user_changesettings.php:333:  $onerow->type = $defn['type'];
function.user_changesettings.php:334:  $onerow->length = $defn['length'];
function.user_changesettings.php:335:  $onerow->maxlength = $defn['maxlength'];
function.user_changesettings.php:336:  $onerow->prompt = $defn['prompt'];
function.user_changesettings.php:341:$this->smarty->assign('title',$this->Lang('user_settings'));
function.user_changesettings.php:342:$this->smarty->assign('startform',
function.user_changesettings.php:343:		      $this->feCreateFormStart($id,'do_userchangesettings',
function.user_changesettings.php:345:					       'multipart/form-data' ));
function.user_changesettings.php:346:$this->smarty->assign('endform',
function.user_changesettings.php:347:		      $this->CreateFormEnd());
function.user_changesettings.php:348:$this->smarty->assign('submit',
function.user_changesettings.php:349:		      $this->CreateInputSubmit($id, 'feu_submit',$this->Lang('submit')));
function.user_changesettings.php:350:$this->smarty->assign('cancel',
function.user_changesettings.php:351:		      $this->CreateInputSubmit($id, 'feu_cancel',$this->Lang('cancel')));
function.user_changesettings.php:355:    $this->smarty->assign('hidden',
function.user_changesettings.php:356:			  $this->CreateInputHidden($id,'feu_input_returnto',
function.user_changesettings.php:359:$this->smarty->assign('formid',$id);
function.user_changesettings.php:360:$this->smarty->assign('controls', $rowarray);
function.user_changesettings.php:361:$this->smarty->assign('controlcount', count($rowarray));
function.user_changesettings.php:363:echo $this->ProcessTemplateFromDatabase('feusers_changesettingsform');
function.user_forgotpassword.php:3:#-------------------------------------------------------------------------
function.user_forgotpassword.php:10:#-------------------------------------------------------------------------
function.user_forgotpassword.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.user_forgotpassword.php:14:#-------------------------------------------------------------------------
function.user_forgotpassword.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.user_forgotpassword.php:36:#-------------------------------------------------------------------------
function.user_forgotpassword.php:48:    $this->smarty->assign('error',$error);
function.user_forgotpassword.php:53:    $this->smarty->assign('message',$message);
function.user_forgotpassword.php:59:    $this->smarty->assign('startform',
function.user_forgotpassword.php:60:			  $this->feCreateFormStart( $id, 'do_forgotpw', $returnid ));
function.user_forgotpassword.php:61:    $this->smarty->assign('endform',
function.user_forgotpassword.php:62:			  $this->CreateFormEnd());
function.user_forgotpassword.php:63:    $this->smarty->assign('title',
function.user_forgotpassword.php:64:			  $this->Lang('forgotpw'));
function.user_forgotpassword.php:65:    $this->smarty->assign('lostpw_message',
function.user_forgotpassword.php:66:			  $this->Lang('lostpw_message'));
function.user_forgotpassword.php:67:    $this->smarty->assign('prompt_username',
function.user_forgotpassword.php:68:			  $this->Lang('prompt_username'));
function.user_forgotpassword.php:69:    $this->smarty->assign('input_label',$id);
function.user_forgotpassword.php:70:    $this->smarty->assign('input_username',
function.user_forgotpassword.php:71:			  $this->CreateInputText( $id, 'input_username',
function.user_forgotpassword.php:73:						  $this->GetPreference('usernamefldlength'), 
function.user_forgotpassword.php:74:						  $this->GetPreference('max_usernamelength')));
function.user_forgotpassword.php:75:    $this->smarty->assign('submit',
function.user_forgotpassword.php:76:			  $this->CreateInputSubmit($id, 'submit',$this->Lang('submit')));
function.user_forgotpassword.php:77:    $this->smarty->assign('cancel',
function.user_forgotpassword.php:78:			  $this->CreateInputSubmit($id, 'cancel',$this->Lang('cancel')));
function.user_forgotpassword.php:81:	$this->smarty->assign('hidden',
function.user_forgotpassword.php:82:			      $this->CreateInputHidden($id,'input_returnto',$params['returnto']));
function.user_forgotpassword.php:85:echo $this->ProcessTemplateFromDatabase( 'feusers_forgotpasswordform' );
function.user_loginform.php:3:#-------------------------------------------------------------------------
function.user_loginform.php:10:#-------------------------------------------------------------------------
function.user_loginform.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.user_loginform.php:14:#-------------------------------------------------------------------------
function.user_loginform.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.user_loginform.php:36:#-------------------------------------------------------------------------
function.user_loginform.php:40:$smarty =& $gCms->GetSmarty();
function.user_loginform.php:43:$captcha =& $this->GetModuleInstance('Captcha');
function.user_loginform.php:46:    $smarty->assign('captcha_title', $this->Lang('captcha_title'));
function.user_loginform.php:47:    $smarty->assign('input_captcha',
function.user_loginform.php:48:		    $this->CreateInputText($id,'input_captcha','',10));
function.user_loginform.php:49:    $smarty->assign('captcha', $captcha->getCaptcha());
function.user_loginform.php:67:$smarty->assign('error', isset($params['error']) ? $params['error'] : '');
function.user_loginform.php:68:$smarty->assign('startform', 
function.user_loginform.php:69:		$this->feCreateFormStart( $id, 'do_login', $returnid, $inline ));
function.user_loginform.php:70:$smarty->assign('id_username',$id.'feu_input_username');
function.user_loginform.php:71:if( $this->GetPreference('username_is_email') )
function.user_loginform.php:73:    $smarty->assign('prompt_username', $this->Lang('prompt_email'));
function.user_loginform.php:77:    $smarty->assign('prompt_username', $this->Lang('prompt_username'));
function.user_loginform.php:79:$smarty->assign('input_username', 
function.user_loginform.php:80:		$this->CreateInputText( $id, 'feu_input_username',
function.user_loginform.php:82:					$this->GetPreference('usernamefldlength'),
function.user_loginform.php:83:					$this->GetPreference('max_usernamelength')));
function.user_loginform.php:85:$smarty->assign('input_label', $id );
function.user_loginform.php:86:$smarty->assign('id_password',$id.'feu_input_password');
function.user_loginform.php:87:$smarty->assign('prompt_password', $this->Lang('prompt_password'));
function.user_loginform.php:88:$smarty->assign('input_password',
function.user_loginform.php:89:		      $this->CreateInputPassword($id, 'feu_input_password',
function.user_loginform.php:91:						 $this->GetPreference('passwordfldlength'), 
function.user_loginform.php:92:						 $this->GetPreference('max_passwordlength')));
function.user_loginform.php:94:$smarty->assign('prompt_rememberme',$this->Lang('prompt_rememberme'));
function.user_loginform.php:95:$smarty->assign('id_rememberme',$id.'feu_rememberme');
function.user_loginform.php:97:if( $this->GetPreference('usecookiestoremember') &&
function.user_loginform.php:98:    $this->GetPreference('cookiename') != '' &&
function.user_loginform.php:101:    $smarty->assign('input_rememberme',
function.user_loginform.php:102:		    $this->CreateInputCheckbox($id,'feu_rememberme',1,
function.user_loginform.php:106:$smarty->assign('input_submit',
function.user_loginform.php:107:		      $this->CreateInputSubmit($id, 'feu_btn_login',
function.user_loginform.php:108:					       $this->GetPreference('signin_button',$this->Lang('login')), 'class="signin_button"'));
function.user_loginform.php:114:$page = $this->GetPreference('pageidforgotpasswd');
function.user_loginform.php:120:        $smarty->assign('link_forgot','<!-- Error could not determine page from alias/id -->');
function.user_loginform.php:125:        $smarty->assign('link_forgot',
function.user_loginform.php:126:			$this->CreateLink($id,'default',$pid,
function.user_loginform.php:127:					  $this->Lang('forgotpw'),
function.user_loginform.php:129:	//nuno-dev-Pretty Url's
function.user_loginform.php:131:	$forgot_feu = $this->CreateLink($id, 'default', $pid,  '',
function.user_loginform.php:135:	$this->smarty->assign('url_forgot',$forgot_feu);
function.user_loginform.php:138:	  	$smarty->assign('url_forgot',
function.user_loginform.php:139:	  			$this->CreateLink($id,'default',$pid,'',
function.user_loginform.php:148:	$smarty->assign('link_lostun',
function.user_loginform.php:149:			$this->CreateLink($id,'default',$pid,
function.user_loginform.php:150:					  $this->Lang('lostusername'),
function.user_loginform.php:152:					  	//nuno-dev-Pretty Url's
function.user_loginform.php:154:	$lostun_feu = $this->CreateLink($id, 'default', $pid,  '',
function.user_loginform.php:158:	$this->smarty->assign('url_lostun',$lostun_feu);
function.user_loginform.php:161:	  	$smarty->assign('url_lostun',
function.user_loginform.php:162:			$this->CreateLink($id,'default',$pid,'',
function.user_loginform.php:174:     $smarty->assign('link_forgot',
function.user_loginform.php:175:		     $this->CreateFrontendLink($id,$returnid,'default',
function.user_loginform.php:176:				       $this->Lang('forgotpw'),
function.user_loginform.php:178:	//nuno-dev-Pretty Url's
function.user_loginform.php:180:	$forgot_feu = $this->CreateLink($id, 'default', $returnid,  '',
function.user_loginform.php:184:	$this->smarty->assign('url_forgot',$forgot_feu);
function.user_loginform.php:187:	  	$$smarty->assign('url_forgot',
function.user_loginform.php:188:		     $this->CreateLink($id,'default',$returnid,'',
function.user_loginform.php:195:        $smarty->assign('link_lostun',
function.user_loginform.php:196:		     $this->CreateFrontendLink($id,$returnid,'default',
function.user_loginform.php:197:				       $this->Lang('lostusername'),
function.user_loginform.php:200:				       	//nuno-dev-Pretty Url's
function.user_loginform.php:202:	$lostun_feu = $this->CreateLink($id, 'default', $returnid,  '',
function.user_loginform.php:206:	$this->smarty->assign('url_lostun',$lostun_feu);
function.user_loginform.php:209:	  	 $smarty->assign('url_lostun',
function.user_loginform.php:210:		     $this->CreateLink($id,'default',$returnid,'',
function.user_loginform.php:217:  $smarty->assign('endform', '<div>'.$this->CreateInputHidden($id, 'only_groups', $params['only_groups']) .'</div>'. $this->CreateFormEnd());
function.user_loginform.php:220:   $smarty->assign('endform', $this->CreateFormEnd());
function.user_loginform.php:222:echo $this->ProcessTemplateFromDatabase('feusers_loginform');
function.user_logoutform.php:3:#-------------------------------------------------------------------------
function.user_logoutform.php:10:#-------------------------------------------------------------------------
function.user_logoutform.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
function.user_logoutform.php:14:#-------------------------------------------------------------------------
function.user_logoutform.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
function.user_logoutform.php:36:#-------------------------------------------------------------------------
function.user_logoutform.php:39:    $uid = $this->LoggedInId();
function.user_logoutform.php:41:    $username = $this->LoggedInName();
function.user_logoutform.php:44:    $groups = $this->GetMemberGroupsArray( $uid );
function.user_logoutform.php:45:    $groupname = $this->GetGroupName( $groups[0]['groupid'] );
function.user_logoutform.php:47:    $this->smarty->assign('prompt_loggedin',
function.user_logoutform.php:48:			  $this->Lang('msg_currentlyloggedinas'));
function.user_logoutform.php:49:    $this->smarty->assign('userid', $uid);
function.user_logoutform.php:50:    $this->smarty->assign('username', $username);
function.user_logoutform.php:52:    $this->smarty->assign('link_logout',
function.user_logoutform.php:53:			  $this->CreateFrontendLink($id,$returnid,"logout",
function.user_logoutform.php:54:						    $this->Lang('logout')));
function.user_logoutform.php:55:   //nuno-dev-Pretty Url's
function.user_logoutform.php:57:	$logout_feu = $this->CreateLink($id, 'logout', $returnid,  '',
function.user_logoutform.php:60:	$this->smarty->assign('url_logout', $logout_feu);
function.user_logoutform.php:62:    $page = $this->GetPreference('pageid_changesettings');
function.user_logoutform.php:68:        $this->smarty->assign('link_changesettings','<!-- Error could not determine page from alias/id -->');
function.user_logoutform.php:72:        $this->smarty->assign('link_changesettings',
function.user_logoutform.php:73:			      $this->CreateLink( $id, 'default', $pageid,
function.user_logoutform.php:74:						 $this->Lang('prompt_changesettings'),
function.user_logoutform.php:77:		//nuno-dev-Pretty Url's
function.user_logoutform.php:79:	$changesettings_feu = $this->CreateLink($id, 'default', $pageid,  '',
function.user_logoutform.php:83:	$this->smarty->assign('url_changesettings',$changesettings_feu);
function.user_logoutform.php:89:       $this->smarty->assign('link_changesettings',
function.user_logoutform.php:90:			  $this->CreateLink($id,'default',$returnid,
function.user_logoutform.php:91:					    $this->Lang('prompt_changesettings'),
function.user_logoutform.php:93:      //nuno-dev-Pretty Url's
function.user_logoutform.php:95:	$changesettings_feu = $this->CreateLink($id, 'default', $returnid,  '',
function.user_logoutform.php:99:	$this->smarty->assign('url_changesettings',$changesettings_feu);
function.user_logoutform.php:102:    $props = $this->GetUserProperties( $this->LoggedInId() );
function.user_logoutform.php:107:	    $this->smarty->assign($p['title'],$p['data']);
function.user_logoutform.php:110:    echo $this->ProcessTemplateFromDatabase('feusers_logoutform');
method.install.php:3:#-------------------------------------------------------------------------
method.install.php:10:#-------------------------------------------------------------------------
method.install.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
method.install.php:14:#-------------------------------------------------------------------------
method.install.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
method.install.php:36:#-------------------------------------------------------------------------
method.install.php:40:    $db =& $this->GetDb();
method.install.php:53:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_users", 
method.install.php:55:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:56:    $db->CreateSequence( cms_db_prefix()."module_feusers_users_seq" );
method.install.php:64:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_groups",
method.install.php:66:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:67:    $db->CreateSequence( cms_db_prefix()."module_feusers_groups_seq" );
method.install.php:75:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_loggedin",
method.install.php:77:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:84:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_belongs",
method.install.php:86:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:97:    $sqlarray = $dict->CreateTableSql(cms_db_prefix()."module_feusers_propdefn",
method.install.php:99:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:108:    $sqlarray = $dict->CreateTableSql(cms_db_prefix()."module_feusers_dropdowns",
method.install.php:110:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:121:    $sqlarray = $dict->CreateTableSql(cms_db_prefix()."module_feusers_grouppropmap",
method.install.php:123:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:132:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_properties",
method.install.php:134:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:135:    $db->CreateSequence( cms_db_prefix()."module_feusers_properties_seq" );
method.install.php:142:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_tempcode",
method.install.php:144:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:153:    $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_history",
method.install.php:155:    $dict->ExecuteSQLArray( $sqlarray );
method.install.php:159:    $this->SetTemplate('feusers_loginform', file_get_contents($fn) );
method.install.php:161:    $this->SetTemplate('feusers_logoutform', $this->dflt_logoutformtemplate);
method.install.php:164:    $this->SetTemplate('feusers_changesettingsform', file_get_contents($fn) );
method.install.php:167:    $this->SetTemplate('feusers_forgotpasswordform',file_get_contents($fn));
method.install.php:169:    $this->SetTemplate('feusers_forgotpasswordemailform', $this->dflt_forgotpasswordtemplate2);
method.install.php:172:    $this->SetTemplate('feusers_forgotpasswordverifyform',file_get_contents($fn));
method.install.php:178:    $this->SetTemplate('feusers_lostunform',$template);
method.install.php:185:    $this->SetTemplate('feusers_lostunform_confirm',$template);
method.install.php:192:    $this->SetTemplate('notification_template',$template);
method.install.php:199:    $this->SetTemplate('feusers_viewuser',$template);
method.install.php:206:    $this->SetTemplate('feusers_resetsession',$template);
method.install.php:210:    $this->SetPreference('min_passwordlength', 6);
method.install.php:211:    $this->SetPreference('max_passwordlength', 20);
method.install.php:212:    $this->SetPreference('min_usernamelength', 4);
method.install.php:213:    $this->SetPreference('max_usernamelength', 40);
method.install.php:214:    $this->SetPreference('user_session_expires', 1800);
method.install.php:215:    $this->SetPreference('cookie_keepalive',0);
method.install.php:216:    $this->SetPreference('default_group', -1);
method.install.php:217:    $this->SetPreference('required_field_marker', '*');
method.install.php:218:    $this->SetPreference('required_field_color', 'blue');
method.install.php:219:    $this->SetPreference('require_onegroup', 1);
method.install.php:220:    $this->SetPreference('hidden_field_marker', '!');
method.install.php:221:    $this->SetPreference('hidden_field_color', 'green');
method.install.php:222:    $this->SetPreference('pageid_forgotpasswd', '');
method.install.php:223:    $this->SetPreference('pageid_changesettings', '');
method.install.php:224:    $this->SetPreference('pageid_login','');
method.install.php:225:    $this->SetPreference('pageid_logout','');
method.install.php:226:    $this->SetPreference('pageid_afterverify','');
method.install.php:227:    $this->SetPreference('allow_duplicate_emails',0); 
method.install.php:228:    $this->SetPreference('username_is_email',1);
method.install.php:229:    $this->SetPreference('passwordfldlength', 20);
method.install.php:230:    $this->SetPreference('usernamefldlength', 40);
method.install.php:231:    $this->SetPreference('allow_repeated_logins',0);
method.install.php:232:    $this->SetPreference('image_destination_path','feusers');
method.install.php:233:    $this->SetPreference('allowed_image_extensions','.gif,.png,.jpg');
method.install.php:234:    $this->SetPreference('usecookiestoremember',0);
method.install.php:235:    $this->SetPreference('cookiename',0);
method.install.php:236:    $this->SetPreference('notification_subject',$this->Lang('feu_event_notification'));
method.install.php:237:    $this->SetPreference('expireage_months',60);
method.install.php:240:    $this->CreateEvent( 'OnLogin' );
method.install.php:241:    $this->CreateEvent( 'OnLogout' );
method.install.php:242:    $this->CreateEvent( 'OnExpireUser' );
method.install.php:243:    $this->CreateEvent( 'OnCreateUser' );
method.install.php:244:    $this->CreateEvent( 'OnDeleteUser' );
method.install.php:245:    $this->CreateEvent( 'OnUpdateUser' );
method.install.php:246:    $this->CreateEvent( 'OnCreateGroup' );
method.install.php:247:    $this->CreateEvent('OnUpdateGroup');
method.install.php:248:    $this->CreateEvent( 'OnDeleteGroup' );
method.install.php:250:    $this->AddEventHandler( 'Core', 'ContentPostRender', false );
method.install.php:253:    $this->CreatePermission('Modify FrontEndUserProps',
method.uninstall.php:3:#-------------------------------------------------------------------------
method.uninstall.php:10:#-------------------------------------------------------------------------
method.uninstall.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
method.uninstall.php:14:#-------------------------------------------------------------------------
method.uninstall.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
method.uninstall.php:36:#-------------------------------------------------------------------------
method.uninstall.php:39:$db =& $this->GetDb();
method.uninstall.php:41:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_users" );
method.uninstall.php:42:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:43:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_groups" );
method.uninstall.php:44:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:45:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_loggedin" );
method.uninstall.php:46:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:47:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_belongs" );
method.uninstall.php:48:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:49:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_properties" );
method.uninstall.php:50:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:51:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_propdefn" );
method.uninstall.php:52:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:53:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_dropdowns" );
method.uninstall.php:54:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:55:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_grouppropmap" );
method.uninstall.php:56:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:57:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_tempcode" );
method.uninstall.php:58:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:59:$sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_history" );
method.uninstall.php:60:$dict->ExecuteSQLArray($sqlarray);
method.uninstall.php:62:$db->DropSequence( cms_db_prefix()."module_feusers_users_seq" );
method.uninstall.php:63:$db->DropSequence( cms_db_prefix()."module_feusers_groups_seq" );
method.uninstall.php:64:$db->DropSequence( cms_db_prefix()."module_feusers_properties_seq" );
method.uninstall.php:67:$this->DeleteTemplate();
method.uninstall.php:70:$this->RemovePreference();
method.uninstall.php:73:$this->RemovePermission('Modify FrontEndUserProps');
method.uninstall.php:75:// FEUsers-specific permissions ... may or may not exist
method.uninstall.php:76:$this->RemovePermission('FEU Add Users');
method.uninstall.php:77:$this->RemovePermission('FEU Modify Users');
method.uninstall.php:78:$this->RemovePermission('FEU Remove Users');
method.uninstall.php:79:$this->RemovePermission('FEU Add Groups');
method.uninstall.php:80:$this->RemovePermission('FEU Modify Groups');
method.uninstall.php:81:$this->RemovePermission('FEU Modify Group Assignments');
method.uninstall.php:82:$this->RemovePermission('FEU Remove Groups');
method.uninstall.php:83:$this->RemovePermission('FEU Modify Site Preferences');
method.uninstall.php:84:$this->RemovePermission('FEU Modify FrontEndUserProps');
method.uninstall.php:85:$this->RemovePermission('FEU Modify Templates');
method.uninstall.php:88:$this->RemoveEvent( 'OnLogin' );
method.uninstall.php:89:$this->RemoveEvent( 'OnLogout' );
method.uninstall.php:90:$this->RemoveEvent( 'OnExpireUser' );
method.uninstall.php:91:$this->RemoveEvent( 'OnCreateUser' );
method.uninstall.php:92:$this->RemoveEvent( 'OnDeleteUser' );
method.uninstall.php:93:$this->RemoveEvent( 'OnCreateGroup' );
method.uninstall.php:94:$this->RemoveEvent( 'OnDeleteGroup' );
method.uninstall.php:95:$this->RemoveEvent( 'OnUpdateUser' );
method.upgrade.php:3:#-------------------------------------------------------------------------
method.upgrade.php:10:#-------------------------------------------------------------------------
method.upgrade.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
method.upgrade.php:14:#-------------------------------------------------------------------------
method.upgrade.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
method.upgrade.php:36:#-------------------------------------------------------------------------
method.upgrade.php:39:$db =& $this->GetDb();
method.upgrade.php:46:      $this->CreatePermission('Modify FrontEndUserProps',
method.upgrade.php:48:      $this->SetTemplate('feusers_forgotpasswordform', $this->dflt_forgotpasswordtemplate1);
method.upgrade.php:49:      $this->SetTemplate('feusers_forgotpasswordemailform', $this->dflt_forgotpasswordtemplate2);
method.upgrade.php:50:      $this->SetTemplate('feusers_forgotpasswordverifyform', $this->dflt_forgotpasswordtemplate3);
method.upgrade.php:58:      $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_tempcode",
method.upgrade.php:60:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:66:      $this->SetPreference('pageid_forgotpasswd', '');
method.upgrade.php:67:      $this->SetPreference('pageid_changesettings', '');
method.upgrade.php:68:      $this->SetPreference('pageid_login','');
method.upgrade.php:69:      $this->SetPreference('pageid_logout','');
method.upgrade.php:86:      $sqlarray = $dict->CreateTableSql(cms_db_prefix()."module_feusers_dropdowns",
method.upgrade.php:88:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:92:      $dbresult = $db->Execute( $q );
method.upgrade.php:98:      $sqlarray = $dict->AddcolumnSQL(cms_db_prefix()."module_feusers_propdefn",
method.upgrade.php:100:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:105:      $this->SetPreference('allow_duplicate_emails',1);
method.upgrade.php:110:      $this->SetPreference('passwordfldlength', 20);
method.upgrade.php:111:      $this->SetPreference('usernamefldlength', 20);
method.upgrade.php:118:      $this->CreateEvent( 'OnLogin' );
method.upgrade.php:119:      $this->CreateEvent( 'OnLogout' );
method.upgrade.php:120:      $this->CreateEvent( 'OnExpireUser' );
method.upgrade.php:121:      $this->CreateEvent( 'OnCreateUser' );
method.upgrade.php:122:      $this->CreateEvent( 'OnDeleteUser' );
method.upgrade.php:123:      $this->CreateEvent( 'OnCreateGroup' );
method.upgrade.php:124:      $this->CreateEvent( 'OnDeleteGroup' );
method.upgrade.php:127:      $this->RemovePreference('allow_repeated_logins',1);
method.upgrade.php:138:      $sqlarray = $dict->CreateTableSQL(cms_db_prefix()."module_feusers_history",
method.upgrade.php:140:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:146:      $sqlarray = $dict->ChangeTableSQL(cms_db_prefix()."module_feusers_dropdowns",
method.upgrade.php:148:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:153:      $this->CreateEvent( 'OnUpdateUser' );
method.upgrade.php:159:      $sqlarray = $dict->DropTableSQL( cms_db_prefix().
method.upgrade.php:161:      $dict->ExecuteSQLArray($sqlarray);
method.upgrade.php:170:      $sqlarray = $dict->CreateTableSQL(cms_db_prefix().
method.upgrade.php:173:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:180:      $sqlarray = $dict->AddcolumnSQL(cms_db_prefix()."module_feusers_grouppropmap",
method.upgrade.php:182:      $dict->ExecuteSQLArray( $sqlarray);
method.upgrade.php:184:      $this->SetPreference('pageid_afterverify','');
method.upgrade.php:189:      $this->SetPreference('notification_subject',$this->Lang('feu_event_notification'));
method.upgrade.php:194:	  $this->SetTemplate('notification_template',$template);
method.upgrade.php:213:      $sqlarray = $dict->CreateTableSQL($tmp_name,$flds,$taboptarray);
method.upgrade.php:214:      $dict->ExecuteSQLArray( $sqlarray );
method.upgrade.php:219:      $db->Execute($query);
method.upgrade.php:222:      $sqlarray = $dict->DropTableSQL( cms_db_prefix()."module_feusers_properties" );
method.upgrade.php:223:      $dict->ExecuteSQLArray($sqlarray);
method.upgrade.php:226:      $sqlarray = $dict->RenameTableSQL($tmp_name,$real_name);
method.upgrade.php:227:      $dict->ExecuteSQLArray($sqlarray);
method.upgrade.php:235:	$this->SetTemplate('feusers_viewuser',$template);
method.upgrade.php:245:      $db =& $this->GetDb();
method.upgrade.php:247:      $sqlarray = $dict->AlterColumnSQL(cms_db_prefix()."module_feusers_propdefn", "prompt C(255) NOT NULL");
method.upgrade.php:248:      $dict->ExecuteSQLArray($sqlarray);
method.upgrade.php:255:      $db =& $this->GetDb();
method.upgrade.php:257:      $sqlarray = $dict->AlterColumnSQL(cms_db_prefix().'module_feusers_loggedin', "sessionid C(255)");
method.upgrade.php:258:      $dict->ExecuteSQLArray($sqlarray);
method.upgrade.php:263:      $db =& $this->GetDb();
method.upgrade.php:265:      $sqlarray = $dict->AddcolumnSQL(cms_db_prefix()."module_feusers_propdefn",
method.upgrade.php:267:      $dict->ExecuteSQLArray($sqlarray);
method.upgrade.php:277:      $this->AddEventHandler( 'Core', 'ContentPostRender', false );
method.upgrade.php:291:	  $this->SetTemplate('feusers_resetsession',$template);
Random.php:3:#-------------------------------------------------------------------------
Random.php:10:#-------------------------------------------------------------------------
Random.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
Random.php:14:#-------------------------------------------------------------------------
Random.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
Random.php:36:#-------------------------------------------------------------------------
Random.php:86:		$this->_vnum = $num;
Random.php:87:		$this->_vnot = $not;
Random.php:89:			$this->_vcrs = "0123456789".
Random.php:93:			$this->_vcrs = $crs;
Random.php:94:			if(($num || $not) && !$this->_rec($crs, $num, $not)){
Random.php:99:				trigger_error("Class Random - String input [ ".$crs." ] doesn't have ".$err, E_USER_ERROR);
Random.php:139:		if(!(is_int($len) && $len > 0)) return $this->_vcrs;
Random.php:141:		$cnt = strlen($this->_vcrs)-1;
Random.php:142:		for($i=0;$i<$len;$i++) $ret .= $this->_vcrs{rand(0, $cnt)};
Random.php:143:		if($this->_vnum || $this->_vnot) return $this->_rec($ret, $this->_vnum, $this->_vnot) ? $ret : Random::get($len);
UserManipulator.class.php:3:#-------------------------------------------------------------------------
UserManipulator.class.php:10:#-------------------------------------------------------------------------
UserManipulator.class.php:11:# CMS - CMS Made Simple is (c) 2005 by Ted Kulp (wishy@cmsmadesimple.org)
UserManipulator.class.php:14:#-------------------------------------------------------------------------
UserManipulator.class.php:33:# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
UserManipulator.class.php:36:#-------------------------------------------------------------------------
UserManipulator.class.php:49:    $this->mod =& $the_module;
UserManipulator.class.php:55:    return $this->mod->GetDb();
UserManipulator.class.php:61:    return $this->mod;
UserManipulator.class.php:586:    if ($this->LoggedInId()==false) return false; else return true;
